diff --git a/node_modules/@uniswap/sdk-core/dist/addresses.js b/node_modules/@uniswap/sdk-core/dist/addresses.js
new file mode 100644
index 0000000..67462a1
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/addresses.js
@@ -0,0 +1,292 @@
+import { ChainId, SUPPORTED_CHAINS } from './chains';
+const DEFAULT_NETWORKS = [ChainId.MAINNET, ChainId.GOERLI, ChainId.SEPOLIA];
+function constructSameAddressMap(address, additionalNetworks = []) {
+    return DEFAULT_NETWORKS.concat(additionalNetworks).reduce((memo, chainId) => {
+        memo[chainId] = address;
+        return memo;
+    }, {});
+}
+export const UNI_ADDRESSES = constructSameAddressMap('0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', [
+    ChainId.OPTIMISM,
+    ChainId.ARBITRUM_ONE,
+    ChainId.POLYGON,
+    ChainId.POLYGON_MUMBAI,
+    ChainId.SEPOLIA
+]);
+export const UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = '0x8B799381ac40b838BBA4131ffB26197C432AFe78';
+/**
+ * @deprecated use V2_FACTORY_ADDRESSES instead
+ */
+export const V2_FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f';
+export const V2_FACTORY_ADDRESSES = {
+    [ChainId.MAINNET]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',
+    [ChainId.GOERLI]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',
+    [ChainId.SEPOLIA]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',
+    [ChainId.OPTIMISM]: '0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf',
+    [ChainId.ARBITRUM_ONE]: '0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9',
+    [ChainId.AVALANCHE]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',
+    [ChainId.BASE]: '0x8909dc15e40173ff4699343b6eb8132c65e18ec6',
+    [ChainId.BNB]: '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6',
+    [ChainId.POLYGON]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',
+    [ChainId.CELO]: '0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f'
+};
+/**
+ * @deprecated use V2_ROUTER_ADDRESSES instead
+ */
+export const V2_ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';
+export const V2_ROUTER_ADDRESSES = {
+    [ChainId.MAINNET]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',
+    [ChainId.GOERLI]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',
+    [ChainId.SEPOLIA]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',
+    [ChainId.ARBITRUM_ONE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',
+    [ChainId.OPTIMISM]: '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2',
+    [ChainId.BASE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',
+    [ChainId.AVALANCHE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',
+    [ChainId.BNB]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',
+    [ChainId.POLYGON]: '0xedf6066a2b290c185783862c7f4776a2c8077ad1'
+};
+// Networks that share most of the same addresses i.e. Mainnet, Goerli, Optimism, Arbitrum, Polygon
+const DEFAULT_ADDRESSES = {
+    v3CoreFactoryAddress: '0x1F98431c8aD98523631AE4a59f267346ea31F984',
+    multicallAddress: '0x1F98415757620B543A52E61c46B32eB19261F984',
+    quoterAddress: '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6',
+    v3MigratorAddress: '0xA5644E29708357803b5A882D272c41cC0dF92B34',
+    nonfungiblePositionManagerAddress: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88'
+};
+const MAINNET_ADDRESSES = {
+    ...DEFAULT_ADDRESSES,
+    v1MixedRouteQuoterAddress: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E'
+};
+const GOERLI_ADDRESSES = {
+    ...DEFAULT_ADDRESSES,
+    v1MixedRouteQuoterAddress: '0xBa60b6e6fF25488308789E6e0A65D838be34194e'
+};
+const OPTIMISM_ADDRESSES = DEFAULT_ADDRESSES;
+const ARBITRUM_ONE_ADDRESSES = {
+    ...DEFAULT_ADDRESSES,
+    multicallAddress: '0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB',
+    tickLensAddress: '0xbfd8137f7d1516D3ea5cA83523914859ec47F573'
+};
+const POLYGON_ADDRESSES = DEFAULT_ADDRESSES;
+// celo v3 addresses
+const CELO_ADDRESSES = {
+    v3CoreFactoryAddress: '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc',
+    multicallAddress: '0x633987602DE5C4F337e3DbF265303A1080324204',
+    quoterAddress: '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8',
+    v3MigratorAddress: '0x3cFd4d48EDfDCC53D3f173F596f621064614C582',
+    nonfungiblePositionManagerAddress: '0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A',
+    tickLensAddress: '0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D'
+};
+// BNB v3 addresses
+const BNB_ADDRESSES = {
+    v3CoreFactoryAddress: '0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7',
+    multicallAddress: '0x963Df249eD09c358A4819E39d9Cd5736c3087184',
+    quoterAddress: '0x78D78E420Da98ad378D7799bE8f4AF69033EB077',
+    v3MigratorAddress: '0x32681814957e0C13117ddc0c2aba232b5c9e760f',
+    nonfungiblePositionManagerAddress: '0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613',
+    tickLensAddress: '0xD9270014D396281579760619CCf4c3af0501A47C',
+    swapRouter02Address: '0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2'
+};
+// optimism goerli addresses
+const OPTIMISM_GOERLI_ADDRESSES = {
+    v3CoreFactoryAddress: '0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10',
+    multicallAddress: '0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd',
+    quoterAddress: '0x9569CbA925c8ca2248772A9A4976A516743A246F',
+    v3MigratorAddress: '0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8',
+    nonfungiblePositionManagerAddress: '0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6',
+    tickLensAddress: '0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e'
+};
+// optimism sepolia addresses
+const OPTIMISM_SEPOLIA_ADDRESSES = {
+    v3CoreFactoryAddress: '0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF',
+    multicallAddress: '0x80e4e06841bb76AA9735E0448cB8d003C0EF009a',
+    quoterAddress: '0x0FBEa6cf957d95ee9313490050F6A0DA68039404',
+    v3MigratorAddress: '0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07',
+    nonfungiblePositionManagerAddress: '0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d',
+    tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5'
+};
+// arbitrum goerli v3 addresses
+const ARBITRUM_GOERLI_ADDRESSES = {
+    v3CoreFactoryAddress: '0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6',
+    multicallAddress: '0x8260CB40247290317a4c062F3542622367F206Ee',
+    quoterAddress: '0x1dd92b83591781D0C6d98d07391eea4b9a6008FA',
+    v3MigratorAddress: '0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3',
+    nonfungiblePositionManagerAddress: '0x622e4726a167799826d1E1D150b076A7725f5D81',
+    tickLensAddress: '0xb52429333da969a0C79a60930a4Bf0020E5D1DE8'
+};
+// arbitrum sepolia v3 addresses
+const ARBITRUM_SEPOLIA_ADDRESSES = {
+    v3CoreFactoryAddress: '0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e',
+    multicallAddress: '0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A',
+    quoterAddress: '0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B',
+    v3MigratorAddress: '0x398f43ef2c67B941147157DA1c5a868E906E043D',
+    nonfungiblePositionManagerAddress: '0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65',
+    tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9'
+};
+// sepolia v3 addresses
+const SEPOLIA_ADDRESSES = {
+    v3CoreFactoryAddress: '0x0227628f3F023bb0B980b67D528571c95c6DaC1c',
+    multicallAddress: '0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07',
+    quoterAddress: '0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3',
+    v3MigratorAddress: '0x729004182cF005CEC8Bd85df140094b6aCbe8b15',
+    nonfungiblePositionManagerAddress: '0x1238536071E1c677A632429e3655c799b22cDA52',
+    tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07'
+};
+// Avalanche v3 addresses
+const AVALANCHE_ADDRESSES = {
+    v3CoreFactoryAddress: '0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD',
+    multicallAddress: '0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2',
+    quoterAddress: '0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F',
+    v3MigratorAddress: '0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97',
+    nonfungiblePositionManagerAddress: '0x655C406EBFa14EE2006250925e54ec43AD184f8B',
+    tickLensAddress: '0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950',
+    swapRouter02Address: '0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE'
+};
+const BASE_ADDRESSES = {
+    v3CoreFactoryAddress: '0x33128a8fC17869897dcE68Ed026d694621f6FDfD',
+    multicallAddress: '0x091e99cb1C49331a94dD62755D168E941AbD0693',
+    quoterAddress: '0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a',
+    v3MigratorAddress: '0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7',
+    nonfungiblePositionManagerAddress: '0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1',
+    tickLensAddress: '0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d',
+    swapRouter02Address: '0x2626664c2603336E57B271c5C0b26F421741e481'
+};
+// Base Goerli v3 addresses
+const BASE_GOERLI_ADDRESSES = {
+    v3CoreFactoryAddress: '0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2',
+    multicallAddress: '0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439',
+    quoterAddress: '0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9',
+    v3MigratorAddress: '0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE',
+    nonfungiblePositionManagerAddress: '0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30',
+    tickLensAddress: '0x1acB873Ee909D0c98adB18e4474943249F931b92',
+    swapRouter02Address: '0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d'
+};
+const ZORA_ADDRESSES = {
+    v3CoreFactoryAddress: '0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb',
+    multicallAddress: '0xA51c76bEE6746cB487a7e9312E43e2b8f4A37C15',
+    quoterAddress: '0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df',
+    v3MigratorAddress: '0x048352d8dCF13686982C799da63fA6426a9D0b60',
+    nonfungiblePositionManagerAddress: '0xbC91e8DfA3fF18De43853372A3d7dfe585137D78',
+    tickLensAddress: '0x209AAda09D74Ad3B8D0E92910Eaf85D2357e3044',
+    swapRouter02Address: '0x7De04c96BE5159c3b5CeffC82aa176dc81281557'
+};
+const ZORA_SEPOLIA_ADDRESSES = {
+    v3CoreFactoryAddress: '0x4324A677D74764f46f33ED447964252441aA8Db6',
+    multicallAddress: '0xA1E7e3A69671C4494EC59Dbd442de930a93F911A',
+    quoterAddress: '0xC195976fEF0985886E37036E2DF62bF371E12Df0',
+    v3MigratorAddress: '0x65ef259b31bf1d977c37e9434658694267674897',
+    nonfungiblePositionManagerAddress: '0xB8458EaAe43292e3c1F7994EFd016bd653d23c20',
+    tickLensAddress: '0x23C0F71877a1Fc4e20A78018f9831365c85f3064'
+};
+export const CHAIN_TO_ADDRESSES_MAP = {
+    [ChainId.MAINNET]: MAINNET_ADDRESSES,
+    [ChainId.OPTIMISM]: OPTIMISM_ADDRESSES,
+    [ChainId.ARBITRUM_ONE]: ARBITRUM_ONE_ADDRESSES,
+    [ChainId.POLYGON]: POLYGON_ADDRESSES,
+    [ChainId.POLYGON_MUMBAI]: POLYGON_ADDRESSES,
+    [ChainId.GOERLI]: GOERLI_ADDRESSES,
+    [ChainId.CELO]: CELO_ADDRESSES,
+    [ChainId.CELO_ALFAJORES]: CELO_ADDRESSES,
+    [ChainId.BNB]: BNB_ADDRESSES,
+    [ChainId.OPTIMISM_GOERLI]: OPTIMISM_GOERLI_ADDRESSES,
+    [ChainId.OPTIMISM_SEPOLIA]: OPTIMISM_SEPOLIA_ADDRESSES,
+    [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_ADDRESSES,
+    [ChainId.ARBITRUM_SEPOLIA]: ARBITRUM_SEPOLIA_ADDRESSES,
+    [ChainId.SEPOLIA]: SEPOLIA_ADDRESSES,
+    [ChainId.AVALANCHE]: AVALANCHE_ADDRESSES,
+    [ChainId.BASE]: BASE_ADDRESSES,
+    [ChainId.BASE_GOERLI]: BASE_GOERLI_ADDRESSES,
+    [ChainId.ZORA]: ZORA_ADDRESSES,
+    [ChainId.ZORA_SEPOLIA]: ZORA_SEPOLIA_ADDRESSES,
+};
+/* V3 Contract Addresses */
+export const V3_CORE_FACTORY_ADDRESSES = {
+    ...SUPPORTED_CHAINS.reduce((memo, chainId) => {
+        memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].v3CoreFactoryAddress;
+        return memo;
+    }, {})
+};
+export const V3_MIGRATOR_ADDRESSES = {
+    ...SUPPORTED_CHAINS.reduce((memo, chainId) => {
+        const v3MigratorAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v3MigratorAddress;
+        if (v3MigratorAddress) {
+            memo[chainId] = v3MigratorAddress;
+        }
+        return memo;
+    }, {})
+};
+export const MULTICALL_ADDRESSES = {
+    ...SUPPORTED_CHAINS.reduce((memo, chainId) => {
+        memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].multicallAddress;
+        return memo;
+    }, {})
+};
+/**
+ * The oldest V0 governance address
+ */
+export const GOVERNANCE_ALPHA_V0_ADDRESSES = constructSameAddressMap('0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F');
+/**
+ * The older V1 governance address
+ */
+export const GOVERNANCE_ALPHA_V1_ADDRESSES = {
+    [ChainId.MAINNET]: '0xC4e172459f1E7939D522503B81AFAaC1014CE6F6'
+};
+/**
+ * The latest governor bravo that is currently admin of timelock
+ */
+export const GOVERNANCE_BRAVO_ADDRESSES = {
+    [ChainId.MAINNET]: '0x408ED6354d4973f66138C91495F2f2FCbd8724C3'
+};
+export const TIMELOCK_ADDRESSES = constructSameAddressMap('0x1a9C8182C09F50C8318d769245beA52c32BE35BC');
+export const MERKLE_DISTRIBUTOR_ADDRESS = {
+    [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e'
+};
+export const ARGENT_WALLET_DETECTOR_ADDRESS = {
+    [ChainId.MAINNET]: '0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8'
+};
+export const QUOTER_ADDRESSES = {
+    ...SUPPORTED_CHAINS.reduce((memo, chainId) => {
+        memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].quoterAddress;
+        return memo;
+    }, {})
+};
+export const NONFUNGIBLE_POSITION_MANAGER_ADDRESSES = {
+    ...SUPPORTED_CHAINS.reduce((memo, chainId) => {
+        const nonfungiblePositionManagerAddress = CHAIN_TO_ADDRESSES_MAP[chainId].nonfungiblePositionManagerAddress;
+        if (nonfungiblePositionManagerAddress) {
+            memo[chainId] = nonfungiblePositionManagerAddress;
+        }
+        return memo;
+    }, {})
+};
+export const ENS_REGISTRAR_ADDRESSES = {
+    ...constructSameAddressMap('0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e')
+};
+export const SOCKS_CONTROLLER_ADDRESSES = {
+    [ChainId.MAINNET]: '0x65770b5283117639760beA3F867b69b3697a91dd'
+};
+export const TICK_LENS_ADDRESSES = {
+    ...SUPPORTED_CHAINS.reduce((memo, chainId) => {
+        const tickLensAddress = CHAIN_TO_ADDRESSES_MAP[chainId].tickLensAddress;
+        if (tickLensAddress) {
+            memo[chainId] = tickLensAddress;
+        }
+        return memo;
+    }, {})
+};
+export const MIXED_ROUTE_QUOTER_V1_ADDRESSES = SUPPORTED_CHAINS.reduce((memo, chainId) => {
+    const v1MixedRouteQuoterAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v1MixedRouteQuoterAddress;
+    if (v1MixedRouteQuoterAddress) {
+        memo[chainId] = v1MixedRouteQuoterAddress;
+    }
+    return memo;
+}, {});
+export const SWAP_ROUTER_02_ADDRESSES = (chainId) => {
+    var _a;
+    if (chainId in SUPPORTED_CHAINS) {
+        const id = chainId;
+        return (_a = CHAIN_TO_ADDRESSES_MAP[id].swapRouter02Address) !== null && _a !== void 0 ? _a : '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45';
+    }
+    return '';
+};
+//# sourceMappingURL=addresses.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/addresses.js.map b/node_modules/@uniswap/sdk-core/dist/addresses.js.map
new file mode 100644
index 0000000..2627429
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/addresses.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"addresses.js","sourceRoot":"","sources":["../src/addresses.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/chains.d.ts b/node_modules/@uniswap/sdk-core/dist/chains.d.ts
index ae9cf12..496b44a 100644
--- a/node_modules/@uniswap/sdk-core/dist/chains.d.ts
+++ b/node_modules/@uniswap/sdk-core/dist/chains.d.ts
@@ -17,9 +17,11 @@ export declare enum ChainId {
     BNB = 56,
     AVALANCHE = 43114,
     BASE_GOERLI = 84531,
-    BASE = 8453
+    BASE = 8453,
+    ZORA = 7777777,
+    ZORA_SEPOLIA = 999999999
 }
-export declare const SUPPORTED_CHAINS: readonly [ChainId.MAINNET, ChainId.OPTIMISM, ChainId.OPTIMISM_GOERLI, ChainId.OPTIMISM_SEPOLIA, ChainId.ARBITRUM_ONE, ChainId.ARBITRUM_GOERLI, ChainId.ARBITRUM_SEPOLIA, ChainId.POLYGON, ChainId.POLYGON_MUMBAI, ChainId.GOERLI, ChainId.SEPOLIA, ChainId.CELO_ALFAJORES, ChainId.CELO, ChainId.BNB, ChainId.AVALANCHE, ChainId.BASE, ChainId.BASE_GOERLI];
+export declare const SUPPORTED_CHAINS: readonly [ChainId.MAINNET, ChainId.OPTIMISM, ChainId.OPTIMISM_GOERLI, ChainId.OPTIMISM_SEPOLIA, ChainId.ARBITRUM_ONE, ChainId.ARBITRUM_GOERLI, ChainId.ARBITRUM_SEPOLIA, ChainId.POLYGON, ChainId.POLYGON_MUMBAI, ChainId.GOERLI, ChainId.SEPOLIA, ChainId.CELO_ALFAJORES, ChainId.CELO, ChainId.BNB, ChainId.AVALANCHE, ChainId.BASE, ChainId.BASE_GOERLI, ChainId.ZORA, ChainId.ZORA_SEPOLIA];
 export declare type SupportedChainsType = typeof SUPPORTED_CHAINS[number];
 export declare enum NativeCurrencyName {
     ETHER = "ETH",
diff --git a/node_modules/@uniswap/sdk-core/dist/chains.js b/node_modules/@uniswap/sdk-core/dist/chains.js
new file mode 100644
index 0000000..8efda99
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/chains.js
@@ -0,0 +1,57 @@
+export var ChainId;
+(function (ChainId) {
+    ChainId[ChainId["MAINNET"] = 1] = "MAINNET";
+    ChainId[ChainId["GOERLI"] = 5] = "GOERLI";
+    ChainId[ChainId["SEPOLIA"] = 11155111] = "SEPOLIA";
+    ChainId[ChainId["OPTIMISM"] = 10] = "OPTIMISM";
+    ChainId[ChainId["OPTIMISM_GOERLI"] = 420] = "OPTIMISM_GOERLI";
+    ChainId[ChainId["OPTIMISM_SEPOLIA"] = 11155420] = "OPTIMISM_SEPOLIA";
+    ChainId[ChainId["ARBITRUM_ONE"] = 42161] = "ARBITRUM_ONE";
+    ChainId[ChainId["ARBITRUM_GOERLI"] = 421613] = "ARBITRUM_GOERLI";
+    ChainId[ChainId["ARBITRUM_SEPOLIA"] = 421614] = "ARBITRUM_SEPOLIA";
+    ChainId[ChainId["POLYGON"] = 137] = "POLYGON";
+    ChainId[ChainId["POLYGON_MUMBAI"] = 80001] = "POLYGON_MUMBAI";
+    ChainId[ChainId["CELO"] = 42220] = "CELO";
+    ChainId[ChainId["CELO_ALFAJORES"] = 44787] = "CELO_ALFAJORES";
+    ChainId[ChainId["GNOSIS"] = 100] = "GNOSIS";
+    ChainId[ChainId["MOONBEAM"] = 1284] = "MOONBEAM";
+    ChainId[ChainId["BNB"] = 56] = "BNB";
+    ChainId[ChainId["AVALANCHE"] = 43114] = "AVALANCHE";
+    ChainId[ChainId["BASE_GOERLI"] = 84531] = "BASE_GOERLI";
+    ChainId[ChainId["BASE"] = 8453] = "BASE";
+    ChainId[ChainId["ZORA"] = 7777777] = "ZORA";
+    ChainId[ChainId["ZORA_SEPOLIA"] = 999999999] = "ZORA_SEPOLIA";
+})(ChainId || (ChainId = {}));
+export const SUPPORTED_CHAINS = [
+    ChainId.MAINNET,
+    ChainId.OPTIMISM,
+    ChainId.OPTIMISM_GOERLI,
+    ChainId.OPTIMISM_SEPOLIA,
+    ChainId.ARBITRUM_ONE,
+    ChainId.ARBITRUM_GOERLI,
+    ChainId.ARBITRUM_SEPOLIA,
+    ChainId.POLYGON,
+    ChainId.POLYGON_MUMBAI,
+    ChainId.GOERLI,
+    ChainId.SEPOLIA,
+    ChainId.CELO_ALFAJORES,
+    ChainId.CELO,
+    ChainId.BNB,
+    ChainId.AVALANCHE,
+    ChainId.BASE,
+    ChainId.BASE_GOERLI,
+    ChainId.ZORA,
+    ChainId.ZORA_SEPOLIA,
+];
+export var NativeCurrencyName;
+(function (NativeCurrencyName) {
+    // Strings match input for CLI
+    NativeCurrencyName["ETHER"] = "ETH";
+    NativeCurrencyName["MATIC"] = "MATIC";
+    NativeCurrencyName["CELO"] = "CELO";
+    NativeCurrencyName["GNOSIS"] = "XDAI";
+    NativeCurrencyName["MOONBEAM"] = "GLMR";
+    NativeCurrencyName["BNB"] = "BNB";
+    NativeCurrencyName["AVAX"] = "AVAX";
+})(NativeCurrencyName || (NativeCurrencyName = {}));
+//# sourceMappingURL=chains.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/chains.js.map b/node_modules/@uniswap/sdk-core/dist/chains.js.map
new file mode 100644
index 0000000..62b7fe3
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/chains.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"chains.js","sourceRoot":"","sources":["../src/chains.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,OAsBX;AAtBD,WAAY,OAAO;IACjB,2CAAW,CAAA;IACX,yCAAU,CAAA;IACV,kDAAkB,CAAA;IAClB,8CAAa,CAAA;IACb,6DAAqB,CAAA;IACrB,oEAA2B,CAAA;IAC3B,yDAAoB,CAAA;IACpB,gEAAwB,CAAA;IACxB,kEAAyB,CAAA;IACzB,6CAAa,CAAA;IACb,6DAAsB,CAAA;IACtB,yCAAY,CAAA;IACZ,6DAAsB,CAAA;IACtB,2CAAY,CAAA;IACZ,gDAAe,CAAA;IACf,oCAAQ,CAAA;IACR,mDAAiB,CAAA;IACjB,uDAAmB,CAAA;IACnB,wCAAW,CAAA;IACX,2CAAc,CAAA;IACd,6DAAwB,CAAA;AAC1B,CAAC,EAtBW,OAAO,KAAP,OAAO,QAsBlB;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,OAAO,CAAC,OAAO;IACf,OAAO,CAAC,QAAQ;IAChB,OAAO,CAAC,eAAe;IACvB,OAAO,CAAC,gBAAgB;IACxB,OAAO,CAAC,YAAY;IACpB,OAAO,CAAC,eAAe;IACvB,OAAO,CAAC,gBAAgB;IACxB,OAAO,CAAC,OAAO;IACf,OAAO,CAAC,cAAc;IACtB,OAAO,CAAC,MAAM;IACd,OAAO,CAAC,OAAO;IACf,OAAO,CAAC,cAAc;IACtB,OAAO,CAAC,IAAI;IACZ,OAAO,CAAC,GAAG;IACX,OAAO,CAAC,SAAS;IACjB,OAAO,CAAC,IAAI;IACZ,OAAO,CAAC,WAAW;IACnB,OAAO,CAAC,IAAI;IACZ,OAAO,CAAC,YAAY;CACZ,CAAA;AAGV,MAAM,CAAN,IAAY,kBASX;AATD,WAAY,kBAAkB;IAC5B,8BAA8B;IAC9B,mCAAa,CAAA;IACb,qCAAe,CAAA;IACf,mCAAa,CAAA;IACb,qCAAe,CAAA;IACf,uCAAiB,CAAA;IACjB,iCAAW,CAAA;IACX,mCAAa,CAAA;AACf,CAAC,EATW,kBAAkB,KAAlB,kBAAkB,QAS7B"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/constants.js b/node_modules/@uniswap/sdk-core/dist/constants.js
new file mode 100644
index 0000000..fcc1590
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/constants.js
@@ -0,0 +1,14 @@
+import JSBI from 'jsbi';
+export var TradeType;
+(function (TradeType) {
+    TradeType[TradeType["EXACT_INPUT"] = 0] = "EXACT_INPUT";
+    TradeType[TradeType["EXACT_OUTPUT"] = 1] = "EXACT_OUTPUT";
+})(TradeType || (TradeType = {}));
+export var Rounding;
+(function (Rounding) {
+    Rounding[Rounding["ROUND_DOWN"] = 0] = "ROUND_DOWN";
+    Rounding[Rounding["ROUND_HALF_UP"] = 1] = "ROUND_HALF_UP";
+    Rounding[Rounding["ROUND_UP"] = 2] = "ROUND_UP";
+})(Rounding || (Rounding = {}));
+export const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
+//# sourceMappingURL=constants.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/constants.js.map b/node_modules/@uniswap/sdk-core/dist/constants.js.map
new file mode 100644
index 0000000..71614b1
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/constants.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"constants.js","sourceRoot":"","sources":["../src/constants.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AAKvB,MAAM,CAAN,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,uDAAW,CAAA;IACX,yDAAY,CAAA;AACd,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;AAED,MAAM,CAAN,IAAY,QAIX;AAJD,WAAY,QAAQ;IAClB,mDAAU,CAAA;IACV,yDAAa,CAAA;IACb,+CAAQ,CAAA;AACV,CAAC,EAJW,QAAQ,KAAR,QAAQ,QAInB;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,oEAAoE,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.js b/node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.js
new file mode 100644
index 0000000..2ddbf61
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.js
@@ -0,0 +1,22 @@
+import invariant from 'tiny-invariant';
+/**
+ * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies
+ */
+export class BaseCurrency {
+    /**
+     * Constructs an instance of the base class `BaseCurrency`.
+     * @param chainId the chain ID on which this currency resides
+     * @param decimals decimals of the currency
+     * @param symbol symbol of the currency
+     * @param name of the currency
+     */
+    constructor(chainId, decimals, symbol, name) {
+        invariant(Number.isSafeInteger(chainId), 'CHAIN_ID');
+        invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS');
+        this.chainId = chainId;
+        this.decimals = decimals;
+        this.symbol = symbol;
+        this.name = name;
+    }
+}
+//# sourceMappingURL=baseCurrency.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.js.map b/node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.js.map
new file mode 100644
index 0000000..c80d7b8
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"baseCurrency.js","sourceRoot":"","sources":["../../src/entities/baseCurrency.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,gBAAgB,CAAA;AAItC;;GAEG;AACH,MAAM,OAAgB,YAAY;IA2BhC;;;;;;OAMG;IACH,YAAsB,OAAe,EAAE,QAAgB,EAAE,MAAe,EAAE,IAAa;QACrF,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,CAAA;QACpD,SAAS,CAAC,QAAQ,IAAI,CAAC,IAAI,QAAQ,GAAG,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,CAAA;QAEpF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;IAClB,CAAC;CAaF"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/currency.js b/node_modules/@uniswap/sdk-core/dist/entities/currency.js
new file mode 100644
index 0000000..f25f1d9
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/currency.js
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=currency.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/currency.js.map b/node_modules/@uniswap/sdk-core/dist/entities/currency.js.map
new file mode 100644
index 0000000..629abee
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/currency.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"currency.js","sourceRoot":"","sources":["../../src/entities/currency.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/currency.test.d.ts b/node_modules/@uniswap/sdk-core/dist/entities/currency.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/currency.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/currency.test.js b/node_modules/@uniswap/sdk-core/dist/entities/currency.test.js
new file mode 100644
index 0000000..c1dc75f
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/currency.test.js
@@ -0,0 +1,25 @@
+import { Ether, Token } from './index';
+describe('Currency', () => {
+    const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';
+    const ADDRESS_ONE = '0x0000000000000000000000000000000000000001';
+    const t0 = new Token(1, ADDRESS_ZERO, 18);
+    const t1 = new Token(1, ADDRESS_ONE, 18);
+    describe('#equals', () => {
+        it('ether on same chains is ether', () => {
+            expect(Ether.onChain(1).equals(Ether.onChain(1)));
+        });
+        it('ether is not token0', () => {
+            expect(Ether.onChain(1).equals(t0)).toStrictEqual(false);
+        });
+        it('token1 is not token0', () => {
+            expect(t1.equals(t0)).toStrictEqual(false);
+        });
+        it('token0 is token0', () => {
+            expect(t0.equals(t0)).toStrictEqual(true);
+        });
+        it('token0 is equal to another token0', () => {
+            expect(t0.equals(new Token(1, ADDRESS_ZERO, 18, 'symbol', 'name'))).toStrictEqual(true);
+        });
+    });
+});
+//# sourceMappingURL=currency.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/currency.test.js.map b/node_modules/@uniswap/sdk-core/dist/entities/currency.test.js.map
new file mode 100644
index 0000000..da793ec
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/currency.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"currency.test.js","sourceRoot":"","sources":["../../src/entities/currency.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,SAAS,CAAA;AAEtC,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,MAAM,YAAY,GAAG,4CAA4C,CAAA;IACjE,MAAM,WAAW,GAAG,4CAA4C,CAAA;IAEhE,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,YAAY,EAAE,EAAE,CAAC,CAAA;IACzC,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC,CAAA;IAExC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACvC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACnD,CAAC,CAAC,CAAA;QACF,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;YAC7B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QAC1D,CAAC,CAAC,CAAA;QACF,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QAC5C,CAAC,CAAC,CAAA;QACF,EAAE,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC1B,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;QAC3C,CAAC,CAAC,CAAA;QACF,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;YAC3C,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;QACzF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/ether.js b/node_modules/@uniswap/sdk-core/dist/entities/ether.js
new file mode 100644
index 0000000..e0e9c65
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/ether.js
@@ -0,0 +1,25 @@
+import invariant from 'tiny-invariant';
+import { NativeCurrency } from './nativeCurrency';
+import { WETH9 } from './weth9';
+/**
+ * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets
+ */
+export class Ether extends NativeCurrency {
+    constructor(chainId) {
+        super(chainId, 18, 'ETH', 'Ether');
+    }
+    get wrapped() {
+        const weth9 = WETH9[this.chainId];
+        invariant(!!weth9, 'WRAPPED');
+        return weth9;
+    }
+    static onChain(chainId) {
+        var _a;
+        return (_a = this._etherCache[chainId]) !== null && _a !== void 0 ? _a : (this._etherCache[chainId] = new Ether(chainId));
+    }
+    equals(other) {
+        return other.isNative && other.chainId === this.chainId;
+    }
+}
+Ether._etherCache = {};
+//# sourceMappingURL=ether.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/ether.js.map b/node_modules/@uniswap/sdk-core/dist/entities/ether.js.map
new file mode 100644
index 0000000..75e4b03
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/ether.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ether.js","sourceRoot":"","sources":["../../src/entities/ether.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,gBAAgB,CAAA;AAEtC,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAA;AAEjD,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAA;AAE/B;;GAEG;AACH,MAAM,OAAO,KAAM,SAAQ,cAAc;IACvC,YAAsB,OAAe;QACnC,KAAK,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;IACpC,CAAC;IAED,IAAW,OAAO;QAChB,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QACjC,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;QAC7B,OAAO,KAAK,CAAA;IACd,CAAC;IAIM,MAAM,CAAC,OAAO,CAAC,OAAe;;QACnC,OAAO,MAAA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,mCAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAA;IACtF,CAAC;IAEM,MAAM,CAAC,KAAe;QAC3B,OAAO,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,CAAA;IACzD,CAAC;;AARc,iBAAW,GAAiC,EAAE,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/ether.test.d.ts b/node_modules/@uniswap/sdk-core/dist/entities/ether.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/ether.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/ether.test.js b/node_modules/@uniswap/sdk-core/dist/entities/ether.test.js
new file mode 100644
index 0000000..6597ead
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/ether.test.js
@@ -0,0 +1,16 @@
+import { Ether } from './ether';
+describe('Ether', () => {
+    it('static constructor uses cache', () => {
+        expect(Ether.onChain(1) === Ether.onChain(1)).toEqual(true);
+    });
+    it('caches once per chain ID', () => {
+        expect(Ether.onChain(1) !== Ether.onChain(2)).toEqual(true);
+    });
+    it('#equals returns false for diff chains', () => {
+        expect(Ether.onChain(1).equals(Ether.onChain(2))).toEqual(false);
+    });
+    it('#equals returns true for same chains', () => {
+        expect(Ether.onChain(1).equals(Ether.onChain(1))).toEqual(true);
+    });
+});
+//# sourceMappingURL=ether.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/ether.test.js.map b/node_modules/@uniswap/sdk-core/dist/entities/ether.test.js.map
new file mode 100644
index 0000000..40c9450
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/ether.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ether.test.js","sourceRoot":"","sources":["../../src/entities/ether.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAA;AAE/B,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;IACrB,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IAC7D,CAAC,CAAC,CAAA;IACF,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IAC7D,CAAC,CAAC,CAAA;IACF,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IAClE,CAAC,CAAC,CAAA;IACF,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IACjE,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.js b/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.js
new file mode 100644
index 0000000..f9bfa8f
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.js
@@ -0,0 +1,67 @@
+import invariant from 'tiny-invariant';
+import JSBI from 'jsbi';
+import { Fraction } from './fraction';
+import _Big from 'big.js';
+import toFormat from 'toformat';
+import { Rounding, MaxUint256 } from '../../constants';
+const Big = toFormat(_Big);
+export class CurrencyAmount extends Fraction {
+    constructor(currency, numerator, denominator) {
+        super(numerator, denominator);
+        invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT');
+        this.currency = currency;
+        this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals));
+    }
+    /**
+     * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount
+     * @param currency the currency in the amount
+     * @param rawAmount the raw token or ether amount
+     */
+    static fromRawAmount(currency, rawAmount) {
+        return new CurrencyAmount(currency, rawAmount);
+    }
+    /**
+     * Construct a currency amount with a denominator that is not equal to 1
+     * @param currency the currency
+     * @param numerator the numerator of the fractional token amount
+     * @param denominator the denominator of the fractional token amount
+     */
+    static fromFractionalAmount(currency, numerator, denominator) {
+        return new CurrencyAmount(currency, numerator, denominator);
+    }
+    add(other) {
+        invariant(this.currency.equals(other.currency), 'CURRENCY');
+        const added = super.add(other);
+        return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator);
+    }
+    subtract(other) {
+        invariant(this.currency.equals(other.currency), 'CURRENCY');
+        const subtracted = super.subtract(other);
+        return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator);
+    }
+    multiply(other) {
+        const multiplied = super.multiply(other);
+        return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator);
+    }
+    divide(other) {
+        const divided = super.divide(other);
+        return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator);
+    }
+    toSignificant(significantDigits = 6, format, rounding = Rounding.ROUND_DOWN) {
+        return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding);
+    }
+    toFixed(decimalPlaces = this.currency.decimals, format, rounding = Rounding.ROUND_DOWN) {
+        invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS');
+        return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding);
+    }
+    toExact(format = { groupSeparator: '' }) {
+        Big.DP = this.currency.decimals;
+        return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format);
+    }
+    get wrapped() {
+        if (this.currency.isToken)
+            return this;
+        return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator);
+    }
+}
+//# sourceMappingURL=currencyAmount.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.js.map b/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.js.map
new file mode 100644
index 0000000..f632d2e
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"currencyAmount.js","sourceRoot":"","sources":["../../../src/entities/fractions/currencyAmount.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.test.d.ts b/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.test.js b/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.test.js
new file mode 100644
index 0000000..8c0d5e6
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.test.js
@@ -0,0 +1,96 @@
+import JSBI from 'jsbi';
+import { MaxUint256 } from '../../constants';
+import { Ether } from '../ether';
+import { Token } from '../token';
+import { CurrencyAmount } from './currencyAmount';
+import { Percent } from './percent';
+describe('CurrencyAmount', () => {
+    const ADDRESS_ONE = '0x0000000000000000000000000000000000000001';
+    describe('constructor', () => {
+        it('works', () => {
+            const token = new Token(1, ADDRESS_ONE, 18);
+            const amount = CurrencyAmount.fromRawAmount(token, 100);
+            expect(amount.quotient).toEqual(JSBI.BigInt(100));
+        });
+    });
+    describe('#quotient', () => {
+        it('returns the amount after multiplication', () => {
+            const token = new Token(1, ADDRESS_ONE, 18);
+            const amount = CurrencyAmount.fromRawAmount(token, 100).multiply(new Percent(15, 100));
+            expect(amount.quotient).toEqual(JSBI.BigInt(15));
+        });
+    });
+    describe('#ether', () => {
+        it('produces ether amount', () => {
+            const amount = CurrencyAmount.fromRawAmount(Ether.onChain(1), 100);
+            expect(amount.quotient).toEqual(JSBI.BigInt(100));
+            expect(amount.currency).toEqual(Ether.onChain(1));
+        });
+    });
+    it('token amount can be max uint256', () => {
+        const amount = CurrencyAmount.fromRawAmount(new Token(1, ADDRESS_ONE, 18), MaxUint256);
+        expect(amount.quotient).toEqual(MaxUint256);
+    });
+    it('token amount cannot exceed max uint256', () => {
+        expect(() => CurrencyAmount.fromRawAmount(new Token(1, ADDRESS_ONE, 18), JSBI.add(MaxUint256, JSBI.BigInt(1)))).toThrow('AMOUNT');
+    });
+    it('token amount quotient cannot exceed max uint256', () => {
+        expect(() => CurrencyAmount.fromFractionalAmount(new Token(1, ADDRESS_ONE, 18), JSBI.add(JSBI.multiply(MaxUint256, JSBI.BigInt(2)), JSBI.BigInt(2)), JSBI.BigInt(2))).toThrow('AMOUNT');
+    });
+    it('token amount numerator can be gt. uint256 if denominator is gt. 1', () => {
+        const amount = CurrencyAmount.fromFractionalAmount(new Token(1, ADDRESS_ONE, 18), JSBI.add(MaxUint256, JSBI.BigInt(2)), 2);
+        expect(amount.numerator).toEqual(JSBI.add(JSBI.BigInt(2), MaxUint256));
+    });
+    describe('#toFixed', () => {
+        it('throws for decimals > currency.decimals', () => {
+            const token = new Token(1, ADDRESS_ONE, 0);
+            const amount = CurrencyAmount.fromRawAmount(token, 1000);
+            expect(() => amount.toFixed(3)).toThrow('DECIMALS');
+        });
+        it('is correct for 0 decimals', () => {
+            const token = new Token(1, ADDRESS_ONE, 0);
+            const amount = CurrencyAmount.fromRawAmount(token, 123456);
+            expect(amount.toFixed(0)).toEqual('123456');
+        });
+        it('is correct for 18 decimals', () => {
+            const token = new Token(1, ADDRESS_ONE, 18);
+            const amount = CurrencyAmount.fromRawAmount(token, 1e15);
+            expect(amount.toFixed(9)).toEqual('0.001000000');
+        });
+    });
+    describe('#toSignificant', () => {
+        it('does not throw for sig figs > currency.decimals', () => {
+            const token = new Token(1, ADDRESS_ONE, 0);
+            const amount = CurrencyAmount.fromRawAmount(token, 1000);
+            expect(amount.toSignificant(3)).toEqual('1000');
+        });
+        it('is correct for 0 decimals', () => {
+            const token = new Token(1, ADDRESS_ONE, 0);
+            const amount = CurrencyAmount.fromRawAmount(token, 123456);
+            expect(amount.toSignificant(4)).toEqual('123400');
+        });
+        it('is correct for 18 decimals', () => {
+            const token = new Token(1, ADDRESS_ONE, 18);
+            const amount = CurrencyAmount.fromRawAmount(token, 1e15);
+            expect(amount.toSignificant(9)).toEqual('0.001');
+        });
+    });
+    describe('#toExact', () => {
+        it('does not throw for sig figs > currency.decimals', () => {
+            const token = new Token(1, ADDRESS_ONE, 0);
+            const amount = CurrencyAmount.fromRawAmount(token, 1000);
+            expect(amount.toExact()).toEqual('1000');
+        });
+        it('is correct for 0 decimals', () => {
+            const token = new Token(1, ADDRESS_ONE, 0);
+            const amount = CurrencyAmount.fromRawAmount(token, 123456);
+            expect(amount.toExact()).toEqual('123456');
+        });
+        it('is correct for 18 decimals', () => {
+            const token = new Token(1, ADDRESS_ONE, 18);
+            const amount = CurrencyAmount.fromRawAmount(token, 123e13);
+            expect(amount.toExact()).toEqual('0.00123');
+        });
+    });
+});
+//# sourceMappingURL=currencyAmount.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.test.js.map b/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.test.js.map
new file mode 100644
index 0000000..8b9d4f1
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"currencyAmount.test.js","sourceRoot":"","sources":["../../../src/entities/fractions/currencyAmount.test.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.js b/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.js
new file mode 100644
index 0000000..77f2948
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.js
@@ -0,0 +1,99 @@
+import JSBI from 'jsbi';
+import invariant from 'tiny-invariant';
+import _Decimal from 'decimal.js-light';
+import _Big from 'big.js';
+import toFormat from 'toformat';
+import { Rounding } from '../../constants';
+const Decimal = toFormat(_Decimal);
+const Big = toFormat(_Big);
+const toSignificantRounding = {
+    [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,
+    [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,
+    [Rounding.ROUND_UP]: Decimal.ROUND_UP
+};
+const toFixedRounding = {
+    [Rounding.ROUND_DOWN]: 0 /* RoundDown */,
+    [Rounding.ROUND_HALF_UP]: 1 /* RoundHalfUp */,
+    [Rounding.ROUND_UP]: 3 /* RoundUp */
+};
+export class Fraction {
+    constructor(numerator, denominator = JSBI.BigInt(1)) {
+        this.numerator = JSBI.BigInt(numerator);
+        this.denominator = JSBI.BigInt(denominator);
+    }
+    static tryParseFraction(fractionish) {
+        if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')
+            return new Fraction(fractionish);
+        if ('numerator' in fractionish && 'denominator' in fractionish)
+            return fractionish;
+        throw new Error('Could not parse fraction');
+    }
+    // performs floor division
+    get quotient() {
+        return JSBI.divide(this.numerator, this.denominator);
+    }
+    // remainder after floor division
+    get remainder() {
+        return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator);
+    }
+    invert() {
+        return new Fraction(this.denominator, this.numerator);
+    }
+    add(other) {
+        const otherParsed = Fraction.tryParseFraction(other);
+        if (JSBI.equal(this.denominator, otherParsed.denominator)) {
+            return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator);
+        }
+        return new Fraction(JSBI.add(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));
+    }
+    subtract(other) {
+        const otherParsed = Fraction.tryParseFraction(other);
+        if (JSBI.equal(this.denominator, otherParsed.denominator)) {
+            return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator);
+        }
+        return new Fraction(JSBI.subtract(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator)), JSBI.multiply(this.denominator, otherParsed.denominator));
+    }
+    lessThan(other) {
+        const otherParsed = Fraction.tryParseFraction(other);
+        return JSBI.lessThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));
+    }
+    equalTo(other) {
+        const otherParsed = Fraction.tryParseFraction(other);
+        return JSBI.equal(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));
+    }
+    greaterThan(other) {
+        const otherParsed = Fraction.tryParseFraction(other);
+        return JSBI.greaterThan(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(otherParsed.numerator, this.denominator));
+    }
+    multiply(other) {
+        const otherParsed = Fraction.tryParseFraction(other);
+        return new Fraction(JSBI.multiply(this.numerator, otherParsed.numerator), JSBI.multiply(this.denominator, otherParsed.denominator));
+    }
+    divide(other) {
+        const otherParsed = Fraction.tryParseFraction(other);
+        return new Fraction(JSBI.multiply(this.numerator, otherParsed.denominator), JSBI.multiply(this.denominator, otherParsed.numerator));
+    }
+    toSignificant(significantDigits, format = { groupSeparator: '' }, rounding = Rounding.ROUND_HALF_UP) {
+        invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`);
+        invariant(significantDigits > 0, `${significantDigits} is not positive.`);
+        Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] });
+        const quotient = new Decimal(this.numerator.toString())
+            .div(this.denominator.toString())
+            .toSignificantDigits(significantDigits);
+        return quotient.toFormat(quotient.decimalPlaces(), format);
+    }
+    toFixed(decimalPlaces, format = { groupSeparator: '' }, rounding = Rounding.ROUND_HALF_UP) {
+        invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`);
+        invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`);
+        Big.DP = decimalPlaces;
+        Big.RM = toFixedRounding[rounding];
+        return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);
+    }
+    /**
+     * Helper method for converting any super class back to a fraction
+     */
+    get asFraction() {
+        return new Fraction(this.numerator, this.denominator);
+    }
+}
+//# sourceMappingURL=fraction.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.js.map b/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.js.map
new file mode 100644
index 0000000..6ab5dd7
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"fraction.js","sourceRoot":"","sources":["../../../src/entities/fractions/fraction.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.test.d.ts b/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.test.js b/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.test.js
new file mode 100644
index 0000000..9c9fd2b
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.test.js
@@ -0,0 +1,83 @@
+import JSBI from 'jsbi';
+import { Fraction } from './fraction';
+describe('Fraction', () => {
+    describe('#quotient', () => {
+        it('floor division', () => {
+            expect(new Fraction(JSBI.BigInt(8), JSBI.BigInt(3)).quotient).toEqual(JSBI.BigInt(2)); // one below
+            expect(new Fraction(JSBI.BigInt(12), JSBI.BigInt(4)).quotient).toEqual(JSBI.BigInt(3)); // exact
+            expect(new Fraction(JSBI.BigInt(16), JSBI.BigInt(5)).quotient).toEqual(JSBI.BigInt(3)); // one above
+        });
+    });
+    describe('#remainder', () => {
+        it('returns fraction after divison', () => {
+            expect(new Fraction(JSBI.BigInt(8), JSBI.BigInt(3)).remainder).toEqual(new Fraction(JSBI.BigInt(2), JSBI.BigInt(3)));
+            expect(new Fraction(JSBI.BigInt(12), JSBI.BigInt(4)).remainder).toEqual(new Fraction(JSBI.BigInt(0), JSBI.BigInt(4)));
+            expect(new Fraction(JSBI.BigInt(16), JSBI.BigInt(5)).remainder).toEqual(new Fraction(JSBI.BigInt(1), JSBI.BigInt(5)));
+        });
+    });
+    describe('#invert', () => {
+        it('flips num and denom', () => {
+            expect(new Fraction(JSBI.BigInt(5), JSBI.BigInt(10)).invert().numerator).toEqual(JSBI.BigInt(10));
+            expect(new Fraction(JSBI.BigInt(5), JSBI.BigInt(10)).invert().denominator).toEqual(JSBI.BigInt(5));
+        });
+    });
+    describe('#add', () => {
+        it('multiples denoms and adds nums', () => {
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(10)).add(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toEqual(new Fraction(JSBI.BigInt(52), JSBI.BigInt(120)));
+        });
+        it('same denom', () => {
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(5)).add(new Fraction(JSBI.BigInt(2), JSBI.BigInt(5)))).toEqual(new Fraction(JSBI.BigInt(3), JSBI.BigInt(5)));
+        });
+    });
+    describe('#subtract', () => {
+        it('multiples denoms and subtracts nums', () => {
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(10)).subtract(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toEqual(new Fraction(JSBI.BigInt(-28), JSBI.BigInt(120)));
+        });
+        it('same denom', () => {
+            expect(new Fraction(JSBI.BigInt(3), JSBI.BigInt(5)).subtract(new Fraction(JSBI.BigInt(2), JSBI.BigInt(5)))).toEqual(new Fraction(JSBI.BigInt(1), JSBI.BigInt(5)));
+        });
+    });
+    describe('#lessThan', () => {
+        it('correct', () => {
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(10)).lessThan(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toBe(true);
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(3)).lessThan(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toBe(false);
+            expect(new Fraction(JSBI.BigInt(5), JSBI.BigInt(12)).lessThan(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toBe(false);
+        });
+    });
+    describe('#equalTo', () => {
+        it('correct', () => {
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(10)).equalTo(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toBe(false);
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(3)).equalTo(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toBe(true);
+            expect(new Fraction(JSBI.BigInt(5), JSBI.BigInt(12)).equalTo(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toBe(false);
+        });
+    });
+    describe('#greaterThan', () => {
+        it('correct', () => {
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(10)).greaterThan(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toBe(false);
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(3)).greaterThan(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toBe(false);
+            expect(new Fraction(JSBI.BigInt(5), JSBI.BigInt(12)).greaterThan(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toBe(true);
+        });
+    });
+    describe('#multiplty', () => {
+        it('correct', () => {
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(10)).multiply(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toEqual(new Fraction(JSBI.BigInt(4), JSBI.BigInt(120)));
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(3)).multiply(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toEqual(new Fraction(JSBI.BigInt(4), JSBI.BigInt(36)));
+            expect(new Fraction(JSBI.BigInt(5), JSBI.BigInt(12)).multiply(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toEqual(new Fraction(JSBI.BigInt(20), JSBI.BigInt(144)));
+        });
+    });
+    describe('#divide', () => {
+        it('correct', () => {
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(10)).divide(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toEqual(new Fraction(JSBI.BigInt(12), JSBI.BigInt(40)));
+            expect(new Fraction(JSBI.BigInt(1), JSBI.BigInt(3)).divide(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toEqual(new Fraction(JSBI.BigInt(12), JSBI.BigInt(12)));
+            expect(new Fraction(JSBI.BigInt(5), JSBI.BigInt(12)).divide(new Fraction(JSBI.BigInt(4), JSBI.BigInt(12)))).toEqual(new Fraction(JSBI.BigInt(60), JSBI.BigInt(48)));
+        });
+    });
+    describe('#asFraction', () => {
+        it('returns an equivalent but not the same reference fraction', () => {
+            const f = new Fraction(1, 2);
+            expect(f.asFraction).toEqual(f);
+            expect(f === f.asFraction).toEqual(false);
+        });
+    });
+});
+//# sourceMappingURL=fraction.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.test.js.map b/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.test.js.map
new file mode 100644
index 0000000..1b15cc8
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"fraction.test.js","sourceRoot":"","sources":["../../../src/entities/fractions/fraction.test.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/index.js b/node_modules/@uniswap/sdk-core/dist/entities/fractions/index.js
new file mode 100644
index 0000000..3bdaf64
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/index.js
@@ -0,0 +1,5 @@
+export { CurrencyAmount } from './currencyAmount';
+export { Fraction } from './fraction';
+export { Percent } from './percent';
+export { Price } from './price';
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/index.js.map b/node_modules/@uniswap/sdk-core/dist/entities/fractions/index.js.map
new file mode 100644
index 0000000..6208281
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/entities/fractions/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAA;AACjD,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAA;AACrC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AACnC,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.js b/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.js
new file mode 100644
index 0000000..96f9496
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.js
@@ -0,0 +1,38 @@
+import JSBI from 'jsbi';
+import { Fraction } from './fraction';
+const ONE_HUNDRED = new Fraction(JSBI.BigInt(100));
+/**
+ * Converts a fraction to a percent
+ * @param fraction the fraction to convert
+ */
+function toPercent(fraction) {
+    return new Percent(fraction.numerator, fraction.denominator);
+}
+export class Percent extends Fraction {
+    constructor() {
+        super(...arguments);
+        /**
+         * This boolean prevents a fraction from being interpreted as a Percent
+         */
+        this.isPercent = true;
+    }
+    add(other) {
+        return toPercent(super.add(other));
+    }
+    subtract(other) {
+        return toPercent(super.subtract(other));
+    }
+    multiply(other) {
+        return toPercent(super.multiply(other));
+    }
+    divide(other) {
+        return toPercent(super.divide(other));
+    }
+    toSignificant(significantDigits = 5, format, rounding) {
+        return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding);
+    }
+    toFixed(decimalPlaces = 2, format, rounding) {
+        return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding);
+    }
+}
+//# sourceMappingURL=percent.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.js.map b/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.js.map
new file mode 100644
index 0000000..9e26424
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"percent.js","sourceRoot":"","sources":["../../../src/entities/fractions/percent.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AAEvB,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAA;AAErC,MAAM,WAAW,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;AAElD;;;GAGG;AACH,SAAS,SAAS,CAAC,QAAkB;IACnC,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAA;AAC9D,CAAC;AAED,MAAM,OAAO,OAAQ,SAAQ,QAAQ;IAArC;;QACE;;WAEG;QACa,cAAS,GAAS,IAAI,CAAA;IAyBxC,CAAC;IAvBC,GAAG,CAAC,KAA2B;QAC7B,OAAO,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA;IACpC,CAAC;IAED,QAAQ,CAAC,KAA2B;QAClC,OAAO,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAA;IACzC,CAAC;IAED,QAAQ,CAAC,KAA2B;QAClC,OAAO,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAA;IACzC,CAAC;IAED,MAAM,CAAC,KAA2B;QAChC,OAAO,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;IACvC,CAAC;IAEM,aAAa,CAAC,oBAA4B,CAAC,EAAE,MAAe,EAAE,QAAmB;QACtF,OAAO,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,iBAAiB,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;IACvF,CAAC;IAEM,OAAO,CAAC,gBAAwB,CAAC,EAAE,MAAe,EAAE,QAAmB;QAC5E,OAAO,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;IAC7E,CAAC;CACF"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.test.d.ts b/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.test.js b/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.test.js
new file mode 100644
index 0000000..7521357
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.test.js
@@ -0,0 +1,51 @@
+import { Percent } from './percent';
+describe('Percent', () => {
+    describe('constructor', () => {
+        it('defaults to 1 denominator', () => {
+            expect(new Percent(1)).toEqual(new Percent(1, 1));
+        });
+    });
+    describe('#add', () => {
+        it('returns a percent', () => {
+            expect(new Percent(1, 100).add(new Percent(2, 100))).toEqual(new Percent(3, 100));
+        });
+        it('different denominators', () => {
+            expect(new Percent(1, 25).add(new Percent(2, 100))).toEqual(new Percent(150, 2500));
+        });
+    });
+    describe('#subtract', () => {
+        it('returns a percent', () => {
+            expect(new Percent(1, 100).subtract(new Percent(2, 100))).toEqual(new Percent(-1, 100));
+        });
+        it('different denominators', () => {
+            expect(new Percent(1, 25).subtract(new Percent(2, 100))).toEqual(new Percent(50, 2500));
+        });
+    });
+    describe('#multiply', () => {
+        it('returns a percent', () => {
+            expect(new Percent(1, 100).multiply(new Percent(2, 100))).toEqual(new Percent(2, 10000));
+        });
+        it('different denominators', () => {
+            expect(new Percent(1, 25).multiply(new Percent(2, 100))).toEqual(new Percent(2, 2500));
+        });
+    });
+    describe('#divide', () => {
+        it('returns a percent', () => {
+            expect(new Percent(1, 100).divide(new Percent(2, 100))).toEqual(new Percent(100, 200));
+        });
+        it('different denominators', () => {
+            expect(new Percent(1, 25).divide(new Percent(2, 100))).toEqual(new Percent(100, 50));
+        });
+    });
+    describe('#toSignificant', () => {
+        it('returns the value scaled by 100', () => {
+            expect(new Percent(154, 10000).toSignificant(3)).toEqual('1.54');
+        });
+    });
+    describe('#toFixed', () => {
+        it('returns the value scaled by 100', () => {
+            expect(new Percent(154, 10000).toFixed(2)).toEqual('1.54');
+        });
+    });
+});
+//# sourceMappingURL=percent.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.test.js.map b/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.test.js.map
new file mode 100644
index 0000000..82ec1a0
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"percent.test.js","sourceRoot":"","sources":["../../../src/entities/fractions/percent.test.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.js b/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.js
new file mode 100644
index 0000000..2b62a0f
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.js
@@ -0,0 +1,68 @@
+import JSBI from 'jsbi';
+import invariant from 'tiny-invariant';
+import { Fraction } from './fraction';
+import { CurrencyAmount } from './currencyAmount';
+export class Price extends Fraction {
+    /**
+     * Construct a price, either with the base and quote currency amount, or the
+     * @param args
+     */
+    constructor(...args) {
+        let baseCurrency, quoteCurrency, denominator, numerator;
+        if (args.length === 4) {
+            ;
+            [baseCurrency, quoteCurrency, denominator, numerator] = args;
+        }
+        else {
+            const result = args[0].quoteAmount.divide(args[0].baseAmount);
+            [baseCurrency, quoteCurrency, denominator, numerator] = [
+                args[0].baseAmount.currency,
+                args[0].quoteAmount.currency,
+                result.denominator,
+                result.numerator
+            ];
+        }
+        super(numerator, denominator);
+        this.baseCurrency = baseCurrency;
+        this.quoteCurrency = quoteCurrency;
+        this.scalar = new Fraction(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals)));
+    }
+    /**
+     * Flip the price, switching the base and quote currency
+     */
+    invert() {
+        return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator);
+    }
+    /**
+     * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency
+     * @param other the other price
+     */
+    multiply(other) {
+        invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN');
+        const fraction = super.multiply(other);
+        return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator);
+    }
+    /**
+     * Return the amount of quote currency corresponding to a given amount of the base currency
+     * @param currencyAmount the amount of base currency to quote against the price
+     */
+    quote(currencyAmount) {
+        invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN');
+        const result = super.multiply(currencyAmount);
+        return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator);
+    }
+    /**
+     * Get the value scaled by decimals for formatting
+     * @private
+     */
+    get adjustedForDecimals() {
+        return super.multiply(this.scalar);
+    }
+    toSignificant(significantDigits = 6, format, rounding) {
+        return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding);
+    }
+    toFixed(decimalPlaces = 4, format, rounding) {
+        return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding);
+    }
+}
+//# sourceMappingURL=price.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.js.map b/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.js.map
new file mode 100644
index 0000000..62e167d
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"price.js","sourceRoot":"","sources":["../../../src/entities/fractions/price.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.test.d.ts b/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.test.js b/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.test.js
new file mode 100644
index 0000000..96c6460
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.test.js
@@ -0,0 +1,56 @@
+import { Token } from '../token';
+import { CurrencyAmount } from './currencyAmount';
+import { Price } from './price';
+describe('Price', () => {
+    const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';
+    const ADDRESS_ONE = '0x0000000000000000000000000000000000000001';
+    const t0 = new Token(1, ADDRESS_ZERO, 18);
+    const t0_6 = new Token(1, ADDRESS_ZERO, 6);
+    const t1 = new Token(1, ADDRESS_ONE, 18);
+    describe('#constructor', () => {
+        it('array format works', () => {
+            const price = new Price(t0, t1, 1, 54321);
+            expect(price.toSignificant(5)).toEqual('54321');
+            expect(price.baseCurrency.equals(t0));
+            expect(price.quoteCurrency.equals(t1));
+        });
+        it('object format works', () => {
+            const price = new Price({
+                baseAmount: CurrencyAmount.fromRawAmount(t0, 1),
+                quoteAmount: CurrencyAmount.fromRawAmount(t1, 54321)
+            });
+            expect(price.toSignificant(5)).toEqual('54321');
+            expect(price.baseCurrency.equals(t0));
+            expect(price.quoteCurrency.equals(t1));
+        });
+    });
+    describe('#quote', () => {
+        it('returns correct value', () => {
+            const price = new Price(t0, t1, 1, 5);
+            expect(price.quote(CurrencyAmount.fromRawAmount(t0, 10))).toEqual(CurrencyAmount.fromRawAmount(t1, 50));
+        });
+    });
+    describe('#toSignificant', () => {
+        it('no decimals', () => {
+            const p = new Price(t0, t1, 123, 456);
+            expect(p.toSignificant(4)).toEqual('3.707');
+        });
+        it('no decimals flip ratio', () => {
+            const p = new Price(t0, t1, 456, 123);
+            expect(p.toSignificant(4)).toEqual('0.2697');
+        });
+        it('with decimal difference', () => {
+            const p = new Price(t0_6, t1, 123, 456);
+            expect(p.toSignificant(4)).toEqual('0.000000000003707');
+        });
+        it('with decimal difference flipped', () => {
+            const p = new Price(t0_6, t1, 456, 123);
+            expect(p.toSignificant(4)).toEqual('0.0000000000002697');
+        });
+        it('with decimal difference flipped base quote flipped', () => {
+            const p = new Price(t1, t0_6, 456, 123);
+            expect(p.toSignificant(4)).toEqual('269700000000');
+        });
+    });
+});
+//# sourceMappingURL=price.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.test.js.map b/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.test.js.map
new file mode 100644
index 0000000..82a1eff
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/fractions/price.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"price.test.js","sourceRoot":"","sources":["../../../src/entities/fractions/price.test.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/index.js b/node_modules/@uniswap/sdk-core/dist/entities/index.js
new file mode 100644
index 0000000..7f7ce5a
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/index.js
@@ -0,0 +1,7 @@
+export * from './fractions';
+export * from './currency';
+export * from './ether';
+export * from './nativeCurrency';
+export * from './token';
+export * from './weth9';
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/index.js.map b/node_modules/@uniswap/sdk-core/dist/entities/index.js.map
new file mode 100644
index 0000000..03c73f3
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/entities/index.ts"],"names":[],"mappings":"AAAA,cAAc,aAAa,CAAA;AAE3B,cAAc,YAAY,CAAA;AAC1B,cAAc,SAAS,CAAA;AACvB,cAAc,kBAAkB,CAAA;AAChC,cAAc,SAAS,CAAA;AACvB,cAAc,SAAS,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.js b/node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.js
new file mode 100644
index 0000000..c011934
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.js
@@ -0,0 +1,12 @@
+import { BaseCurrency } from './baseCurrency';
+/**
+ * Represents the native currency of the chain on which it resides, e.g.
+ */
+export class NativeCurrency extends BaseCurrency {
+    constructor() {
+        super(...arguments);
+        this.isNative = true;
+        this.isToken = false;
+    }
+}
+//# sourceMappingURL=nativeCurrency.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.js.map b/node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.js.map
new file mode 100644
index 0000000..01bb39c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"nativeCurrency.js","sourceRoot":"","sources":["../../src/entities/nativeCurrency.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAA;AAE7C;;GAEG;AACH,MAAM,OAAgB,cAAe,SAAQ,YAAY;IAAzD;;QACkB,aAAQ,GAAS,IAAI,CAAA;QACrB,YAAO,GAAU,KAAK,CAAA;IACxC,CAAC;CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/token.js b/node_modules/@uniswap/sdk-core/dist/entities/token.js
new file mode 100644
index 0000000..8c69bf4
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/token.js
@@ -0,0 +1,64 @@
+import { BigNumber } from '@ethersproject/bignumber';
+import invariant from 'tiny-invariant';
+import { checkValidAddress, validateAndParseAddress } from '../utils/validateAndParseAddress';
+import { BaseCurrency } from './baseCurrency';
+/**
+ * Represents an ERC20 token with a unique address and some metadata.
+ */
+export class Token extends BaseCurrency {
+    /**
+     *
+     * @param chainId {@link BaseCurrency#chainId}
+     * @param address The contract address on the chain on which this token lives
+     * @param decimals {@link BaseCurrency#decimals}
+     * @param symbol {@link BaseCurrency#symbol}
+     * @param name {@link BaseCurrency#name}
+     * @param bypassChecksum If true it only checks for length === 42, startsWith 0x and contains only hex characters
+     * @param buyFeeBps Buy fee tax for FOT tokens, in basis points
+     * @param sellFeeBps Sell fee tax for FOT tokens, in basis points
+     */
+    constructor(chainId, address, decimals, symbol, name, bypassChecksum, buyFeeBps, sellFeeBps) {
+        super(chainId, decimals, symbol, name);
+        this.isNative = false;
+        this.isToken = true;
+        if (bypassChecksum) {
+            this.address = checkValidAddress(address);
+        }
+        else {
+            this.address = validateAndParseAddress(address);
+        }
+        if (buyFeeBps) {
+            invariant(buyFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES');
+        }
+        if (sellFeeBps) {
+            invariant(sellFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES');
+        }
+        this.buyFeeBps = buyFeeBps;
+        this.sellFeeBps = sellFeeBps;
+    }
+    /**
+     * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.
+     * @param other other token to compare
+     */
+    equals(other) {
+        return other.isToken && this.chainId === other.chainId && this.address.toLowerCase() === other.address.toLowerCase();
+    }
+    /**
+     * Returns true if the address of this token sorts before the address of the other token
+     * @param other other token to compare
+     * @throws if the tokens have the same address
+     * @throws if the tokens are on different chains
+     */
+    sortsBefore(other) {
+        invariant(this.chainId === other.chainId, 'CHAIN_IDS');
+        invariant(this.address.toLowerCase() !== other.address.toLowerCase(), 'ADDRESSES');
+        return this.address.toLowerCase() < other.address.toLowerCase();
+    }
+    /**
+     * Return this token, which does not need to be wrapped
+     */
+    get wrapped() {
+        return this;
+    }
+}
+//# sourceMappingURL=token.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/token.js.map b/node_modules/@uniswap/sdk-core/dist/entities/token.js.map
new file mode 100644
index 0000000..6a58cb4
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/token.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"token.js","sourceRoot":"","sources":["../../src/entities/token.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AACpD,OAAO,SAAS,MAAM,gBAAgB,CAAA;AACtC,OAAO,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,MAAM,kCAAkC,CAAA;AAC7F,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAA;AAG7C;;GAEG;AACH,MAAM,OAAO,KAAM,SAAQ,YAAY;IAgBrC;;;;;;;;;;OAUG;IACH,YACE,OAAe,EACf,OAAe,EACf,QAAgB,EAChB,MAAe,EACf,IAAa,EACb,cAAwB,EACxB,SAAqB,EACrB,UAAsB;QAEtB,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;QApCxB,aAAQ,GAAU,KAAK,CAAA;QACvB,YAAO,GAAS,IAAI,CAAA;QAoClC,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAA;SAC1C;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAA;SAChD;QACD,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAAA;SACrE;QACD,IAAI,UAAU,EAAE;YACd,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAAA;SACtE;QACD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;QAC1B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;IAC9B,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,KAAe;QAC3B,OAAO,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAA;IACtH,CAAC;IAED;;;;;OAKG;IACI,WAAW,CAAC,KAAY;QAC7B,SAAS,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAA;QACtD,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,WAAW,CAAC,CAAA;QAClF,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAA;IACjE,CAAC;IAED;;OAEG;IACH,IAAW,OAAO;QAChB,OAAO,IAAI,CAAA;IACb,CAAC;CACF"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/token.test.d.ts b/node_modules/@uniswap/sdk-core/dist/entities/token.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/token.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/token.test.js b/node_modules/@uniswap/sdk-core/dist/entities/token.test.js
new file mode 100644
index 0000000..0c4efd7
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/token.test.js
@@ -0,0 +1,72 @@
+import { Token } from './token';
+import { BigNumber } from '@ethersproject/bignumber';
+describe('Token', () => {
+    const ADDRESS_ONE = '0x0000000000000000000000000000000000000001';
+    const ADDRESS_TWO = '0x0000000000000000000000000000000000000002';
+    const DAI_MAINNET = '0x6B175474E89094C44Da98b954EedeAC495271d0F';
+    describe('#constructor', () => {
+        it('fails with invalid address', () => {
+            expect(() => new Token(3, '0xhello00000000000000000000000000000000002', 18).address).toThrow('0xhello00000000000000000000000000000000002 is not a valid address');
+        });
+        it('fails with negative decimals', () => {
+            expect(() => new Token(3, ADDRESS_ONE, -1).address).toThrow('DECIMALS');
+        });
+        it('fails with 256 decimals', () => {
+            expect(() => new Token(3, ADDRESS_ONE, 256).address).toThrow('DECIMALS');
+        });
+        it('fails with non-integer decimals', () => {
+            expect(() => new Token(3, ADDRESS_ONE, 1.5).address).toThrow('DECIMALS');
+        });
+        it('fails with negative FOT fees', () => {
+            expect(() => new Token(3, ADDRESS_ONE, 18, undefined, undefined, undefined, BigNumber.from(-1), undefined)).toThrow('NON-NEGATIVE FOT FEES');
+            expect(() => new Token(3, ADDRESS_ONE, 18, undefined, undefined, undefined, undefined, BigNumber.from(-1))).toThrow('NON-NEGATIVE FOT FEES');
+        });
+    });
+    describe('#constructor with bypassChecksum = true', () => {
+        const bypassChecksum = true;
+        it('creates the token with a valid address', () => {
+            expect(new Token(3, ADDRESS_TWO, 18, undefined, undefined, bypassChecksum).address).toBe(ADDRESS_TWO);
+        });
+        it('fails with invalid address', () => {
+            expect(() => new Token(3, '0xhello00000000000000000000000000000000002', 18, undefined, undefined, bypassChecksum).address).toThrow('0xhello00000000000000000000000000000000002 is not a valid address');
+        });
+        it('fails with negative decimals', () => {
+            expect(() => new Token(3, ADDRESS_ONE, -1, undefined, undefined, bypassChecksum).address).toThrow('DECIMALS');
+        });
+        it('fails with 256 decimals', () => {
+            expect(() => new Token(3, ADDRESS_ONE, 256, undefined, undefined, bypassChecksum).address).toThrow('DECIMALS');
+        });
+        it('fails with non-integer decimals', () => {
+            expect(() => new Token(3, ADDRESS_ONE, 1.5, undefined, undefined, bypassChecksum).address).toThrow('DECIMALS');
+        });
+    });
+    describe('#equals', () => {
+        it('fails if address differs', () => {
+            expect(new Token(1, ADDRESS_ONE, 18).equals(new Token(1, ADDRESS_TWO, 18))).toBe(false);
+        });
+        it('false if chain id differs', () => {
+            expect(new Token(3, ADDRESS_ONE, 18).equals(new Token(1, ADDRESS_ONE, 18))).toBe(false);
+        });
+        it('true if only decimals differs', () => {
+            expect(new Token(1, ADDRESS_ONE, 9).equals(new Token(1, ADDRESS_ONE, 18))).toBe(true);
+        });
+        it('true if address is the same', () => {
+            expect(new Token(1, ADDRESS_ONE, 18).equals(new Token(1, ADDRESS_ONE, 18))).toBe(true);
+        });
+        it('true on reference equality', () => {
+            const token = new Token(1, ADDRESS_ONE, 18);
+            expect(token.equals(token)).toBe(true);
+        });
+        it('true even if name/symbol/decimals differ', () => {
+            const tokenA = new Token(1, ADDRESS_ONE, 9, 'abc', 'def');
+            const tokenB = new Token(1, ADDRESS_ONE, 18, 'ghi', 'jkl');
+            expect(tokenA.equals(tokenB)).toBe(true);
+        });
+        it('true even if one token is checksummed and the other is not', () => {
+            const tokenA = new Token(1, DAI_MAINNET, 18, 'DAI', undefined, false);
+            const tokenB = new Token(1, DAI_MAINNET.toLowerCase(), 18, 'DAI', undefined, true);
+            expect(tokenA.equals(tokenB)).toBe(true);
+        });
+    });
+});
+//# sourceMappingURL=token.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/token.test.js.map b/node_modules/@uniswap/sdk-core/dist/entities/token.test.js.map
new file mode 100644
index 0000000..8fe4c8c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/token.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"token.test.js","sourceRoot":"","sources":["../../src/entities/token.test.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/weth9.js b/node_modules/@uniswap/sdk-core/dist/entities/weth9.js
new file mode 100644
index 0000000..32a3935
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/weth9.js
@@ -0,0 +1,22 @@
+import { Token } from './token';
+/**
+ * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped
+ */
+export const WETH9 = {
+    [1]: new Token(1, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'),
+    [3]: new Token(3, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),
+    [4]: new Token(4, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),
+    [5]: new Token(5, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'),
+    [42]: new Token(42, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'),
+    [10]: new Token(10, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [69]: new Token(69, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [11155420]: new Token(11155420, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [42161]: new Token(42161, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),
+    [421611]: new Token(421611, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),
+    [421614]: new Token(421614, '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73', 18, 'WETH', 'Wrapped Ether'),
+    [8453]: new Token(8453, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [56]: new Token(56, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),
+    [137]: new Token(137, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),
+    [43114]: new Token(43114, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX')
+};
+//# sourceMappingURL=weth9.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/entities/weth9.js.map b/node_modules/@uniswap/sdk-core/dist/entities/weth9.js.map
new file mode 100644
index 0000000..b02f6a5
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/entities/weth9.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"weth9.js","sourceRoot":"","sources":["../../src/entities/weth9.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAA;AAE/B;;GAEG;AACH,MAAM,CAAC,MAAM,KAAK,GAAiC;IACjD,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IAC5F,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IAC5F,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IAC5F,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IAC5F,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IAE9F,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IAC9F,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IAC9F,CAAC,QAAQ,CAAC,EAAE,IAAI,KAAK,CAAC,QAAQ,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IAE1G,CAAC,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,KAAK,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IACpG,CAAC,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,MAAM,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IACtG,CAAC,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,MAAM,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IAEtG,CAAC,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IAElG,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,4CAA4C,EAAE,EAAE,EAAE,MAAM,EAAE,aAAa,CAAC;IAC5F,CAAC,GAAG,CAAC,EAAE,IAAI,KAAK,CAAC,GAAG,EAAE,4CAA4C,EAAE,EAAE,EAAE,QAAQ,EAAE,eAAe,CAAC;IAClG,CAAC,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,KAAK,EAAE,4CAA4C,EAAE,EAAE,EAAE,OAAO,EAAE,cAAc,CAAC;CACrG,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/index.js b/node_modules/@uniswap/sdk-core/dist/index.js
index c3473ea..265b124 100644
--- a/node_modules/@uniswap/sdk-core/dist/index.js
+++ b/node_modules/@uniswap/sdk-core/dist/index.js
@@ -1,8 +1,6 @@
-
-'use strict'
-
-if (process.env.NODE_ENV === 'production') {
-  module.exports = require('./sdk-core.cjs.production.min.js')
-} else {
-  module.exports = require('./sdk-core.cjs.development.js')
-}
+export * from './addresses';
+export * from './chains';
+export * from './constants';
+export * from './entities';
+export * from './utils';
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/index.js.map b/node_modules/@uniswap/sdk-core/dist/index.js.map
new file mode 100644
index 0000000..b039e88
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,cAAc,aAAa,CAAA;AAC3B,cAAc,UAAU,CAAA;AACxB,cAAc,aAAa,CAAA;AAC3B,cAAc,YAAY,CAAA;AAC1B,cAAc,SAAS,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.development.js b/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.development.js
index 0057727..07b05af 100644
--- a/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.development.js
+++ b/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.development.js
@@ -72,9 +72,11 @@ function _inheritsLoose(subClass, superClass) {
   ChainId[ChainId["AVALANCHE"] = 43114] = "AVALANCHE";
   ChainId[ChainId["BASE_GOERLI"] = 84531] = "BASE_GOERLI";
   ChainId[ChainId["BASE"] = 8453] = "BASE";
+  ChainId[ChainId["ZORA"] = 7777777] = "ZORA";
+  ChainId[ChainId["ZORA_SEPOLIA"] = 999999999] = "ZORA_SEPOLIA";
 })(exports.ChainId || (exports.ChainId = {}));
 
-var SUPPORTED_CHAINS = [exports.ChainId.MAINNET, exports.ChainId.OPTIMISM, exports.ChainId.OPTIMISM_GOERLI, exports.ChainId.OPTIMISM_SEPOLIA, exports.ChainId.ARBITRUM_ONE, exports.ChainId.ARBITRUM_GOERLI, exports.ChainId.ARBITRUM_SEPOLIA, exports.ChainId.POLYGON, exports.ChainId.POLYGON_MUMBAI, exports.ChainId.GOERLI, exports.ChainId.SEPOLIA, exports.ChainId.CELO_ALFAJORES, exports.ChainId.CELO, exports.ChainId.BNB, exports.ChainId.AVALANCHE, exports.ChainId.BASE, exports.ChainId.BASE_GOERLI];
+var SUPPORTED_CHAINS = [exports.ChainId.MAINNET, exports.ChainId.OPTIMISM, exports.ChainId.OPTIMISM_GOERLI, exports.ChainId.OPTIMISM_SEPOLIA, exports.ChainId.ARBITRUM_ONE, exports.ChainId.ARBITRUM_GOERLI, exports.ChainId.ARBITRUM_SEPOLIA, exports.ChainId.POLYGON, exports.ChainId.POLYGON_MUMBAI, exports.ChainId.GOERLI, exports.ChainId.SEPOLIA, exports.ChainId.CELO_ALFAJORES, exports.ChainId.CELO, exports.ChainId.BNB, exports.ChainId.AVALANCHE, exports.ChainId.BASE, exports.ChainId.BASE_GOERLI, exports.ChainId.ZORA, exports.ChainId.ZORA_SEPOLIA];
 
 (function (NativeCurrencyName) {
   // Strings match input for CLI
@@ -175,7 +177,8 @@ var OPTIMISM_SEPOLIA_ADDRESSES = {
   quoterAddress: '0x0FBEa6cf957d95ee9313490050F6A0DA68039404',
   v3MigratorAddress: '0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07',
   nonfungiblePositionManagerAddress: '0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d',
-  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5'
+  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5',
+  swapRouter02Address: '0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4'
 }; // arbitrum goerli v3 addresses
 
 var ARBITRUM_GOERLI_ADDRESSES = {
@@ -193,7 +196,8 @@ var ARBITRUM_SEPOLIA_ADDRESSES = {
   quoterAddress: '0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B',
   v3MigratorAddress: '0x398f43ef2c67B941147157DA1c5a868E906E043D',
   nonfungiblePositionManagerAddress: '0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65',
-  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9'
+  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9',
+  swapRouter02Address: '0x101F443B4d1b059569D643917553c771E1b9663E'
 }; // sepolia v3 addresses
 
 var SEPOLIA_ADDRESSES = {
@@ -202,7 +206,8 @@ var SEPOLIA_ADDRESSES = {
   quoterAddress: '0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3',
   v3MigratorAddress: '0x729004182cF005CEC8Bd85df140094b6aCbe8b15',
   nonfungiblePositionManagerAddress: '0x1238536071E1c677A632429e3655c799b22cDA52',
-  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07'
+  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07',
+  swapRouter02Address: '0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E'
 }; // Avalanche v3 addresses
 
 var AVALANCHE_ADDRESSES = {
@@ -233,7 +238,24 @@ var BASE_GOERLI_ADDRESSES = {
   tickLensAddress: '0x1acB873Ee909D0c98adB18e4474943249F931b92',
   swapRouter02Address: '0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d'
 };
-var CHAIN_TO_ADDRESSES_MAP = (_CHAIN_TO_ADDRESSES_M = {}, _CHAIN_TO_ADDRESSES_M[exports.ChainId.MAINNET] = MAINNET_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.OPTIMISM] = OPTIMISM_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.ARBITRUM_ONE] = ARBITRUM_ONE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.POLYGON] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.POLYGON_MUMBAI] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.GOERLI] = GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.CELO] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.CELO_ALFAJORES] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.BNB] = BNB_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.OPTIMISM_GOERLI] = OPTIMISM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.OPTIMISM_SEPOLIA] = OPTIMISM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.ARBITRUM_GOERLI] = ARBITRUM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.ARBITRUM_SEPOLIA] = ARBITRUM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.SEPOLIA] = SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.AVALANCHE] = AVALANCHE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.BASE] = BASE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.BASE_GOERLI] = BASE_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M);
+var ZORA_ADDRESSES = {
+  v3CoreFactoryAddress: '0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb',
+  multicallAddress: '0xA51c76bEE6746cB487a7e9312E43e2b8f4A37C15',
+  quoterAddress: '0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df',
+  v3MigratorAddress: '0x048352d8dCF13686982C799da63fA6426a9D0b60',
+  nonfungiblePositionManagerAddress: '0xbC91e8DfA3fF18De43853372A3d7dfe585137D78',
+  tickLensAddress: '0x209AAda09D74Ad3B8D0E92910Eaf85D2357e3044',
+  swapRouter02Address: '0x7De04c96BE5159c3b5CeffC82aa176dc81281557'
+};
+var ZORA_SEPOLIA_ADDRESSES = {
+  v3CoreFactoryAddress: '0x4324A677D74764f46f33ED447964252441aA8Db6',
+  multicallAddress: '0xA1E7e3A69671C4494EC59Dbd442de930a93F911A',
+  quoterAddress: '0xC195976fEF0985886E37036E2DF62bF371E12Df0',
+  v3MigratorAddress: '0x65ef259b31bf1d977c37e9434658694267674897',
+  nonfungiblePositionManagerAddress: '0xB8458EaAe43292e3c1F7994EFd016bd653d23c20',
+  tickLensAddress: '0x23C0F71877a1Fc4e20A78018f9831365c85f3064'
+};
+var CHAIN_TO_ADDRESSES_MAP = (_CHAIN_TO_ADDRESSES_M = {}, _CHAIN_TO_ADDRESSES_M[exports.ChainId.MAINNET] = MAINNET_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.OPTIMISM] = OPTIMISM_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.ARBITRUM_ONE] = ARBITRUM_ONE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.POLYGON] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.POLYGON_MUMBAI] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.GOERLI] = GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.CELO] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.CELO_ALFAJORES] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.BNB] = BNB_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.OPTIMISM_GOERLI] = OPTIMISM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.OPTIMISM_SEPOLIA] = OPTIMISM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.ARBITRUM_GOERLI] = ARBITRUM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.ARBITRUM_SEPOLIA] = ARBITRUM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.SEPOLIA] = SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.AVALANCHE] = AVALANCHE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.BASE] = BASE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.BASE_GOERLI] = BASE_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.ZORA] = ZORA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[exports.ChainId.ZORA_SEPOLIA] = ZORA_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M);
 /* V3 Contract Addresses */
 
 var V3_CORE_FACTORY_ADDRESSES = /*#__PURE__*/_extends({}, /*#__PURE__*/SUPPORTED_CHAINS.reduce(function (memo, chainId) {
@@ -305,7 +327,7 @@ var MIXED_ROUTE_QUOTER_V1_ADDRESSES = /*#__PURE__*/SUPPORTED_CHAINS.reduce(funct
   return memo;
 }, {});
 var SWAP_ROUTER_02_ADDRESSES = function SWAP_ROUTER_02_ADDRESSES(chainId) {
-  if (chainId in SUPPORTED_CHAINS) {
+  if (SUPPORTED_CHAINS.includes(chainId)) {
     var _CHAIN_TO_ADDRESSES_M2;
 
     var id = chainId;
diff --git a/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.development.js.map b/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.development.js.map
index c024afa..91affc9 100644
--- a/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.development.js.map
+++ b/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.development.js.map
@@ -1 +1 @@
-{"version":3,"file":"sdk-core.cjs.development.js","sources":["../src/chains.ts","../src/addresses.ts","../src/constants.ts","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/percent.ts","../src/entities/fractions/price.ts","../src/entities/baseCurrency.ts","../src/entities/nativeCurrency.ts","../src/utils/validateAndParseAddress.ts","../src/entities/token.ts","../src/entities/weth9.ts","../src/entities/ether.ts","../src/utils/computePriceImpact.ts","../src/utils/sortedInsert.ts","../src/utils/sqrt.ts"],"sourcesContent":["export enum ChainId {\n  MAINNET = 1,\n  GOERLI = 5,\n  SEPOLIA = 11155111,\n  OPTIMISM = 10,\n  OPTIMISM_GOERLI = 420,\n  OPTIMISM_SEPOLIA = 11155420,\n  ARBITRUM_ONE = 42161,\n  ARBITRUM_GOERLI = 421613,\n  ARBITRUM_SEPOLIA = 421614,\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001,\n  CELO = 42220,\n  CELO_ALFAJORES = 44787,\n  GNOSIS = 100,\n  MOONBEAM = 1284,\n  BNB = 56,\n  AVALANCHE = 43114,\n  BASE_GOERLI = 84531,\n  BASE = 8453\n}\n\nexport const SUPPORTED_CHAINS = [\n  ChainId.MAINNET,\n  ChainId.OPTIMISM,\n  ChainId.OPTIMISM_GOERLI,\n  ChainId.OPTIMISM_SEPOLIA,\n  ChainId.ARBITRUM_ONE,\n  ChainId.ARBITRUM_GOERLI,\n  ChainId.ARBITRUM_SEPOLIA,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.GOERLI,\n  ChainId.SEPOLIA,\n  ChainId.CELO_ALFAJORES,\n  ChainId.CELO,\n  ChainId.BNB,\n  ChainId.AVALANCHE,\n  ChainId.BASE,\n  ChainId.BASE_GOERLI\n] as const\nexport type SupportedChainsType = typeof SUPPORTED_CHAINS[number]\n\nexport enum NativeCurrencyName {\n  // Strings match input for CLI\n  ETHER = 'ETH',\n  MATIC = 'MATIC',\n  CELO = 'CELO',\n  GNOSIS = 'XDAI',\n  MOONBEAM = 'GLMR',\n  BNB = 'BNB',\n  AVAX = 'AVAX'\n}\n","import { ChainId, SUPPORTED_CHAINS, SupportedChainsType } from './chains'\n\ntype AddressMap = { [chainId: number]: string }\n\ntype ChainAddresses = {\n  v3CoreFactoryAddress: string\n  multicallAddress: string\n  quoterAddress: string\n  v3MigratorAddress?: string\n  nonfungiblePositionManagerAddress?: string\n  tickLensAddress?: string\n  swapRouter02Address?: string\n  v1MixedRouteQuoterAddress?: string\n}\n\nconst DEFAULT_NETWORKS = [ChainId.MAINNET, ChainId.GOERLI, ChainId.SEPOLIA]\n\nfunction constructSameAddressMap(address: string, additionalNetworks: ChainId[] = []): AddressMap {\n  return DEFAULT_NETWORKS.concat(additionalNetworks).reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = address\n    return memo\n  }, {})\n}\n\nexport const UNI_ADDRESSES: AddressMap = constructSameAddressMap('0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', [\n  ChainId.OPTIMISM,\n  ChainId.ARBITRUM_ONE,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.SEPOLIA\n])\n\nexport const UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = '0x8B799381ac40b838BBA4131ffB26197C432AFe78'\n\n/**\n * @deprecated use V2_FACTORY_ADDRESSES instead\n */\nexport const V2_FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'\nexport const V2_FACTORY_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.GOERLI]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.SEPOLIA]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.OPTIMISM]: '0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf',\n  [ChainId.ARBITRUM_ONE]: '0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9',\n  [ChainId.AVALANCHE]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.BASE]: '0x8909dc15e40173ff4699343b6eb8132c65e18ec6',\n  [ChainId.BNB]: '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6',\n  [ChainId.POLYGON]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.CELO]: '0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f'\n}\n/**\n * @deprecated use V2_ROUTER_ADDRESSES instead\n */\nexport const V2_ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\nexport const V2_ROUTER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.GOERLI]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.SEPOLIA]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.ARBITRUM_ONE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.OPTIMISM]: '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2',\n  [ChainId.BASE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.AVALANCHE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.BNB]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.POLYGON]: '0xedf6066a2b290c185783862c7f4776a2c8077ad1'\n}\n\n// Networks that share most of the same addresses i.e. Mainnet, Goerli, Optimism, Arbitrum, Polygon\nconst DEFAULT_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\n  multicallAddress: '0x1F98415757620B543A52E61c46B32eB19261F984',\n  quoterAddress: '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6',\n  v3MigratorAddress: '0xA5644E29708357803b5A882D272c41cC0dF92B34',\n  nonfungiblePositionManagerAddress: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88'\n}\nconst MAINNET_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E'\n}\nconst GOERLI_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0xBa60b6e6fF25488308789E6e0A65D838be34194e'\n}\n\nconst OPTIMISM_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\nconst ARBITRUM_ONE_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  multicallAddress: '0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB',\n  tickLensAddress: '0xbfd8137f7d1516D3ea5cA83523914859ec47F573'\n}\nconst POLYGON_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\n\n// celo v3 addresses\nconst CELO_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc',\n  multicallAddress: '0x633987602DE5C4F337e3DbF265303A1080324204',\n  quoterAddress: '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8',\n  v3MigratorAddress: '0x3cFd4d48EDfDCC53D3f173F596f621064614C582',\n  nonfungiblePositionManagerAddress: '0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A',\n  tickLensAddress: '0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D'\n}\n\n// BNB v3 addresses\nconst BNB_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7',\n  multicallAddress: '0x963Df249eD09c358A4819E39d9Cd5736c3087184',\n  quoterAddress: '0x78D78E420Da98ad378D7799bE8f4AF69033EB077',\n  v3MigratorAddress: '0x32681814957e0C13117ddc0c2aba232b5c9e760f',\n  nonfungiblePositionManagerAddress: '0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613',\n  tickLensAddress: '0xD9270014D396281579760619CCf4c3af0501A47C',\n  swapRouter02Address: '0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2'\n}\n\n// optimism goerli addresses\nconst OPTIMISM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10',\n  multicallAddress: '0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd',\n  quoterAddress: '0x9569CbA925c8ca2248772A9A4976A516743A246F',\n  v3MigratorAddress: '0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8',\n  nonfungiblePositionManagerAddress: '0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6',\n  tickLensAddress: '0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e'\n}\n\n// optimism sepolia addresses\nconst OPTIMISM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF',\n  multicallAddress: '0x80e4e06841bb76AA9735E0448cB8d003C0EF009a',\n  quoterAddress: '0x0FBEa6cf957d95ee9313490050F6A0DA68039404',\n  v3MigratorAddress: '0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07',\n  nonfungiblePositionManagerAddress: '0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d',\n  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5'\n}\n\n// arbitrum goerli v3 addresses\nconst ARBITRUM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6',\n  multicallAddress: '0x8260CB40247290317a4c062F3542622367F206Ee',\n  quoterAddress: '0x1dd92b83591781D0C6d98d07391eea4b9a6008FA',\n  v3MigratorAddress: '0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3',\n  nonfungiblePositionManagerAddress: '0x622e4726a167799826d1E1D150b076A7725f5D81',\n  tickLensAddress: '0xb52429333da969a0C79a60930a4Bf0020E5D1DE8'\n}\n\n// arbitrum sepolia v3 addresses\nconst ARBITRUM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e',\n  multicallAddress: '0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A',\n  quoterAddress: '0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B',\n  v3MigratorAddress: '0x398f43ef2c67B941147157DA1c5a868E906E043D',\n  nonfungiblePositionManagerAddress: '0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65',\n  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9'\n}\n\n// sepolia v3 addresses\nconst SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x0227628f3F023bb0B980b67D528571c95c6DaC1c',\n  multicallAddress: '0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07',\n  quoterAddress: '0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3',\n  v3MigratorAddress: '0x729004182cF005CEC8Bd85df140094b6aCbe8b15',\n  nonfungiblePositionManagerAddress: '0x1238536071E1c677A632429e3655c799b22cDA52',\n  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07'\n}\n\n// Avalanche v3 addresses\nconst AVALANCHE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD',\n  multicallAddress: '0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2',\n  quoterAddress: '0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F',\n  v3MigratorAddress: '0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97',\n  nonfungiblePositionManagerAddress: '0x655C406EBFa14EE2006250925e54ec43AD184f8B',\n  tickLensAddress: '0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950',\n  swapRouter02Address: '0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE'\n}\n\nconst BASE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x33128a8fC17869897dcE68Ed026d694621f6FDfD',\n  multicallAddress: '0x091e99cb1C49331a94dD62755D168E941AbD0693',\n  quoterAddress: '0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a',\n  v3MigratorAddress: '0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7',\n  nonfungiblePositionManagerAddress: '0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1',\n  tickLensAddress: '0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d',\n  swapRouter02Address: '0x2626664c2603336E57B271c5C0b26F421741e481'\n}\n\n// Base Goerli v3 addresses\nconst BASE_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2',\n  multicallAddress: '0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439',\n  quoterAddress: '0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9',\n  v3MigratorAddress: '0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE',\n  nonfungiblePositionManagerAddress: '0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30',\n  tickLensAddress: '0x1acB873Ee909D0c98adB18e4474943249F931b92',\n  swapRouter02Address: '0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d'\n}\n\nexport const CHAIN_TO_ADDRESSES_MAP: Record<SupportedChainsType, ChainAddresses> = {\n  [ChainId.MAINNET]: MAINNET_ADDRESSES,\n  [ChainId.OPTIMISM]: OPTIMISM_ADDRESSES,\n  [ChainId.ARBITRUM_ONE]: ARBITRUM_ONE_ADDRESSES,\n  [ChainId.POLYGON]: POLYGON_ADDRESSES,\n  [ChainId.POLYGON_MUMBAI]: POLYGON_ADDRESSES,\n  [ChainId.GOERLI]: GOERLI_ADDRESSES,\n  [ChainId.CELO]: CELO_ADDRESSES,\n  [ChainId.CELO_ALFAJORES]: CELO_ADDRESSES,\n  [ChainId.BNB]: BNB_ADDRESSES,\n  [ChainId.OPTIMISM_GOERLI]: OPTIMISM_GOERLI_ADDRESSES,\n  [ChainId.OPTIMISM_SEPOLIA]: OPTIMISM_SEPOLIA_ADDRESSES,\n  [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_ADDRESSES,\n  [ChainId.ARBITRUM_SEPOLIA]: ARBITRUM_SEPOLIA_ADDRESSES,\n  [ChainId.SEPOLIA]: SEPOLIA_ADDRESSES,\n  [ChainId.AVALANCHE]: AVALANCHE_ADDRESSES,\n  [ChainId.BASE]: BASE_ADDRESSES,\n  [ChainId.BASE_GOERLI]: BASE_GOERLI_ADDRESSES\n}\n\n/* V3 Contract Addresses */\nexport const V3_CORE_FACTORY_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].v3CoreFactoryAddress\n    return memo\n  }, {})\n}\n\nexport const V3_MIGRATOR_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const v3MigratorAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v3MigratorAddress\n    if (v3MigratorAddress) {\n      memo[chainId] = v3MigratorAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MULTICALL_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].multicallAddress\n    return memo\n  }, {})\n}\n\n/**\n * The oldest V0 governance address\n */\nexport const GOVERNANCE_ALPHA_V0_ADDRESSES: AddressMap = constructSameAddressMap(\n  '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\n)\n/**\n * The older V1 governance address\n */\nexport const GOVERNANCE_ALPHA_V1_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0xC4e172459f1E7939D522503B81AFAaC1014CE6F6'\n}\n/**\n * The latest governor bravo that is currently admin of timelock\n */\nexport const GOVERNANCE_BRAVO_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x408ED6354d4973f66138C91495F2f2FCbd8724C3'\n}\n\nexport const TIMELOCK_ADDRESSES: AddressMap = constructSameAddressMap('0x1a9C8182C09F50C8318d769245beA52c32BE35BC')\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e'\n}\n\nexport const ARGENT_WALLET_DETECTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8'\n}\n\nexport const QUOTER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].quoterAddress\n    return memo\n  }, {})\n}\n\nexport const NONFUNGIBLE_POSITION_MANAGER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const nonfungiblePositionManagerAddress = CHAIN_TO_ADDRESSES_MAP[chainId].nonfungiblePositionManagerAddress\n    if (nonfungiblePositionManagerAddress) {\n      memo[chainId] = nonfungiblePositionManagerAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const ENS_REGISTRAR_ADDRESSES: AddressMap = {\n  ...constructSameAddressMap('0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e')\n}\n\nexport const SOCKS_CONTROLLER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x65770b5283117639760beA3F867b69b3697a91dd'\n}\n\nexport const TICK_LENS_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const tickLensAddress = CHAIN_TO_ADDRESSES_MAP[chainId].tickLensAddress\n    if (tickLensAddress) {\n      memo[chainId] = tickLensAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MIXED_ROUTE_QUOTER_V1_ADDRESSES: AddressMap = SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n  const v1MixedRouteQuoterAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v1MixedRouteQuoterAddress\n  if (v1MixedRouteQuoterAddress) {\n    memo[chainId] = v1MixedRouteQuoterAddress\n  }\n  return memo\n}, {})\n\nexport const SWAP_ROUTER_02_ADDRESSES = (chainId: number) => {\n  if (chainId in SUPPORTED_CHAINS) {\n    const id = chainId as SupportedChainsType\n    return CHAIN_TO_ADDRESSES_MAP[id].swapRouter02Address ?? '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45'\n  }\n  return ''\n}\n","import JSBI from 'jsbi'\n\n// exports for external consumption\nexport type BigintIsh = JSBI | string | number\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\n    this.numerator = JSBI.BigInt(numerator)\n    this.denominator = JSBI.BigInt(denominator)\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\n      return new Fraction(fractionish)\n\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\n    throw new Error('Could not parse fraction')\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { Currency } from '../currency'\nimport { Token } from '../token'\nimport { Fraction } from './fraction'\nimport _Big from 'big.js'\n\nimport toFormat from 'toformat'\nimport { BigintIsh, Rounding, MaxUint256 } from '../../constants'\n\nconst Big = toFormat(_Big)\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T\n  public readonly decimalScale: JSBI\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount)\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator)\n  }\n\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\n    super(numerator, denominator)\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\n    this.currency = currency\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const added = super.add(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const subtracted = super.subtract(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\n  }\n}\n","import JSBI from 'jsbi'\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator)\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other))\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other))\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other))\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other))\n  }\n\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Currency } from '../currency'\nimport { Fraction } from './fraction'\nimport { CurrencyAmount } from './currencyAmount'\n\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\n  public readonly baseCurrency: TBase // input i.e. denominator\n  public readonly quoteCurrency: TQuote // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [{ baseAmount: CurrencyAmount<TBase>; quoteAmount: CurrencyAmount<TQuote> }]\n  ) {\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\n\n    if (args.length === 4) {\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ]\n    }\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\n    const result = super.multiply(currencyAmount)\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { Token } from './token'\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class BaseCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\n\n    this.chainId = chainId\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token\n}\n","import { BaseCurrency } from './baseCurrency'\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends BaseCurrency {\n  public readonly isNative: true = true\n  public readonly isToken: false = false\n}\n","import { getAddress } from '@ethersproject/address'\n\n/**\n * Validates an address and returns the parsed (checksummed) version of that address\n * @param address the unchecksummed hex address\n */\nexport function validateAndParseAddress(address: string): string {\n  try {\n    return getAddress(address)\n  } catch (error) {\n    throw new Error(`${address} is not a valid address.`)\n  }\n}\n\n// Checks a string starts with 0x, is 42 characters long and contains only hex characters after 0x\nconst startsWith0xLen42HexRegex = /^0x[0-9a-fA-F]{40}$/\n\n/**\n * Checks if an address is valid by checking 0x prefix, length === 42 and hex encoding.\n * @param address the unchecksummed hex address\n */\nexport function checkValidAddress(address: string): string {\n  if (startsWith0xLen42HexRegex.test(address)) {\n    return address\n  }\n\n  throw new Error(`${address} is not a valid address.`)\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport invariant from 'tiny-invariant'\nimport { checkValidAddress, validateAndParseAddress } from '../utils/validateAndParseAddress'\nimport { BaseCurrency } from './baseCurrency'\nimport { Currency } from './currency'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends BaseCurrency {\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n\n  /**\n   * The contract address on the chain on which this token lives\n   */\n  public readonly address: string\n\n  /**\n   * Relevant for fee-on-transfer (FOT) token taxes,\n   * Not every ERC20 token is FOT token, so this field is optional\n   */\n  public readonly buyFeeBps?: BigNumber\n  public readonly sellFeeBps?: BigNumber\n\n  /**\n   *\n   * @param chainId {@link BaseCurrency#chainId}\n   * @param address The contract address on the chain on which this token lives\n   * @param decimals {@link BaseCurrency#decimals}\n   * @param symbol {@link BaseCurrency#symbol}\n   * @param name {@link BaseCurrency#name}\n   * @param bypassChecksum If true it only checks for length === 42, startsWith 0x and contains only hex characters\n   * @param buyFeeBps Buy fee tax for FOT tokens, in basis points\n   * @param sellFeeBps Sell fee tax for FOT tokens, in basis points\n   */\n  public constructor(\n    chainId: number,\n    address: string,\n    decimals: number,\n    symbol?: string,\n    name?: string,\n    bypassChecksum?: boolean,\n    buyFeeBps?: BigNumber,\n    sellFeeBps?: BigNumber\n  ) {\n    super(chainId, decimals, symbol, name)\n    if (bypassChecksum) {\n      this.address = checkValidAddress(address)\n    } else {\n      this.address = validateAndParseAddress(address)\n    }\n    if (buyFeeBps) {\n      invariant(buyFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    if (sellFeeBps) {\n      invariant(sellFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    this.buyFeeBps = buyFeeBps\n    this.sellFeeBps = sellFeeBps\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return other.isToken && this.chainId === other.chainId && this.address.toLowerCase() === other.address.toLowerCase()\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address.toLowerCase() !== other.address.toLowerCase(), 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this\n  }\n}\n","import { Token } from './token'\n\n/**\n * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped\n */\nexport const WETH9: { [chainId: number]: Token } = {\n  [1]: new Token(1, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'),\n  [3]: new Token(3, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [4]: new Token(4, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [5]: new Token(5, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'),\n  [42]: new Token(42, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'),\n\n  [10]: new Token(10, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [69]: new Token(69, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [11155420]: new Token(11155420, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [42161]: new Token(42161, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),\n  [421611]: new Token(421611, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),\n  [421614]: new Token(421614, '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73', 18, 'WETH', 'Wrapped Ether'),\n\n  [8453]: new Token(8453, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [56]: new Token(56, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n  [137]: new Token(137, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),\n  [43114]: new Token(43114, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX')\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { NativeCurrency } from './nativeCurrency'\nimport { Token } from './token'\nimport { WETH9 } from './weth9'\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ETH', 'Ether')\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId]\n    invariant(!!weth9, 'WRAPPED')\n    return weth9\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {}\n\n  public static onChain(chainId: number): Ether {\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency, CurrencyAmount, Percent, Price } from '../entities'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount)\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\n}\n","import invariant from 'tiny-invariant'\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\n\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst TWO = JSBI.BigInt(2)\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\n  }\n\n  let z: JSBI\n  let x: JSBI\n  z = value\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\n  while (JSBI.lessThan(x, z)) {\n    z = x\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\n  }\n  return z\n}\n"],"names":["ChainId","SUPPORTED_CHAINS","MAINNET","OPTIMISM","OPTIMISM_GOERLI","OPTIMISM_SEPOLIA","ARBITRUM_ONE","ARBITRUM_GOERLI","ARBITRUM_SEPOLIA","POLYGON","POLYGON_MUMBAI","GOERLI","SEPOLIA","CELO_ALFAJORES","CELO","BNB","AVALANCHE","BASE","BASE_GOERLI","NativeCurrencyName","DEFAULT_NETWORKS","constructSameAddressMap","address","additionalNetworks","concat","reduce","memo","chainId","UNI_ADDRESSES","UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS","V2_FACTORY_ADDRESS","V2_FACTORY_ADDRESSES","V2_ROUTER_ADDRESS","V2_ROUTER_ADDRESSES","DEFAULT_ADDRESSES","v3CoreFactoryAddress","multicallAddress","quoterAddress","v3MigratorAddress","nonfungiblePositionManagerAddress","MAINNET_ADDRESSES","v1MixedRouteQuoterAddress","GOERLI_ADDRESSES","OPTIMISM_ADDRESSES","ARBITRUM_ONE_ADDRESSES","tickLensAddress","POLYGON_ADDRESSES","CELO_ADDRESSES","BNB_ADDRESSES","swapRouter02Address","OPTIMISM_GOERLI_ADDRESSES","OPTIMISM_SEPOLIA_ADDRESSES","ARBITRUM_GOERLI_ADDRESSES","ARBITRUM_SEPOLIA_ADDRESSES","SEPOLIA_ADDRESSES","AVALANCHE_ADDRESSES","BASE_ADDRESSES","BASE_GOERLI_ADDRESSES","CHAIN_TO_ADDRESSES_MAP","V3_CORE_FACTORY_ADDRESSES","V3_MIGRATOR_ADDRESSES","MULTICALL_ADDRESSES","GOVERNANCE_ALPHA_V0_ADDRESSES","GOVERNANCE_ALPHA_V1_ADDRESSES","GOVERNANCE_BRAVO_ADDRESSES","TIMELOCK_ADDRESSES","MERKLE_DISTRIBUTOR_ADDRESS","ARGENT_WALLET_DETECTOR_ADDRESS","QUOTER_ADDRESSES","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","ENS_REGISTRAR_ADDRESSES","SOCKS_CONTROLLER_ADDRESSES","TICK_LENS_ADDRESSES","MIXED_ROUTE_QUOTER_V1_ADDRESSES","SWAP_ROUTER_02_ADDRESSES","id","TradeType","Rounding","MaxUint256","JSBI","BigInt","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","Error","invert","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","Number","isInteger","invariant","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","decimals","fromRawAmount","rawAmount","fromFractionalAmount","equals","added","subtracted","multiplied","divided","toExact","isToken","wrapped","ONE_HUNDRED","toPercent","fraction","Percent","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","quote","currencyAmount","adjustedForDecimals","BaseCurrency","symbol","name","isSafeInteger","NativeCurrency","validateAndParseAddress","getAddress","error","startsWith0xLen42HexRegex","checkValidAddress","test","Token","bypassChecksum","buyFeeBps","sellFeeBps","gte","BigNumber","from","toLowerCase","sortsBefore","WETH9","Ether","onChain","_etherCache","isNative","weth9","computePriceImpact","midPrice","inputAmount","outputAmount","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","push","isFull","lo","hi","mid","splice","pop","MAX_SAFE_INTEGER","ZERO","ONE","TWO","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"sdk-core.cjs.development.js","sources":["../src/chains.ts","../src/addresses.ts","../src/constants.ts","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/percent.ts","../src/entities/fractions/price.ts","../src/entities/baseCurrency.ts","../src/entities/nativeCurrency.ts","../src/utils/validateAndParseAddress.ts","../src/entities/token.ts","../src/entities/weth9.ts","../src/entities/ether.ts","../src/utils/computePriceImpact.ts","../src/utils/sortedInsert.ts","../src/utils/sqrt.ts"],"sourcesContent":["export enum ChainId {\n  MAINNET = 1,\n  GOERLI = 5,\n  SEPOLIA = 11155111,\n  OPTIMISM = 10,\n  OPTIMISM_GOERLI = 420,\n  OPTIMISM_SEPOLIA = 11155420,\n  ARBITRUM_ONE = 42161,\n  ARBITRUM_GOERLI = 421613,\n  ARBITRUM_SEPOLIA = 421614,\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001,\n  CELO = 42220,\n  CELO_ALFAJORES = 44787,\n  GNOSIS = 100,\n  MOONBEAM = 1284,\n  BNB = 56,\n  AVALANCHE = 43114,\n  BASE_GOERLI = 84531,\n  BASE = 8453,\n  ZORA = 7777777,\n  ZORA_SEPOLIA = 999999999\n}\n\nexport const SUPPORTED_CHAINS = [\n  ChainId.MAINNET,\n  ChainId.OPTIMISM,\n  ChainId.OPTIMISM_GOERLI,\n  ChainId.OPTIMISM_SEPOLIA,\n  ChainId.ARBITRUM_ONE,\n  ChainId.ARBITRUM_GOERLI,\n  ChainId.ARBITRUM_SEPOLIA,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.GOERLI,\n  ChainId.SEPOLIA,\n  ChainId.CELO_ALFAJORES,\n  ChainId.CELO,\n  ChainId.BNB,\n  ChainId.AVALANCHE,\n  ChainId.BASE,\n  ChainId.BASE_GOERLI,\n  ChainId.ZORA,\n  ChainId.ZORA_SEPOLIA\n] as const\nexport type SupportedChainsType = typeof SUPPORTED_CHAINS[number]\n\nexport enum NativeCurrencyName {\n  // Strings match input for CLI\n  ETHER = 'ETH',\n  MATIC = 'MATIC',\n  CELO = 'CELO',\n  GNOSIS = 'XDAI',\n  MOONBEAM = 'GLMR',\n  BNB = 'BNB',\n  AVAX = 'AVAX'\n}\n","import { ChainId, SUPPORTED_CHAINS, SupportedChainsType } from './chains'\n\ntype AddressMap = { [chainId: number]: string }\n\ntype ChainAddresses = {\n  v3CoreFactoryAddress: string\n  multicallAddress: string\n  quoterAddress: string\n  v3MigratorAddress?: string\n  nonfungiblePositionManagerAddress?: string\n  tickLensAddress?: string\n  swapRouter02Address?: string\n  v1MixedRouteQuoterAddress?: string\n}\n\nconst DEFAULT_NETWORKS = [ChainId.MAINNET, ChainId.GOERLI, ChainId.SEPOLIA]\n\nfunction constructSameAddressMap(address: string, additionalNetworks: ChainId[] = []): AddressMap {\n  return DEFAULT_NETWORKS.concat(additionalNetworks).reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = address\n    return memo\n  }, {})\n}\n\nexport const UNI_ADDRESSES: AddressMap = constructSameAddressMap('0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', [\n  ChainId.OPTIMISM,\n  ChainId.ARBITRUM_ONE,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.SEPOLIA\n])\n\nexport const UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = '0x8B799381ac40b838BBA4131ffB26197C432AFe78'\n\n/**\n * @deprecated use V2_FACTORY_ADDRESSES instead\n */\nexport const V2_FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'\nexport const V2_FACTORY_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.GOERLI]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.SEPOLIA]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.OPTIMISM]: '0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf',\n  [ChainId.ARBITRUM_ONE]: '0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9',\n  [ChainId.AVALANCHE]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.BASE]: '0x8909dc15e40173ff4699343b6eb8132c65e18ec6',\n  [ChainId.BNB]: '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6',\n  [ChainId.POLYGON]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.CELO]: '0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f'\n}\n/**\n * @deprecated use V2_ROUTER_ADDRESSES instead\n */\nexport const V2_ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\nexport const V2_ROUTER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.GOERLI]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.SEPOLIA]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.ARBITRUM_ONE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.OPTIMISM]: '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2',\n  [ChainId.BASE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.AVALANCHE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.BNB]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.POLYGON]: '0xedf6066a2b290c185783862c7f4776a2c8077ad1'\n}\n\n// Networks that share most of the same addresses i.e. Mainnet, Goerli, Optimism, Arbitrum, Polygon\nconst DEFAULT_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\n  multicallAddress: '0x1F98415757620B543A52E61c46B32eB19261F984',\n  quoterAddress: '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6',\n  v3MigratorAddress: '0xA5644E29708357803b5A882D272c41cC0dF92B34',\n  nonfungiblePositionManagerAddress: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88'\n}\nconst MAINNET_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E'\n}\nconst GOERLI_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0xBa60b6e6fF25488308789E6e0A65D838be34194e'\n}\n\nconst OPTIMISM_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\nconst ARBITRUM_ONE_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  multicallAddress: '0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB',\n  tickLensAddress: '0xbfd8137f7d1516D3ea5cA83523914859ec47F573'\n}\nconst POLYGON_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\n\n// celo v3 addresses\nconst CELO_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc',\n  multicallAddress: '0x633987602DE5C4F337e3DbF265303A1080324204',\n  quoterAddress: '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8',\n  v3MigratorAddress: '0x3cFd4d48EDfDCC53D3f173F596f621064614C582',\n  nonfungiblePositionManagerAddress: '0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A',\n  tickLensAddress: '0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D'\n}\n\n// BNB v3 addresses\nconst BNB_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7',\n  multicallAddress: '0x963Df249eD09c358A4819E39d9Cd5736c3087184',\n  quoterAddress: '0x78D78E420Da98ad378D7799bE8f4AF69033EB077',\n  v3MigratorAddress: '0x32681814957e0C13117ddc0c2aba232b5c9e760f',\n  nonfungiblePositionManagerAddress: '0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613',\n  tickLensAddress: '0xD9270014D396281579760619CCf4c3af0501A47C',\n  swapRouter02Address: '0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2'\n}\n\n// optimism goerli addresses\nconst OPTIMISM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10',\n  multicallAddress: '0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd',\n  quoterAddress: '0x9569CbA925c8ca2248772A9A4976A516743A246F',\n  v3MigratorAddress: '0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8',\n  nonfungiblePositionManagerAddress: '0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6',\n  tickLensAddress: '0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e'\n}\n\n// optimism sepolia addresses\nconst OPTIMISM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF',\n  multicallAddress: '0x80e4e06841bb76AA9735E0448cB8d003C0EF009a',\n  quoterAddress: '0x0FBEa6cf957d95ee9313490050F6A0DA68039404',\n  v3MigratorAddress: '0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07',\n  nonfungiblePositionManagerAddress: '0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d',\n  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5',\n  swapRouter02Address: '0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4'\n}\n\n// arbitrum goerli v3 addresses\nconst ARBITRUM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6',\n  multicallAddress: '0x8260CB40247290317a4c062F3542622367F206Ee',\n  quoterAddress: '0x1dd92b83591781D0C6d98d07391eea4b9a6008FA',\n  v3MigratorAddress: '0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3',\n  nonfungiblePositionManagerAddress: '0x622e4726a167799826d1E1D150b076A7725f5D81',\n  tickLensAddress: '0xb52429333da969a0C79a60930a4Bf0020E5D1DE8'\n}\n\n// arbitrum sepolia v3 addresses\nconst ARBITRUM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e',\n  multicallAddress: '0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A',\n  quoterAddress: '0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B',\n  v3MigratorAddress: '0x398f43ef2c67B941147157DA1c5a868E906E043D',\n  nonfungiblePositionManagerAddress: '0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65',\n  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9',\n  swapRouter02Address: '0x101F443B4d1b059569D643917553c771E1b9663E'\n}\n\n// sepolia v3 addresses\nconst SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x0227628f3F023bb0B980b67D528571c95c6DaC1c',\n  multicallAddress: '0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07',\n  quoterAddress: '0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3',\n  v3MigratorAddress: '0x729004182cF005CEC8Bd85df140094b6aCbe8b15',\n  nonfungiblePositionManagerAddress: '0x1238536071E1c677A632429e3655c799b22cDA52',\n  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07',\n  swapRouter02Address: '0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E'\n}\n\n// Avalanche v3 addresses\nconst AVALANCHE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD',\n  multicallAddress: '0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2',\n  quoterAddress: '0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F',\n  v3MigratorAddress: '0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97',\n  nonfungiblePositionManagerAddress: '0x655C406EBFa14EE2006250925e54ec43AD184f8B',\n  tickLensAddress: '0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950',\n  swapRouter02Address: '0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE'\n}\n\nconst BASE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x33128a8fC17869897dcE68Ed026d694621f6FDfD',\n  multicallAddress: '0x091e99cb1C49331a94dD62755D168E941AbD0693',\n  quoterAddress: '0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a',\n  v3MigratorAddress: '0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7',\n  nonfungiblePositionManagerAddress: '0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1',\n  tickLensAddress: '0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d',\n  swapRouter02Address: '0x2626664c2603336E57B271c5C0b26F421741e481'\n}\n\n// Base Goerli v3 addresses\nconst BASE_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2',\n  multicallAddress: '0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439',\n  quoterAddress: '0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9',\n  v3MigratorAddress: '0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE',\n  nonfungiblePositionManagerAddress: '0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30',\n  tickLensAddress: '0x1acB873Ee909D0c98adB18e4474943249F931b92',\n  swapRouter02Address: '0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d'\n}\n\nconst ZORA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb',\n  multicallAddress: '0xA51c76bEE6746cB487a7e9312E43e2b8f4A37C15',\n  quoterAddress: '0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df',\n  v3MigratorAddress: '0x048352d8dCF13686982C799da63fA6426a9D0b60',\n  nonfungiblePositionManagerAddress: '0xbC91e8DfA3fF18De43853372A3d7dfe585137D78',\n  tickLensAddress: '0x209AAda09D74Ad3B8D0E92910Eaf85D2357e3044',\n  swapRouter02Address: '0x7De04c96BE5159c3b5CeffC82aa176dc81281557'\n}\n\nconst ZORA_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x4324A677D74764f46f33ED447964252441aA8Db6',\n  multicallAddress: '0xA1E7e3A69671C4494EC59Dbd442de930a93F911A',\n  quoterAddress: '0xC195976fEF0985886E37036E2DF62bF371E12Df0',\n  v3MigratorAddress: '0x65ef259b31bf1d977c37e9434658694267674897',\n  nonfungiblePositionManagerAddress: '0xB8458EaAe43292e3c1F7994EFd016bd653d23c20',\n  tickLensAddress: '0x23C0F71877a1Fc4e20A78018f9831365c85f3064'\n}\n\nexport const CHAIN_TO_ADDRESSES_MAP: Record<SupportedChainsType, ChainAddresses> = {\n  [ChainId.MAINNET]: MAINNET_ADDRESSES,\n  [ChainId.OPTIMISM]: OPTIMISM_ADDRESSES,\n  [ChainId.ARBITRUM_ONE]: ARBITRUM_ONE_ADDRESSES,\n  [ChainId.POLYGON]: POLYGON_ADDRESSES,\n  [ChainId.POLYGON_MUMBAI]: POLYGON_ADDRESSES,\n  [ChainId.GOERLI]: GOERLI_ADDRESSES,\n  [ChainId.CELO]: CELO_ADDRESSES,\n  [ChainId.CELO_ALFAJORES]: CELO_ADDRESSES,\n  [ChainId.BNB]: BNB_ADDRESSES,\n  [ChainId.OPTIMISM_GOERLI]: OPTIMISM_GOERLI_ADDRESSES,\n  [ChainId.OPTIMISM_SEPOLIA]: OPTIMISM_SEPOLIA_ADDRESSES,\n  [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_ADDRESSES,\n  [ChainId.ARBITRUM_SEPOLIA]: ARBITRUM_SEPOLIA_ADDRESSES,\n  [ChainId.SEPOLIA]: SEPOLIA_ADDRESSES,\n  [ChainId.AVALANCHE]: AVALANCHE_ADDRESSES,\n  [ChainId.BASE]: BASE_ADDRESSES,\n  [ChainId.BASE_GOERLI]: BASE_GOERLI_ADDRESSES,\n  [ChainId.ZORA]: ZORA_ADDRESSES,\n  [ChainId.ZORA_SEPOLIA]: ZORA_SEPOLIA_ADDRESSES\n}\n\n/* V3 Contract Addresses */\nexport const V3_CORE_FACTORY_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].v3CoreFactoryAddress\n    return memo\n  }, {})\n}\n\nexport const V3_MIGRATOR_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const v3MigratorAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v3MigratorAddress\n    if (v3MigratorAddress) {\n      memo[chainId] = v3MigratorAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MULTICALL_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].multicallAddress\n    return memo\n  }, {})\n}\n\n/**\n * The oldest V0 governance address\n */\nexport const GOVERNANCE_ALPHA_V0_ADDRESSES: AddressMap = constructSameAddressMap(\n  '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\n)\n/**\n * The older V1 governance address\n */\nexport const GOVERNANCE_ALPHA_V1_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0xC4e172459f1E7939D522503B81AFAaC1014CE6F6'\n}\n/**\n * The latest governor bravo that is currently admin of timelock\n */\nexport const GOVERNANCE_BRAVO_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x408ED6354d4973f66138C91495F2f2FCbd8724C3'\n}\n\nexport const TIMELOCK_ADDRESSES: AddressMap = constructSameAddressMap('0x1a9C8182C09F50C8318d769245beA52c32BE35BC')\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e'\n}\n\nexport const ARGENT_WALLET_DETECTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8'\n}\n\nexport const QUOTER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].quoterAddress\n    return memo\n  }, {})\n}\n\nexport const NONFUNGIBLE_POSITION_MANAGER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const nonfungiblePositionManagerAddress = CHAIN_TO_ADDRESSES_MAP[chainId].nonfungiblePositionManagerAddress\n    if (nonfungiblePositionManagerAddress) {\n      memo[chainId] = nonfungiblePositionManagerAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const ENS_REGISTRAR_ADDRESSES: AddressMap = {\n  ...constructSameAddressMap('0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e')\n}\n\nexport const SOCKS_CONTROLLER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x65770b5283117639760beA3F867b69b3697a91dd'\n}\n\nexport const TICK_LENS_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const tickLensAddress = CHAIN_TO_ADDRESSES_MAP[chainId].tickLensAddress\n    if (tickLensAddress) {\n      memo[chainId] = tickLensAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MIXED_ROUTE_QUOTER_V1_ADDRESSES: AddressMap = SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n  const v1MixedRouteQuoterAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v1MixedRouteQuoterAddress\n  if (v1MixedRouteQuoterAddress) {\n    memo[chainId] = v1MixedRouteQuoterAddress\n  }\n  return memo\n}, {})\n\nexport const SWAP_ROUTER_02_ADDRESSES = (chainId: number) => {\n  if (SUPPORTED_CHAINS.includes(chainId)) {\n    const id = chainId as SupportedChainsType\n    return CHAIN_TO_ADDRESSES_MAP[id].swapRouter02Address ?? '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45'\n  }\n  return ''\n}\n","import JSBI from 'jsbi'\n\n// exports for external consumption\nexport type BigintIsh = JSBI | string | number\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\n    this.numerator = JSBI.BigInt(numerator)\n    this.denominator = JSBI.BigInt(denominator)\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\n      return new Fraction(fractionish)\n\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\n    throw new Error('Could not parse fraction')\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { Currency } from '../currency'\nimport { Token } from '../token'\nimport { Fraction } from './fraction'\nimport _Big from 'big.js'\n\nimport toFormat from 'toformat'\nimport { BigintIsh, Rounding, MaxUint256 } from '../../constants'\n\nconst Big = toFormat(_Big)\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T\n  public readonly decimalScale: JSBI\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount)\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator)\n  }\n\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\n    super(numerator, denominator)\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\n    this.currency = currency\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const added = super.add(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const subtracted = super.subtract(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\n  }\n}\n","import JSBI from 'jsbi'\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator)\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other))\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other))\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other))\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other))\n  }\n\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Currency } from '../currency'\nimport { Fraction } from './fraction'\nimport { CurrencyAmount } from './currencyAmount'\n\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\n  public readonly baseCurrency: TBase // input i.e. denominator\n  public readonly quoteCurrency: TQuote // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [{ baseAmount: CurrencyAmount<TBase>; quoteAmount: CurrencyAmount<TQuote> }]\n  ) {\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\n\n    if (args.length === 4) {\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ]\n    }\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\n    const result = super.multiply(currencyAmount)\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { Token } from './token'\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class BaseCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\n\n    this.chainId = chainId\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token\n}\n","import { BaseCurrency } from './baseCurrency'\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends BaseCurrency {\n  public readonly isNative: true = true\n  public readonly isToken: false = false\n}\n","import { getAddress } from '@ethersproject/address'\n\n/**\n * Validates an address and returns the parsed (checksummed) version of that address\n * @param address the unchecksummed hex address\n */\nexport function validateAndParseAddress(address: string): string {\n  try {\n    return getAddress(address)\n  } catch (error) {\n    throw new Error(`${address} is not a valid address.`)\n  }\n}\n\n// Checks a string starts with 0x, is 42 characters long and contains only hex characters after 0x\nconst startsWith0xLen42HexRegex = /^0x[0-9a-fA-F]{40}$/\n\n/**\n * Checks if an address is valid by checking 0x prefix, length === 42 and hex encoding.\n * @param address the unchecksummed hex address\n */\nexport function checkValidAddress(address: string): string {\n  if (startsWith0xLen42HexRegex.test(address)) {\n    return address\n  }\n\n  throw new Error(`${address} is not a valid address.`)\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport invariant from 'tiny-invariant'\nimport { checkValidAddress, validateAndParseAddress } from '../utils/validateAndParseAddress'\nimport { BaseCurrency } from './baseCurrency'\nimport { Currency } from './currency'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends BaseCurrency {\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n\n  /**\n   * The contract address on the chain on which this token lives\n   */\n  public readonly address: string\n\n  /**\n   * Relevant for fee-on-transfer (FOT) token taxes,\n   * Not every ERC20 token is FOT token, so this field is optional\n   */\n  public readonly buyFeeBps?: BigNumber\n  public readonly sellFeeBps?: BigNumber\n\n  /**\n   *\n   * @param chainId {@link BaseCurrency#chainId}\n   * @param address The contract address on the chain on which this token lives\n   * @param decimals {@link BaseCurrency#decimals}\n   * @param symbol {@link BaseCurrency#symbol}\n   * @param name {@link BaseCurrency#name}\n   * @param bypassChecksum If true it only checks for length === 42, startsWith 0x and contains only hex characters\n   * @param buyFeeBps Buy fee tax for FOT tokens, in basis points\n   * @param sellFeeBps Sell fee tax for FOT tokens, in basis points\n   */\n  public constructor(\n    chainId: number,\n    address: string,\n    decimals: number,\n    symbol?: string,\n    name?: string,\n    bypassChecksum?: boolean,\n    buyFeeBps?: BigNumber,\n    sellFeeBps?: BigNumber\n  ) {\n    super(chainId, decimals, symbol, name)\n    if (bypassChecksum) {\n      this.address = checkValidAddress(address)\n    } else {\n      this.address = validateAndParseAddress(address)\n    }\n    if (buyFeeBps) {\n      invariant(buyFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    if (sellFeeBps) {\n      invariant(sellFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    this.buyFeeBps = buyFeeBps\n    this.sellFeeBps = sellFeeBps\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return other.isToken && this.chainId === other.chainId && this.address.toLowerCase() === other.address.toLowerCase()\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address.toLowerCase() !== other.address.toLowerCase(), 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this\n  }\n}\n","import { Token } from './token'\n\n/**\n * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped\n */\nexport const WETH9: { [chainId: number]: Token } = {\n  [1]: new Token(1, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'),\n  [3]: new Token(3, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [4]: new Token(4, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [5]: new Token(5, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'),\n  [42]: new Token(42, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'),\n\n  [10]: new Token(10, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [69]: new Token(69, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [11155420]: new Token(11155420, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [42161]: new Token(42161, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),\n  [421611]: new Token(421611, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),\n  [421614]: new Token(421614, '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73', 18, 'WETH', 'Wrapped Ether'),\n\n  [8453]: new Token(8453, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [56]: new Token(56, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n  [137]: new Token(137, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),\n  [43114]: new Token(43114, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX')\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { NativeCurrency } from './nativeCurrency'\nimport { Token } from './token'\nimport { WETH9 } from './weth9'\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ETH', 'Ether')\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId]\n    invariant(!!weth9, 'WRAPPED')\n    return weth9\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {}\n\n  public static onChain(chainId: number): Ether {\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency, CurrencyAmount, Percent, Price } from '../entities'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount)\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\n}\n","import invariant from 'tiny-invariant'\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\n\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst TWO = JSBI.BigInt(2)\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\n  }\n\n  let z: JSBI\n  let x: JSBI\n  z = value\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\n  while (JSBI.lessThan(x, z)) {\n    z = x\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\n  }\n  return z\n}\n"],"names":["ChainId","SUPPORTED_CHAINS","MAINNET","OPTIMISM","OPTIMISM_GOERLI","OPTIMISM_SEPOLIA","ARBITRUM_ONE","ARBITRUM_GOERLI","ARBITRUM_SEPOLIA","POLYGON","POLYGON_MUMBAI","GOERLI","SEPOLIA","CELO_ALFAJORES","CELO","BNB","AVALANCHE","BASE","BASE_GOERLI","ZORA","ZORA_SEPOLIA","NativeCurrencyName","DEFAULT_NETWORKS","constructSameAddressMap","address","additionalNetworks","concat","reduce","memo","chainId","UNI_ADDRESSES","UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS","V2_FACTORY_ADDRESS","V2_FACTORY_ADDRESSES","V2_ROUTER_ADDRESS","V2_ROUTER_ADDRESSES","DEFAULT_ADDRESSES","v3CoreFactoryAddress","multicallAddress","quoterAddress","v3MigratorAddress","nonfungiblePositionManagerAddress","MAINNET_ADDRESSES","v1MixedRouteQuoterAddress","GOERLI_ADDRESSES","OPTIMISM_ADDRESSES","ARBITRUM_ONE_ADDRESSES","tickLensAddress","POLYGON_ADDRESSES","CELO_ADDRESSES","BNB_ADDRESSES","swapRouter02Address","OPTIMISM_GOERLI_ADDRESSES","OPTIMISM_SEPOLIA_ADDRESSES","ARBITRUM_GOERLI_ADDRESSES","ARBITRUM_SEPOLIA_ADDRESSES","SEPOLIA_ADDRESSES","AVALANCHE_ADDRESSES","BASE_ADDRESSES","BASE_GOERLI_ADDRESSES","ZORA_ADDRESSES","ZORA_SEPOLIA_ADDRESSES","CHAIN_TO_ADDRESSES_MAP","V3_CORE_FACTORY_ADDRESSES","V3_MIGRATOR_ADDRESSES","MULTICALL_ADDRESSES","GOVERNANCE_ALPHA_V0_ADDRESSES","GOVERNANCE_ALPHA_V1_ADDRESSES","GOVERNANCE_BRAVO_ADDRESSES","TIMELOCK_ADDRESSES","MERKLE_DISTRIBUTOR_ADDRESS","ARGENT_WALLET_DETECTOR_ADDRESS","QUOTER_ADDRESSES","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","ENS_REGISTRAR_ADDRESSES","SOCKS_CONTROLLER_ADDRESSES","TICK_LENS_ADDRESSES","MIXED_ROUTE_QUOTER_V1_ADDRESSES","SWAP_ROUTER_02_ADDRESSES","includes","id","TradeType","Rounding","MaxUint256","JSBI","BigInt","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","Error","invert","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","Number","isInteger","invariant","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","decimals","fromRawAmount","rawAmount","fromFractionalAmount","equals","added","subtracted","multiplied","divided","toExact","isToken","wrapped","ONE_HUNDRED","toPercent","fraction","Percent","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","quote","currencyAmount","adjustedForDecimals","BaseCurrency","symbol","name","isSafeInteger","NativeCurrency","validateAndParseAddress","getAddress","error","startsWith0xLen42HexRegex","checkValidAddress","test","Token","bypassChecksum","buyFeeBps","sellFeeBps","gte","BigNumber","from","toLowerCase","sortsBefore","WETH9","Ether","onChain","_etherCache","isNative","weth9","computePriceImpact","midPrice","inputAmount","outputAmount","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","push","isFull","lo","hi","mid","splice","pop","MAX_SAFE_INTEGER","ZERO","ONE","TWO","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.production.min.js b/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.production.min.js
index e1d4180..33b765b 100644
--- a/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.production.min.js
+++ b/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.production.min.js
@@ -1,2 +1,2 @@
-"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var r,t=e(require("jsbi")),n=e(require("tiny-invariant")),o=e(require("decimal.js-light")),a=e(require("big.js")),i=e(require("toformat")),d=require("@ethersproject/bignumber"),s=require("@ethersproject/address");function c(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function u(e,r,t){return r&&c(e.prototype,r),t&&c(e,t),e}function A(){return(A=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function f(e,r){e.prototype=Object.create(r.prototype),e.prototype.constructor=e,e.__proto__=r}(r=exports.ChainId||(exports.ChainId={}))[r.MAINNET=1]="MAINNET",r[r.GOERLI=5]="GOERLI",r[r.SEPOLIA=11155111]="SEPOLIA",r[r.OPTIMISM=10]="OPTIMISM",r[r.OPTIMISM_GOERLI=420]="OPTIMISM_GOERLI",r[r.OPTIMISM_SEPOLIA=11155420]="OPTIMISM_SEPOLIA",r[r.ARBITRUM_ONE=42161]="ARBITRUM_ONE",r[r.ARBITRUM_GOERLI=421613]="ARBITRUM_GOERLI",r[r.ARBITRUM_SEPOLIA=421614]="ARBITRUM_SEPOLIA",r[r.POLYGON=137]="POLYGON",r[r.POLYGON_MUMBAI=80001]="POLYGON_MUMBAI",r[r.CELO=42220]="CELO",r[r.CELO_ALFAJORES=44787]="CELO_ALFAJORES",r[r.GNOSIS=100]="GNOSIS",r[r.MOONBEAM=1284]="MOONBEAM",r[r.BNB=56]="BNB",r[r.AVALANCHE=43114]="AVALANCHE",r[r.BASE_GOERLI=84531]="BASE_GOERLI",r[r.BASE=8453]="BASE";var E,C,p,x,h,l,b,I,D,B=[exports.ChainId.MAINNET,exports.ChainId.OPTIMISM,exports.ChainId.OPTIMISM_GOERLI,exports.ChainId.OPTIMISM_SEPOLIA,exports.ChainId.ARBITRUM_ONE,exports.ChainId.ARBITRUM_GOERLI,exports.ChainId.ARBITRUM_SEPOLIA,exports.ChainId.POLYGON,exports.ChainId.POLYGON_MUMBAI,exports.ChainId.GOERLI,exports.ChainId.SEPOLIA,exports.ChainId.CELO_ALFAJORES,exports.ChainId.CELO,exports.ChainId.BNB,exports.ChainId.AVALANCHE,exports.ChainId.BASE,exports.ChainId.BASE_GOERLI];(E=exports.NativeCurrencyName||(exports.NativeCurrencyName={})).ETHER="ETH",E.MATIC="MATIC",E.CELO="CELO",E.GNOSIS="XDAI",E.MOONBEAM="GLMR",E.BNB="BNB",E.AVAX="AVAX";var F=[exports.ChainId.MAINNET,exports.ChainId.GOERLI,exports.ChainId.SEPOLIA];function m(e,r){return void 0===r&&(r=[]),F.concat(r).reduce((function(r,t){return r[t]=e,r}),{})}var O,R,S=m("0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",[exports.ChainId.OPTIMISM,exports.ChainId.ARBITRUM_ONE,exports.ChainId.POLYGON,exports.ChainId.POLYGON_MUMBAI,exports.ChainId.SEPOLIA]),_=((C={})[exports.ChainId.MAINNET]="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",C[exports.ChainId.GOERLI]="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",C[exports.ChainId.SEPOLIA]="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",C[exports.ChainId.OPTIMISM]="0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf",C[exports.ChainId.ARBITRUM_ONE]="0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9",C[exports.ChainId.AVALANCHE]="0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C",C[exports.ChainId.BASE]="0x8909dc15e40173ff4699343b6eb8132c65e18ec6",C[exports.ChainId.BNB]="0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6",C[exports.ChainId.POLYGON]="0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C",C[exports.ChainId.CELO]="0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f",C),N=((p={})[exports.ChainId.MAINNET]="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",p[exports.ChainId.GOERLI]="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",p[exports.ChainId.SEPOLIA]="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",p[exports.ChainId.ARBITRUM_ONE]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",p[exports.ChainId.OPTIMISM]="0x4a7b5da61326a6379179b40d00f57e5bbdc962c2",p[exports.ChainId.BASE]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",p[exports.ChainId.AVALANCHE]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",p[exports.ChainId.BNB]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",p[exports.ChainId.POLYGON]="0xedf6066a2b290c185783862c7f4776a2c8077ad1",p),y={v3CoreFactoryAddress:"0x1F98431c8aD98523631AE4a59f267346ea31F984",multicallAddress:"0x1F98415757620B543A52E61c46B32eB19261F984",quoterAddress:"0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6",v3MigratorAddress:"0xA5644E29708357803b5A882D272c41cC0dF92B34",nonfungiblePositionManagerAddress:"0xC36442b4a4522E871399CD717aBDD847Ab11FE88"},v=A({},y,{v1MixedRouteQuoterAddress:"0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E"}),M=A({},y,{v1MixedRouteQuoterAddress:"0xBa60b6e6fF25488308789E6e0A65D838be34194e"}),g=y,T=A({},y,{multicallAddress:"0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB",tickLensAddress:"0xbfd8137f7d1516D3ea5cA83523914859ec47F573"}),L=y,P={v3CoreFactoryAddress:"0xAfE208a311B21f13EF87E33A90049fC17A7acDEc",multicallAddress:"0x633987602DE5C4F337e3DbF265303A1080324204",quoterAddress:"0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8",v3MigratorAddress:"0x3cFd4d48EDfDCC53D3f173F596f621064614C582",nonfungiblePositionManagerAddress:"0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A",tickLensAddress:"0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D"},U=((x={})[exports.ChainId.MAINNET]=v,x[exports.ChainId.OPTIMISM]=g,x[exports.ChainId.ARBITRUM_ONE]=T,x[exports.ChainId.POLYGON]=L,x[exports.ChainId.POLYGON_MUMBAI]=L,x[exports.ChainId.GOERLI]=M,x[exports.ChainId.CELO]=P,x[exports.ChainId.CELO_ALFAJORES]=P,x[exports.ChainId.BNB]={v3CoreFactoryAddress:"0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7",multicallAddress:"0x963Df249eD09c358A4819E39d9Cd5736c3087184",quoterAddress:"0x78D78E420Da98ad378D7799bE8f4AF69033EB077",v3MigratorAddress:"0x32681814957e0C13117ddc0c2aba232b5c9e760f",nonfungiblePositionManagerAddress:"0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613",tickLensAddress:"0xD9270014D396281579760619CCf4c3af0501A47C",swapRouter02Address:"0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2"},x[exports.ChainId.OPTIMISM_GOERLI]={v3CoreFactoryAddress:"0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10",multicallAddress:"0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd",quoterAddress:"0x9569CbA925c8ca2248772A9A4976A516743A246F",v3MigratorAddress:"0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8",nonfungiblePositionManagerAddress:"0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6",tickLensAddress:"0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e"},x[exports.ChainId.OPTIMISM_SEPOLIA]={v3CoreFactoryAddress:"0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF",multicallAddress:"0x80e4e06841bb76AA9735E0448cB8d003C0EF009a",quoterAddress:"0x0FBEa6cf957d95ee9313490050F6A0DA68039404",v3MigratorAddress:"0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07",nonfungiblePositionManagerAddress:"0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d",tickLensAddress:"0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5"},x[exports.ChainId.ARBITRUM_GOERLI]={v3CoreFactoryAddress:"0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6",multicallAddress:"0x8260CB40247290317a4c062F3542622367F206Ee",quoterAddress:"0x1dd92b83591781D0C6d98d07391eea4b9a6008FA",v3MigratorAddress:"0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3",nonfungiblePositionManagerAddress:"0x622e4726a167799826d1E1D150b076A7725f5D81",tickLensAddress:"0xb52429333da969a0C79a60930a4Bf0020E5D1DE8"},x[exports.ChainId.ARBITRUM_SEPOLIA]={v3CoreFactoryAddress:"0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e",multicallAddress:"0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A",quoterAddress:"0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B",v3MigratorAddress:"0x398f43ef2c67B941147157DA1c5a868E906E043D",nonfungiblePositionManagerAddress:"0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65",tickLensAddress:"0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9"},x[exports.ChainId.SEPOLIA]={v3CoreFactoryAddress:"0x0227628f3F023bb0B980b67D528571c95c6DaC1c",multicallAddress:"0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07",quoterAddress:"0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3",v3MigratorAddress:"0x729004182cF005CEC8Bd85df140094b6aCbe8b15",nonfungiblePositionManagerAddress:"0x1238536071E1c677A632429e3655c799b22cDA52",tickLensAddress:"0xd7f33bcdb21b359c8ee6f0251d30e94832baad07"},x[exports.ChainId.AVALANCHE]={v3CoreFactoryAddress:"0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD",multicallAddress:"0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2",quoterAddress:"0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F",v3MigratorAddress:"0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97",nonfungiblePositionManagerAddress:"0x655C406EBFa14EE2006250925e54ec43AD184f8B",tickLensAddress:"0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950",swapRouter02Address:"0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE"},x[exports.ChainId.BASE]={v3CoreFactoryAddress:"0x33128a8fC17869897dcE68Ed026d694621f6FDfD",multicallAddress:"0x091e99cb1C49331a94dD62755D168E941AbD0693",quoterAddress:"0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a",v3MigratorAddress:"0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7",nonfungiblePositionManagerAddress:"0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1",tickLensAddress:"0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d",swapRouter02Address:"0x2626664c2603336E57B271c5C0b26F421741e481"},x[exports.ChainId.BASE_GOERLI]={v3CoreFactoryAddress:"0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2",multicallAddress:"0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439",quoterAddress:"0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9",v3MigratorAddress:"0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE",nonfungiblePositionManagerAddress:"0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30",tickLensAddress:"0x1acB873Ee909D0c98adB18e4474943249F931b92",swapRouter02Address:"0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d"},x),w=A({},B.reduce((function(e,r){return e[r]=U[r].v3CoreFactoryAddress,e}),{})),q=A({},B.reduce((function(e,r){var t=U[r].v3MigratorAddress;return t&&(e[r]=t),e}),{})),G=A({},B.reduce((function(e,r){return e[r]=U[r].multicallAddress,e}),{})),W=m("0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F"),H=((h={})[exports.ChainId.MAINNET]="0xC4e172459f1E7939D522503B81AFAaC1014CE6F6",h),k=((l={})[exports.ChainId.MAINNET]="0x408ED6354d4973f66138C91495F2f2FCbd8724C3",l),V=m("0x1a9C8182C09F50C8318d769245beA52c32BE35BC"),Y=((b={})[exports.ChainId.MAINNET]="0x090D4613473dEE047c3f2706764f49E0821D256e",b),j=((I={})[exports.ChainId.MAINNET]="0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8",I),X=A({},B.reduce((function(e,r){return e[r]=U[r].quoterAddress,e}),{})),Q=A({},B.reduce((function(e,r){var t=U[r].nonfungiblePositionManagerAddress;return t&&(e[r]=t),e}),{})),J=A({},m("0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e")),K=((D={})[exports.ChainId.MAINNET]="0x65770b5283117639760beA3F867b69b3697a91dd",D),$=A({},B.reduce((function(e,r){var t=U[r].tickLensAddress;return t&&(e[r]=t),e}),{})),z=B.reduce((function(e,r){var t=U[r].v1MixedRouteQuoterAddress;return t&&(e[r]=t),e}),{});(O=exports.TradeType||(exports.TradeType={}))[O.EXACT_INPUT=0]="EXACT_INPUT",O[O.EXACT_OUTPUT=1]="EXACT_OUTPUT",(R=exports.Rounding||(exports.Rounding={}))[R.ROUND_DOWN=0]="ROUND_DOWN",R[R.ROUND_HALF_UP=1]="ROUND_HALF_UP",R[R.ROUND_UP=2]="ROUND_UP";var Z,ee,re=t.BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),te=i(o),ne=i(a),oe=((Z={})[exports.Rounding.ROUND_DOWN]=te.ROUND_DOWN,Z[exports.Rounding.ROUND_HALF_UP]=te.ROUND_HALF_UP,Z[exports.Rounding.ROUND_UP]=te.ROUND_UP,Z),ae=((ee={})[exports.Rounding.ROUND_DOWN]=0,ee[exports.Rounding.ROUND_HALF_UP]=1,ee[exports.Rounding.ROUND_UP]=3,ee),ie=function(){function e(e,r){void 0===r&&(r=t.BigInt(1)),this.numerator=t.BigInt(e),this.denominator=t.BigInt(r)}e.tryParseFraction=function(r){if(r instanceof t||"number"==typeof r||"string"==typeof r)return new e(r);if("numerator"in r&&"denominator"in r)return r;throw new Error("Could not parse fraction")};var r=e.prototype;return r.invert=function(){return new e(this.denominator,this.numerator)},r.add=function(r){var n=e.tryParseFraction(r);return t.equal(this.denominator,n.denominator)?new e(t.add(this.numerator,n.numerator),this.denominator):new e(t.add(t.multiply(this.numerator,n.denominator),t.multiply(n.numerator,this.denominator)),t.multiply(this.denominator,n.denominator))},r.subtract=function(r){var n=e.tryParseFraction(r);return t.equal(this.denominator,n.denominator)?new e(t.subtract(this.numerator,n.numerator),this.denominator):new e(t.subtract(t.multiply(this.numerator,n.denominator),t.multiply(n.numerator,this.denominator)),t.multiply(this.denominator,n.denominator))},r.lessThan=function(r){var n=e.tryParseFraction(r);return t.lessThan(t.multiply(this.numerator,n.denominator),t.multiply(n.numerator,this.denominator))},r.equalTo=function(r){var n=e.tryParseFraction(r);return t.equal(t.multiply(this.numerator,n.denominator),t.multiply(n.numerator,this.denominator))},r.greaterThan=function(r){var n=e.tryParseFraction(r);return t.greaterThan(t.multiply(this.numerator,n.denominator),t.multiply(n.numerator,this.denominator))},r.multiply=function(r){var n=e.tryParseFraction(r);return new e(t.multiply(this.numerator,n.numerator),t.multiply(this.denominator,n.denominator))},r.divide=function(r){var n=e.tryParseFraction(r);return new e(t.multiply(this.numerator,n.denominator),t.multiply(this.denominator,n.numerator))},r.toSignificant=function(e,r,t){void 0===r&&(r={groupSeparator:""}),void 0===t&&(t=exports.Rounding.ROUND_HALF_UP),Number.isInteger(e)||n(!1),e>0||n(!1),te.set({precision:e+1,rounding:oe[t]});var o=new te(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(e);return o.toFormat(o.decimalPlaces(),r)},r.toFixed=function(e,r,t){return void 0===r&&(r={groupSeparator:""}),void 0===t&&(t=exports.Rounding.ROUND_HALF_UP),Number.isInteger(e)||n(!1),e>=0||n(!1),ne.DP=e,ne.RM=ae[t],new ne(this.numerator.toString()).div(this.denominator.toString()).toFormat(e,r)},u(e,[{key:"quotient",get:function(){return t.divide(this.numerator,this.denominator)}},{key:"remainder",get:function(){return new e(t.remainder(this.numerator,this.denominator),this.denominator)}},{key:"asFraction",get:function(){return new e(this.numerator,this.denominator)}}]),e}(),de=i(a),se=function(e){function r(r,o,a){var i;return i=e.call(this,o,a)||this,t.lessThanOrEqual(i.quotient,re)||n(!1),i.currency=r,i.decimalScale=t.exponentiate(t.BigInt(10),t.BigInt(r.decimals)),i}f(r,e),r.fromRawAmount=function(e,t){return new r(e,t)},r.fromFractionalAmount=function(e,t,n){return new r(e,t,n)};var o=r.prototype;return o.add=function(t){this.currency.equals(t.currency)||n(!1);var o=e.prototype.add.call(this,t);return r.fromFractionalAmount(this.currency,o.numerator,o.denominator)},o.subtract=function(t){this.currency.equals(t.currency)||n(!1);var o=e.prototype.subtract.call(this,t);return r.fromFractionalAmount(this.currency,o.numerator,o.denominator)},o.multiply=function(t){var n=e.prototype.multiply.call(this,t);return r.fromFractionalAmount(this.currency,n.numerator,n.denominator)},o.divide=function(t){var n=e.prototype.divide.call(this,t);return r.fromFractionalAmount(this.currency,n.numerator,n.denominator)},o.toSignificant=function(r,t,n){return void 0===r&&(r=6),void 0===n&&(n=exports.Rounding.ROUND_DOWN),e.prototype.divide.call(this,this.decimalScale).toSignificant(r,t,n)},o.toFixed=function(r,t,o){return void 0===r&&(r=this.currency.decimals),void 0===o&&(o=exports.Rounding.ROUND_DOWN),r<=this.currency.decimals||n(!1),e.prototype.divide.call(this,this.decimalScale).toFixed(r,t,o)},o.toExact=function(e){return void 0===e&&(e={groupSeparator:""}),de.DP=this.currency.decimals,new de(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(e)},u(r,[{key:"wrapped",get:function(){return this.currency.isToken?this:r.fromFractionalAmount(this.currency.wrapped,this.numerator,this.denominator)}}]),r}(ie),ce=new ie(t.BigInt(100));function ue(e){return new Ae(e.numerator,e.denominator)}var Ae=function(e){function r(){var r;return(r=e.apply(this,arguments)||this).isPercent=!0,r}f(r,e);var t=r.prototype;return t.add=function(r){return ue(e.prototype.add.call(this,r))},t.subtract=function(r){return ue(e.prototype.subtract.call(this,r))},t.multiply=function(r){return ue(e.prototype.multiply.call(this,r))},t.divide=function(r){return ue(e.prototype.divide.call(this,r))},t.toSignificant=function(r,t,n){return void 0===r&&(r=5),e.prototype.multiply.call(this,ce).toSignificant(r,t,n)},t.toFixed=function(r,t,n){return void 0===r&&(r=2),e.prototype.multiply.call(this,ce).toFixed(r,t,n)},r}(ie),fe=function(e){function r(){for(var r,n,o,a,i,d=arguments.length,s=new Array(d),c=0;c<d;c++)s[c]=arguments[c];if(4===s.length)n=s[0],o=s[1],a=s[2],i=s[3];else{var u=s[0].quoteAmount.divide(s[0].baseAmount),A=[s[0].baseAmount.currency,s[0].quoteAmount.currency,u.denominator,u.numerator];n=A[0],o=A[1],a=A[2],i=A[3]}return(r=e.call(this,i,a)||this).baseCurrency=n,r.quoteCurrency=o,r.scalar=new ie(t.exponentiate(t.BigInt(10),t.BigInt(n.decimals)),t.exponentiate(t.BigInt(10),t.BigInt(o.decimals))),r}f(r,e);var o=r.prototype;return o.invert=function(){return new r(this.quoteCurrency,this.baseCurrency,this.numerator,this.denominator)},o.multiply=function(t){this.quoteCurrency.equals(t.baseCurrency)||n(!1);var o=e.prototype.multiply.call(this,t);return new r(this.baseCurrency,t.quoteCurrency,o.denominator,o.numerator)},o.quote=function(r){r.currency.equals(this.baseCurrency)||n(!1);var t=e.prototype.multiply.call(this,r);return se.fromFractionalAmount(this.quoteCurrency,t.numerator,t.denominator)},o.toSignificant=function(e,r,t){return void 0===e&&(e=6),this.adjustedForDecimals.toSignificant(e,r,t)},o.toFixed=function(e,r,t){return void 0===e&&(e=4),this.adjustedForDecimals.toFixed(e,r,t)},u(r,[{key:"adjustedForDecimals",get:function(){return e.prototype.multiply.call(this,this.scalar)}}]),r}(ie),Ee=function(e,r,t,o){Number.isSafeInteger(e)||n(!1),r>=0&&r<255&&Number.isInteger(r)||n(!1),this.chainId=e,this.decimals=r,this.symbol=t,this.name=o},Ce=function(e){function r(){var r;return(r=e.apply(this,arguments)||this).isNative=!0,r.isToken=!1,r}return f(r,e),r}(Ee);function pe(e){try{return s.getAddress(e)}catch(r){throw new Error(e+" is not a valid address.")}}var xe,he=/^0x[0-9a-fA-F]{40}$/,le=function(e){function r(r,t,o,a,i,s,c,u){var A;return(A=e.call(this,r,o,a,i)||this).isNative=!1,A.isToken=!0,A.address=s?function(e){if(he.test(e))return e;throw new Error(e+" is not a valid address.")}(t):pe(t),c&&(c.gte(d.BigNumber.from(0))||n(!1)),u&&(u.gte(d.BigNumber.from(0))||n(!1)),A.buyFeeBps=c,A.sellFeeBps=u,A}f(r,e);var t=r.prototype;return t.equals=function(e){return e.isToken&&this.chainId===e.chainId&&this.address.toLowerCase()===e.address.toLowerCase()},t.sortsBefore=function(e){return this.chainId!==e.chainId&&n(!1),this.address.toLowerCase()===e.address.toLowerCase()&&n(!1),this.address.toLowerCase()<e.address.toLowerCase()},u(r,[{key:"wrapped",get:function(){return this}}]),r}(Ee),be=((xe={})[1]=new le(1,"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",18,"WETH","Wrapped Ether"),xe[3]=new le(3,"0xc778417E063141139Fce010982780140Aa0cD5Ab",18,"WETH","Wrapped Ether"),xe[4]=new le(4,"0xc778417E063141139Fce010982780140Aa0cD5Ab",18,"WETH","Wrapped Ether"),xe[5]=new le(5,"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",18,"WETH","Wrapped Ether"),xe[42]=new le(42,"0xd0A1E359811322d97991E03f863a0C30C2cF029C",18,"WETH","Wrapped Ether"),xe[10]=new le(10,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),xe[69]=new le(69,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),xe[11155420]=new le(11155420,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),xe[42161]=new le(42161,"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",18,"WETH","Wrapped Ether"),xe[421611]=new le(421611,"0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681",18,"WETH","Wrapped Ether"),xe[421614]=new le(421614,"0x980B62Da83eFf3D4576C647993b0c1D7faf17c73",18,"WETH","Wrapped Ether"),xe[8453]=new le(8453,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),xe[56]=new le(56,"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",18,"WBNB","Wrapped BNB"),xe[137]=new le(137,"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",18,"WMATIC","Wrapped MATIC"),xe[43114]=new le(43114,"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",18,"WAVAX","Wrapped AVAX"),xe),Ie=function(e){function r(r){return e.call(this,r,18,"ETH","Ether")||this}return f(r,e),r.onChain=function(e){var t;return null!=(t=this._etherCache[e])?t:this._etherCache[e]=new r(e)},r.prototype.equals=function(e){return e.isNative&&e.chainId===this.chainId},u(r,[{key:"wrapped",get:function(){var e=be[this.chainId];return e||n(!1),e}}]),r}(Ce);Ie._etherCache={};var De=t.BigInt(Number.MAX_SAFE_INTEGER),Be=t.BigInt(0),Fe=t.BigInt(1),me=t.BigInt(2);exports.ARGENT_WALLET_DETECTOR_ADDRESS=j,exports.CHAIN_TO_ADDRESSES_MAP=U,exports.CurrencyAmount=se,exports.ENS_REGISTRAR_ADDRESSES=J,exports.Ether=Ie,exports.Fraction=ie,exports.GOVERNANCE_ALPHA_V0_ADDRESSES=W,exports.GOVERNANCE_ALPHA_V1_ADDRESSES=H,exports.GOVERNANCE_BRAVO_ADDRESSES=k,exports.MERKLE_DISTRIBUTOR_ADDRESS=Y,exports.MIXED_ROUTE_QUOTER_V1_ADDRESSES=z,exports.MULTICALL_ADDRESSES=G,exports.MaxUint256=re,exports.NONFUNGIBLE_POSITION_MANAGER_ADDRESSES=Q,exports.NativeCurrency=Ce,exports.Percent=Ae,exports.Price=fe,exports.QUOTER_ADDRESSES=X,exports.SOCKS_CONTROLLER_ADDRESSES=K,exports.SUPPORTED_CHAINS=B,exports.SWAP_ROUTER_02_ADDRESSES=function(e){var r;return e in B?null!=(r=U[e].swapRouter02Address)?r:"0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45":""},exports.TICK_LENS_ADDRESSES=$,exports.TIMELOCK_ADDRESSES=V,exports.Token=le,exports.UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS="0x8B799381ac40b838BBA4131ffB26197C432AFe78",exports.UNI_ADDRESSES=S,exports.V2_FACTORY_ADDRESS="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",exports.V2_FACTORY_ADDRESSES=_,exports.V2_ROUTER_ADDRESS="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",exports.V2_ROUTER_ADDRESSES=N,exports.V3_CORE_FACTORY_ADDRESSES=w,exports.V3_MIGRATOR_ADDRESSES=q,exports.WETH9=be,exports.computePriceImpact=function(e,r,t){var n=e.quote(r),o=n.subtract(t).divide(n);return new Ae(o.numerator,o.denominator)},exports.sortedInsert=function(e,r,t,o){if(t>0||n(!1),e.length<=t||n(!1),0===e.length)return e.push(r),null;var a=e.length===t;if(a&&o(e[e.length-1],r)<=0)return r;for(var i=0,d=e.length;i<d;){var s=i+d>>>1;o(e[s],r)<=0?i=s+1:d=s}return e.splice(i,0,r),a?e.pop():null},exports.sqrt=function(e){if(t.greaterThanOrEqual(e,Be)||n(!1),t.lessThan(e,De))return t.BigInt(Math.floor(Math.sqrt(t.toNumber(e))));var r,o;for(r=e,o=t.add(t.divide(e,me),Fe);t.lessThan(o,r);)r=o,o=t.divide(t.add(t.divide(e,o),o),me);return r},exports.validateAndParseAddress=pe;
+"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var r,t=e(require("jsbi")),n=e(require("tiny-invariant")),o=e(require("decimal.js-light")),a=e(require("big.js")),d=e(require("toformat")),i=require("@ethersproject/bignumber"),s=require("@ethersproject/address");function c(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function A(e,r,t){return r&&c(e.prototype,r),t&&c(e,t),e}function u(){return(u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function f(e,r){e.prototype=Object.create(r.prototype),e.prototype.constructor=e,e.__proto__=r}(r=exports.ChainId||(exports.ChainId={}))[r.MAINNET=1]="MAINNET",r[r.GOERLI=5]="GOERLI",r[r.SEPOLIA=11155111]="SEPOLIA",r[r.OPTIMISM=10]="OPTIMISM",r[r.OPTIMISM_GOERLI=420]="OPTIMISM_GOERLI",r[r.OPTIMISM_SEPOLIA=11155420]="OPTIMISM_SEPOLIA",r[r.ARBITRUM_ONE=42161]="ARBITRUM_ONE",r[r.ARBITRUM_GOERLI=421613]="ARBITRUM_GOERLI",r[r.ARBITRUM_SEPOLIA=421614]="ARBITRUM_SEPOLIA",r[r.POLYGON=137]="POLYGON",r[r.POLYGON_MUMBAI=80001]="POLYGON_MUMBAI",r[r.CELO=42220]="CELO",r[r.CELO_ALFAJORES=44787]="CELO_ALFAJORES",r[r.GNOSIS=100]="GNOSIS",r[r.MOONBEAM=1284]="MOONBEAM",r[r.BNB=56]="BNB",r[r.AVALANCHE=43114]="AVALANCHE",r[r.BASE_GOERLI=84531]="BASE_GOERLI",r[r.BASE=8453]="BASE",r[r.ZORA=7777777]="ZORA",r[r.ZORA_SEPOLIA=999999999]="ZORA_SEPOLIA";var E,C,p,x,b,l,D,h,I,B=[exports.ChainId.MAINNET,exports.ChainId.OPTIMISM,exports.ChainId.OPTIMISM_GOERLI,exports.ChainId.OPTIMISM_SEPOLIA,exports.ChainId.ARBITRUM_ONE,exports.ChainId.ARBITRUM_GOERLI,exports.ChainId.ARBITRUM_SEPOLIA,exports.ChainId.POLYGON,exports.ChainId.POLYGON_MUMBAI,exports.ChainId.GOERLI,exports.ChainId.SEPOLIA,exports.ChainId.CELO_ALFAJORES,exports.ChainId.CELO,exports.ChainId.BNB,exports.ChainId.AVALANCHE,exports.ChainId.BASE,exports.ChainId.BASE_GOERLI,exports.ChainId.ZORA,exports.ChainId.ZORA_SEPOLIA];(E=exports.NativeCurrencyName||(exports.NativeCurrencyName={})).ETHER="ETH",E.MATIC="MATIC",E.CELO="CELO",E.GNOSIS="XDAI",E.MOONBEAM="GLMR",E.BNB="BNB",E.AVAX="AVAX";var F=[exports.ChainId.MAINNET,exports.ChainId.GOERLI,exports.ChainId.SEPOLIA];function m(e,r){return void 0===r&&(r=[]),F.concat(r).reduce((function(r,t){return r[t]=e,r}),{})}var O,R,S=m("0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",[exports.ChainId.OPTIMISM,exports.ChainId.ARBITRUM_ONE,exports.ChainId.POLYGON,exports.ChainId.POLYGON_MUMBAI,exports.ChainId.SEPOLIA]),_=((C={})[exports.ChainId.MAINNET]="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",C[exports.ChainId.GOERLI]="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",C[exports.ChainId.SEPOLIA]="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",C[exports.ChainId.OPTIMISM]="0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf",C[exports.ChainId.ARBITRUM_ONE]="0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9",C[exports.ChainId.AVALANCHE]="0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C",C[exports.ChainId.BASE]="0x8909dc15e40173ff4699343b6eb8132c65e18ec6",C[exports.ChainId.BNB]="0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6",C[exports.ChainId.POLYGON]="0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C",C[exports.ChainId.CELO]="0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f",C),y=((p={})[exports.ChainId.MAINNET]="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",p[exports.ChainId.GOERLI]="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",p[exports.ChainId.SEPOLIA]="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",p[exports.ChainId.ARBITRUM_ONE]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",p[exports.ChainId.OPTIMISM]="0x4a7b5da61326a6379179b40d00f57e5bbdc962c2",p[exports.ChainId.BASE]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",p[exports.ChainId.AVALANCHE]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",p[exports.ChainId.BNB]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",p[exports.ChainId.POLYGON]="0xedf6066a2b290c185783862c7f4776a2c8077ad1",p),N={v3CoreFactoryAddress:"0x1F98431c8aD98523631AE4a59f267346ea31F984",multicallAddress:"0x1F98415757620B543A52E61c46B32eB19261F984",quoterAddress:"0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6",v3MigratorAddress:"0xA5644E29708357803b5A882D272c41cC0dF92B34",nonfungiblePositionManagerAddress:"0xC36442b4a4522E871399CD717aBDD847Ab11FE88"},v=u({},N,{v1MixedRouteQuoterAddress:"0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E"}),g=u({},N,{v1MixedRouteQuoterAddress:"0xBa60b6e6fF25488308789E6e0A65D838be34194e"}),M=N,T=u({},N,{multicallAddress:"0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB",tickLensAddress:"0xbfd8137f7d1516D3ea5cA83523914859ec47F573"}),L=N,P={v3CoreFactoryAddress:"0xAfE208a311B21f13EF87E33A90049fC17A7acDEc",multicallAddress:"0x633987602DE5C4F337e3DbF265303A1080324204",quoterAddress:"0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8",v3MigratorAddress:"0x3cFd4d48EDfDCC53D3f173F596f621064614C582",nonfungiblePositionManagerAddress:"0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A",tickLensAddress:"0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D"},U=((x={})[exports.ChainId.MAINNET]=v,x[exports.ChainId.OPTIMISM]=M,x[exports.ChainId.ARBITRUM_ONE]=T,x[exports.ChainId.POLYGON]=L,x[exports.ChainId.POLYGON_MUMBAI]=L,x[exports.ChainId.GOERLI]=g,x[exports.ChainId.CELO]=P,x[exports.ChainId.CELO_ALFAJORES]=P,x[exports.ChainId.BNB]={v3CoreFactoryAddress:"0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7",multicallAddress:"0x963Df249eD09c358A4819E39d9Cd5736c3087184",quoterAddress:"0x78D78E420Da98ad378D7799bE8f4AF69033EB077",v3MigratorAddress:"0x32681814957e0C13117ddc0c2aba232b5c9e760f",nonfungiblePositionManagerAddress:"0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613",tickLensAddress:"0xD9270014D396281579760619CCf4c3af0501A47C",swapRouter02Address:"0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2"},x[exports.ChainId.OPTIMISM_GOERLI]={v3CoreFactoryAddress:"0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10",multicallAddress:"0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd",quoterAddress:"0x9569CbA925c8ca2248772A9A4976A516743A246F",v3MigratorAddress:"0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8",nonfungiblePositionManagerAddress:"0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6",tickLensAddress:"0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e"},x[exports.ChainId.OPTIMISM_SEPOLIA]={v3CoreFactoryAddress:"0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF",multicallAddress:"0x80e4e06841bb76AA9735E0448cB8d003C0EF009a",quoterAddress:"0x0FBEa6cf957d95ee9313490050F6A0DA68039404",v3MigratorAddress:"0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07",nonfungiblePositionManagerAddress:"0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d",tickLensAddress:"0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5",swapRouter02Address:"0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4"},x[exports.ChainId.ARBITRUM_GOERLI]={v3CoreFactoryAddress:"0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6",multicallAddress:"0x8260CB40247290317a4c062F3542622367F206Ee",quoterAddress:"0x1dd92b83591781D0C6d98d07391eea4b9a6008FA",v3MigratorAddress:"0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3",nonfungiblePositionManagerAddress:"0x622e4726a167799826d1E1D150b076A7725f5D81",tickLensAddress:"0xb52429333da969a0C79a60930a4Bf0020E5D1DE8"},x[exports.ChainId.ARBITRUM_SEPOLIA]={v3CoreFactoryAddress:"0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e",multicallAddress:"0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A",quoterAddress:"0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B",v3MigratorAddress:"0x398f43ef2c67B941147157DA1c5a868E906E043D",nonfungiblePositionManagerAddress:"0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65",tickLensAddress:"0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9",swapRouter02Address:"0x101F443B4d1b059569D643917553c771E1b9663E"},x[exports.ChainId.SEPOLIA]={v3CoreFactoryAddress:"0x0227628f3F023bb0B980b67D528571c95c6DaC1c",multicallAddress:"0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07",quoterAddress:"0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3",v3MigratorAddress:"0x729004182cF005CEC8Bd85df140094b6aCbe8b15",nonfungiblePositionManagerAddress:"0x1238536071E1c677A632429e3655c799b22cDA52",tickLensAddress:"0xd7f33bcdb21b359c8ee6f0251d30e94832baad07",swapRouter02Address:"0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E"},x[exports.ChainId.AVALANCHE]={v3CoreFactoryAddress:"0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD",multicallAddress:"0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2",quoterAddress:"0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F",v3MigratorAddress:"0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97",nonfungiblePositionManagerAddress:"0x655C406EBFa14EE2006250925e54ec43AD184f8B",tickLensAddress:"0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950",swapRouter02Address:"0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE"},x[exports.ChainId.BASE]={v3CoreFactoryAddress:"0x33128a8fC17869897dcE68Ed026d694621f6FDfD",multicallAddress:"0x091e99cb1C49331a94dD62755D168E941AbD0693",quoterAddress:"0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a",v3MigratorAddress:"0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7",nonfungiblePositionManagerAddress:"0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1",tickLensAddress:"0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d",swapRouter02Address:"0x2626664c2603336E57B271c5C0b26F421741e481"},x[exports.ChainId.BASE_GOERLI]={v3CoreFactoryAddress:"0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2",multicallAddress:"0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439",quoterAddress:"0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9",v3MigratorAddress:"0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE",nonfungiblePositionManagerAddress:"0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30",tickLensAddress:"0x1acB873Ee909D0c98adB18e4474943249F931b92",swapRouter02Address:"0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d"},x[exports.ChainId.ZORA]={v3CoreFactoryAddress:"0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb",multicallAddress:"0xA51c76bEE6746cB487a7e9312E43e2b8f4A37C15",quoterAddress:"0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df",v3MigratorAddress:"0x048352d8dCF13686982C799da63fA6426a9D0b60",nonfungiblePositionManagerAddress:"0xbC91e8DfA3fF18De43853372A3d7dfe585137D78",tickLensAddress:"0x209AAda09D74Ad3B8D0E92910Eaf85D2357e3044",swapRouter02Address:"0x7De04c96BE5159c3b5CeffC82aa176dc81281557"},x[exports.ChainId.ZORA_SEPOLIA]={v3CoreFactoryAddress:"0x4324A677D74764f46f33ED447964252441aA8Db6",multicallAddress:"0xA1E7e3A69671C4494EC59Dbd442de930a93F911A",quoterAddress:"0xC195976fEF0985886E37036E2DF62bF371E12Df0",v3MigratorAddress:"0x65ef259b31bf1d977c37e9434658694267674897",nonfungiblePositionManagerAddress:"0xB8458EaAe43292e3c1F7994EFd016bd653d23c20",tickLensAddress:"0x23C0F71877a1Fc4e20A78018f9831365c85f3064"},x),w=u({},B.reduce((function(e,r){return e[r]=U[r].v3CoreFactoryAddress,e}),{})),q=u({},B.reduce((function(e,r){var t=U[r].v3MigratorAddress;return t&&(e[r]=t),e}),{})),G=u({},B.reduce((function(e,r){return e[r]=U[r].multicallAddress,e}),{})),W=m("0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F"),H=((b={})[exports.ChainId.MAINNET]="0xC4e172459f1E7939D522503B81AFAaC1014CE6F6",b),k=((l={})[exports.ChainId.MAINNET]="0x408ED6354d4973f66138C91495F2f2FCbd8724C3",l),V=m("0x1a9C8182C09F50C8318d769245beA52c32BE35BC"),Y=((D={})[exports.ChainId.MAINNET]="0x090D4613473dEE047c3f2706764f49E0821D256e",D),j=((h={})[exports.ChainId.MAINNET]="0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8",h),X=u({},B.reduce((function(e,r){return e[r]=U[r].quoterAddress,e}),{})),Z=u({},B.reduce((function(e,r){var t=U[r].nonfungiblePositionManagerAddress;return t&&(e[r]=t),e}),{})),Q=u({},m("0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e")),J=((I={})[exports.ChainId.MAINNET]="0x65770b5283117639760beA3F867b69b3697a91dd",I),K=u({},B.reduce((function(e,r){var t=U[r].tickLensAddress;return t&&(e[r]=t),e}),{})),$=B.reduce((function(e,r){var t=U[r].v1MixedRouteQuoterAddress;return t&&(e[r]=t),e}),{});(O=exports.TradeType||(exports.TradeType={}))[O.EXACT_INPUT=0]="EXACT_INPUT",O[O.EXACT_OUTPUT=1]="EXACT_OUTPUT",(R=exports.Rounding||(exports.Rounding={}))[R.ROUND_DOWN=0]="ROUND_DOWN",R[R.ROUND_HALF_UP=1]="ROUND_HALF_UP",R[R.ROUND_UP=2]="ROUND_UP";var z,ee,re=t.BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),te=d(o),ne=d(a),oe=((z={})[exports.Rounding.ROUND_DOWN]=te.ROUND_DOWN,z[exports.Rounding.ROUND_HALF_UP]=te.ROUND_HALF_UP,z[exports.Rounding.ROUND_UP]=te.ROUND_UP,z),ae=((ee={})[exports.Rounding.ROUND_DOWN]=0,ee[exports.Rounding.ROUND_HALF_UP]=1,ee[exports.Rounding.ROUND_UP]=3,ee),de=function(){function e(e,r){void 0===r&&(r=t.BigInt(1)),this.numerator=t.BigInt(e),this.denominator=t.BigInt(r)}e.tryParseFraction=function(r){if(r instanceof t||"number"==typeof r||"string"==typeof r)return new e(r);if("numerator"in r&&"denominator"in r)return r;throw new Error("Could not parse fraction")};var r=e.prototype;return r.invert=function(){return new e(this.denominator,this.numerator)},r.add=function(r){var n=e.tryParseFraction(r);return t.equal(this.denominator,n.denominator)?new e(t.add(this.numerator,n.numerator),this.denominator):new e(t.add(t.multiply(this.numerator,n.denominator),t.multiply(n.numerator,this.denominator)),t.multiply(this.denominator,n.denominator))},r.subtract=function(r){var n=e.tryParseFraction(r);return t.equal(this.denominator,n.denominator)?new e(t.subtract(this.numerator,n.numerator),this.denominator):new e(t.subtract(t.multiply(this.numerator,n.denominator),t.multiply(n.numerator,this.denominator)),t.multiply(this.denominator,n.denominator))},r.lessThan=function(r){var n=e.tryParseFraction(r);return t.lessThan(t.multiply(this.numerator,n.denominator),t.multiply(n.numerator,this.denominator))},r.equalTo=function(r){var n=e.tryParseFraction(r);return t.equal(t.multiply(this.numerator,n.denominator),t.multiply(n.numerator,this.denominator))},r.greaterThan=function(r){var n=e.tryParseFraction(r);return t.greaterThan(t.multiply(this.numerator,n.denominator),t.multiply(n.numerator,this.denominator))},r.multiply=function(r){var n=e.tryParseFraction(r);return new e(t.multiply(this.numerator,n.numerator),t.multiply(this.denominator,n.denominator))},r.divide=function(r){var n=e.tryParseFraction(r);return new e(t.multiply(this.numerator,n.denominator),t.multiply(this.denominator,n.numerator))},r.toSignificant=function(e,r,t){void 0===r&&(r={groupSeparator:""}),void 0===t&&(t=exports.Rounding.ROUND_HALF_UP),Number.isInteger(e)||n(!1),e>0||n(!1),te.set({precision:e+1,rounding:oe[t]});var o=new te(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(e);return o.toFormat(o.decimalPlaces(),r)},r.toFixed=function(e,r,t){return void 0===r&&(r={groupSeparator:""}),void 0===t&&(t=exports.Rounding.ROUND_HALF_UP),Number.isInteger(e)||n(!1),e>=0||n(!1),ne.DP=e,ne.RM=ae[t],new ne(this.numerator.toString()).div(this.denominator.toString()).toFormat(e,r)},A(e,[{key:"quotient",get:function(){return t.divide(this.numerator,this.denominator)}},{key:"remainder",get:function(){return new e(t.remainder(this.numerator,this.denominator),this.denominator)}},{key:"asFraction",get:function(){return new e(this.numerator,this.denominator)}}]),e}(),ie=d(a),se=function(e){function r(r,o,a){var d;return d=e.call(this,o,a)||this,t.lessThanOrEqual(d.quotient,re)||n(!1),d.currency=r,d.decimalScale=t.exponentiate(t.BigInt(10),t.BigInt(r.decimals)),d}f(r,e),r.fromRawAmount=function(e,t){return new r(e,t)},r.fromFractionalAmount=function(e,t,n){return new r(e,t,n)};var o=r.prototype;return o.add=function(t){this.currency.equals(t.currency)||n(!1);var o=e.prototype.add.call(this,t);return r.fromFractionalAmount(this.currency,o.numerator,o.denominator)},o.subtract=function(t){this.currency.equals(t.currency)||n(!1);var o=e.prototype.subtract.call(this,t);return r.fromFractionalAmount(this.currency,o.numerator,o.denominator)},o.multiply=function(t){var n=e.prototype.multiply.call(this,t);return r.fromFractionalAmount(this.currency,n.numerator,n.denominator)},o.divide=function(t){var n=e.prototype.divide.call(this,t);return r.fromFractionalAmount(this.currency,n.numerator,n.denominator)},o.toSignificant=function(r,t,n){return void 0===r&&(r=6),void 0===n&&(n=exports.Rounding.ROUND_DOWN),e.prototype.divide.call(this,this.decimalScale).toSignificant(r,t,n)},o.toFixed=function(r,t,o){return void 0===r&&(r=this.currency.decimals),void 0===o&&(o=exports.Rounding.ROUND_DOWN),r<=this.currency.decimals||n(!1),e.prototype.divide.call(this,this.decimalScale).toFixed(r,t,o)},o.toExact=function(e){return void 0===e&&(e={groupSeparator:""}),ie.DP=this.currency.decimals,new ie(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(e)},A(r,[{key:"wrapped",get:function(){return this.currency.isToken?this:r.fromFractionalAmount(this.currency.wrapped,this.numerator,this.denominator)}}]),r}(de),ce=new de(t.BigInt(100));function Ae(e){return new ue(e.numerator,e.denominator)}var ue=function(e){function r(){var r;return(r=e.apply(this,arguments)||this).isPercent=!0,r}f(r,e);var t=r.prototype;return t.add=function(r){return Ae(e.prototype.add.call(this,r))},t.subtract=function(r){return Ae(e.prototype.subtract.call(this,r))},t.multiply=function(r){return Ae(e.prototype.multiply.call(this,r))},t.divide=function(r){return Ae(e.prototype.divide.call(this,r))},t.toSignificant=function(r,t,n){return void 0===r&&(r=5),e.prototype.multiply.call(this,ce).toSignificant(r,t,n)},t.toFixed=function(r,t,n){return void 0===r&&(r=2),e.prototype.multiply.call(this,ce).toFixed(r,t,n)},r}(de),fe=function(e){function r(){for(var r,n,o,a,d,i=arguments.length,s=new Array(i),c=0;c<i;c++)s[c]=arguments[c];if(4===s.length)n=s[0],o=s[1],a=s[2],d=s[3];else{var A=s[0].quoteAmount.divide(s[0].baseAmount),u=[s[0].baseAmount.currency,s[0].quoteAmount.currency,A.denominator,A.numerator];n=u[0],o=u[1],a=u[2],d=u[3]}return(r=e.call(this,d,a)||this).baseCurrency=n,r.quoteCurrency=o,r.scalar=new de(t.exponentiate(t.BigInt(10),t.BigInt(n.decimals)),t.exponentiate(t.BigInt(10),t.BigInt(o.decimals))),r}f(r,e);var o=r.prototype;return o.invert=function(){return new r(this.quoteCurrency,this.baseCurrency,this.numerator,this.denominator)},o.multiply=function(t){this.quoteCurrency.equals(t.baseCurrency)||n(!1);var o=e.prototype.multiply.call(this,t);return new r(this.baseCurrency,t.quoteCurrency,o.denominator,o.numerator)},o.quote=function(r){r.currency.equals(this.baseCurrency)||n(!1);var t=e.prototype.multiply.call(this,r);return se.fromFractionalAmount(this.quoteCurrency,t.numerator,t.denominator)},o.toSignificant=function(e,r,t){return void 0===e&&(e=6),this.adjustedForDecimals.toSignificant(e,r,t)},o.toFixed=function(e,r,t){return void 0===e&&(e=4),this.adjustedForDecimals.toFixed(e,r,t)},A(r,[{key:"adjustedForDecimals",get:function(){return e.prototype.multiply.call(this,this.scalar)}}]),r}(de),Ee=function(e,r,t,o){Number.isSafeInteger(e)||n(!1),r>=0&&r<255&&Number.isInteger(r)||n(!1),this.chainId=e,this.decimals=r,this.symbol=t,this.name=o},Ce=function(e){function r(){var r;return(r=e.apply(this,arguments)||this).isNative=!0,r.isToken=!1,r}return f(r,e),r}(Ee);function pe(e){try{return s.getAddress(e)}catch(r){throw new Error(e+" is not a valid address.")}}var xe,be=/^0x[0-9a-fA-F]{40}$/,le=function(e){function r(r,t,o,a,d,s,c,A){var u;return(u=e.call(this,r,o,a,d)||this).isNative=!1,u.isToken=!0,u.address=s?function(e){if(be.test(e))return e;throw new Error(e+" is not a valid address.")}(t):pe(t),c&&(c.gte(i.BigNumber.from(0))||n(!1)),A&&(A.gte(i.BigNumber.from(0))||n(!1)),u.buyFeeBps=c,u.sellFeeBps=A,u}f(r,e);var t=r.prototype;return t.equals=function(e){return e.isToken&&this.chainId===e.chainId&&this.address.toLowerCase()===e.address.toLowerCase()},t.sortsBefore=function(e){return this.chainId!==e.chainId&&n(!1),this.address.toLowerCase()===e.address.toLowerCase()&&n(!1),this.address.toLowerCase()<e.address.toLowerCase()},A(r,[{key:"wrapped",get:function(){return this}}]),r}(Ee),De=((xe={})[1]=new le(1,"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",18,"WETH","Wrapped Ether"),xe[3]=new le(3,"0xc778417E063141139Fce010982780140Aa0cD5Ab",18,"WETH","Wrapped Ether"),xe[4]=new le(4,"0xc778417E063141139Fce010982780140Aa0cD5Ab",18,"WETH","Wrapped Ether"),xe[5]=new le(5,"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",18,"WETH","Wrapped Ether"),xe[42]=new le(42,"0xd0A1E359811322d97991E03f863a0C30C2cF029C",18,"WETH","Wrapped Ether"),xe[10]=new le(10,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),xe[69]=new le(69,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),xe[11155420]=new le(11155420,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),xe[42161]=new le(42161,"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",18,"WETH","Wrapped Ether"),xe[421611]=new le(421611,"0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681",18,"WETH","Wrapped Ether"),xe[421614]=new le(421614,"0x980B62Da83eFf3D4576C647993b0c1D7faf17c73",18,"WETH","Wrapped Ether"),xe[8453]=new le(8453,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),xe[56]=new le(56,"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",18,"WBNB","Wrapped BNB"),xe[137]=new le(137,"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",18,"WMATIC","Wrapped MATIC"),xe[43114]=new le(43114,"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",18,"WAVAX","Wrapped AVAX"),xe),he=function(e){function r(r){return e.call(this,r,18,"ETH","Ether")||this}return f(r,e),r.onChain=function(e){var t;return null!=(t=this._etherCache[e])?t:this._etherCache[e]=new r(e)},r.prototype.equals=function(e){return e.isNative&&e.chainId===this.chainId},A(r,[{key:"wrapped",get:function(){var e=De[this.chainId];return e||n(!1),e}}]),r}(Ce);he._etherCache={};var Ie=t.BigInt(Number.MAX_SAFE_INTEGER),Be=t.BigInt(0),Fe=t.BigInt(1),me=t.BigInt(2);exports.ARGENT_WALLET_DETECTOR_ADDRESS=j,exports.CHAIN_TO_ADDRESSES_MAP=U,exports.CurrencyAmount=se,exports.ENS_REGISTRAR_ADDRESSES=Q,exports.Ether=he,exports.Fraction=de,exports.GOVERNANCE_ALPHA_V0_ADDRESSES=W,exports.GOVERNANCE_ALPHA_V1_ADDRESSES=H,exports.GOVERNANCE_BRAVO_ADDRESSES=k,exports.MERKLE_DISTRIBUTOR_ADDRESS=Y,exports.MIXED_ROUTE_QUOTER_V1_ADDRESSES=$,exports.MULTICALL_ADDRESSES=G,exports.MaxUint256=re,exports.NONFUNGIBLE_POSITION_MANAGER_ADDRESSES=Z,exports.NativeCurrency=Ce,exports.Percent=ue,exports.Price=fe,exports.QUOTER_ADDRESSES=X,exports.SOCKS_CONTROLLER_ADDRESSES=J,exports.SUPPORTED_CHAINS=B,exports.SWAP_ROUTER_02_ADDRESSES=function(e){var r;return B.includes(e)?null!=(r=U[e].swapRouter02Address)?r:"0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45":""},exports.TICK_LENS_ADDRESSES=K,exports.TIMELOCK_ADDRESSES=V,exports.Token=le,exports.UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS="0x8B799381ac40b838BBA4131ffB26197C432AFe78",exports.UNI_ADDRESSES=S,exports.V2_FACTORY_ADDRESS="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",exports.V2_FACTORY_ADDRESSES=_,exports.V2_ROUTER_ADDRESS="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",exports.V2_ROUTER_ADDRESSES=y,exports.V3_CORE_FACTORY_ADDRESSES=w,exports.V3_MIGRATOR_ADDRESSES=q,exports.WETH9=De,exports.computePriceImpact=function(e,r,t){var n=e.quote(r),o=n.subtract(t).divide(n);return new ue(o.numerator,o.denominator)},exports.sortedInsert=function(e,r,t,o){if(t>0||n(!1),e.length<=t||n(!1),0===e.length)return e.push(r),null;var a=e.length===t;if(a&&o(e[e.length-1],r)<=0)return r;for(var d=0,i=e.length;d<i;){var s=d+i>>>1;o(e[s],r)<=0?d=s+1:i=s}return e.splice(d,0,r),a?e.pop():null},exports.sqrt=function(e){if(t.greaterThanOrEqual(e,Be)||n(!1),t.lessThan(e,Ie))return t.BigInt(Math.floor(Math.sqrt(t.toNumber(e))));var r,o;for(r=e,o=t.add(t.divide(e,me),Fe);t.lessThan(o,r);)r=o,o=t.divide(t.add(t.divide(e,o),o),me);return r},exports.validateAndParseAddress=pe;
 //# sourceMappingURL=sdk-core.cjs.production.min.js.map
diff --git a/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.production.min.js.map b/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.production.min.js.map
index 5920cf0..5801b80 100644
--- a/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.production.min.js.map
+++ b/node_modules/@uniswap/sdk-core/dist/sdk-core.cjs.production.min.js.map
@@ -1 +1 @@
-{"version":3,"file":"sdk-core.cjs.production.min.js","sources":["../src/chains.ts","../src/addresses.ts","../src/constants.ts","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/percent.ts","../src/entities/fractions/price.ts","../src/entities/baseCurrency.ts","../src/entities/nativeCurrency.ts","../src/utils/validateAndParseAddress.ts","../src/entities/token.ts","../src/entities/weth9.ts","../src/entities/ether.ts","../src/utils/sqrt.ts","../src/utils/computePriceImpact.ts","../src/utils/sortedInsert.ts"],"sourcesContent":["export enum ChainId {\n  MAINNET = 1,\n  GOERLI = 5,\n  SEPOLIA = 11155111,\n  OPTIMISM = 10,\n  OPTIMISM_GOERLI = 420,\n  OPTIMISM_SEPOLIA = 11155420,\n  ARBITRUM_ONE = 42161,\n  ARBITRUM_GOERLI = 421613,\n  ARBITRUM_SEPOLIA = 421614,\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001,\n  CELO = 42220,\n  CELO_ALFAJORES = 44787,\n  GNOSIS = 100,\n  MOONBEAM = 1284,\n  BNB = 56,\n  AVALANCHE = 43114,\n  BASE_GOERLI = 84531,\n  BASE = 8453\n}\n\nexport const SUPPORTED_CHAINS = [\n  ChainId.MAINNET,\n  ChainId.OPTIMISM,\n  ChainId.OPTIMISM_GOERLI,\n  ChainId.OPTIMISM_SEPOLIA,\n  ChainId.ARBITRUM_ONE,\n  ChainId.ARBITRUM_GOERLI,\n  ChainId.ARBITRUM_SEPOLIA,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.GOERLI,\n  ChainId.SEPOLIA,\n  ChainId.CELO_ALFAJORES,\n  ChainId.CELO,\n  ChainId.BNB,\n  ChainId.AVALANCHE,\n  ChainId.BASE,\n  ChainId.BASE_GOERLI\n] as const\nexport type SupportedChainsType = typeof SUPPORTED_CHAINS[number]\n\nexport enum NativeCurrencyName {\n  // Strings match input for CLI\n  ETHER = 'ETH',\n  MATIC = 'MATIC',\n  CELO = 'CELO',\n  GNOSIS = 'XDAI',\n  MOONBEAM = 'GLMR',\n  BNB = 'BNB',\n  AVAX = 'AVAX'\n}\n","import { ChainId, SUPPORTED_CHAINS, SupportedChainsType } from './chains'\n\ntype AddressMap = { [chainId: number]: string }\n\ntype ChainAddresses = {\n  v3CoreFactoryAddress: string\n  multicallAddress: string\n  quoterAddress: string\n  v3MigratorAddress?: string\n  nonfungiblePositionManagerAddress?: string\n  tickLensAddress?: string\n  swapRouter02Address?: string\n  v1MixedRouteQuoterAddress?: string\n}\n\nconst DEFAULT_NETWORKS = [ChainId.MAINNET, ChainId.GOERLI, ChainId.SEPOLIA]\n\nfunction constructSameAddressMap(address: string, additionalNetworks: ChainId[] = []): AddressMap {\n  return DEFAULT_NETWORKS.concat(additionalNetworks).reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = address\n    return memo\n  }, {})\n}\n\nexport const UNI_ADDRESSES: AddressMap = constructSameAddressMap('0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', [\n  ChainId.OPTIMISM,\n  ChainId.ARBITRUM_ONE,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.SEPOLIA\n])\n\nexport const UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = '0x8B799381ac40b838BBA4131ffB26197C432AFe78'\n\n/**\n * @deprecated use V2_FACTORY_ADDRESSES instead\n */\nexport const V2_FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'\nexport const V2_FACTORY_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.GOERLI]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.SEPOLIA]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.OPTIMISM]: '0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf',\n  [ChainId.ARBITRUM_ONE]: '0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9',\n  [ChainId.AVALANCHE]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.BASE]: '0x8909dc15e40173ff4699343b6eb8132c65e18ec6',\n  [ChainId.BNB]: '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6',\n  [ChainId.POLYGON]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.CELO]: '0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f'\n}\n/**\n * @deprecated use V2_ROUTER_ADDRESSES instead\n */\nexport const V2_ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\nexport const V2_ROUTER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.GOERLI]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.SEPOLIA]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.ARBITRUM_ONE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.OPTIMISM]: '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2',\n  [ChainId.BASE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.AVALANCHE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.BNB]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.POLYGON]: '0xedf6066a2b290c185783862c7f4776a2c8077ad1'\n}\n\n// Networks that share most of the same addresses i.e. Mainnet, Goerli, Optimism, Arbitrum, Polygon\nconst DEFAULT_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\n  multicallAddress: '0x1F98415757620B543A52E61c46B32eB19261F984',\n  quoterAddress: '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6',\n  v3MigratorAddress: '0xA5644E29708357803b5A882D272c41cC0dF92B34',\n  nonfungiblePositionManagerAddress: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88'\n}\nconst MAINNET_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E'\n}\nconst GOERLI_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0xBa60b6e6fF25488308789E6e0A65D838be34194e'\n}\n\nconst OPTIMISM_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\nconst ARBITRUM_ONE_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  multicallAddress: '0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB',\n  tickLensAddress: '0xbfd8137f7d1516D3ea5cA83523914859ec47F573'\n}\nconst POLYGON_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\n\n// celo v3 addresses\nconst CELO_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc',\n  multicallAddress: '0x633987602DE5C4F337e3DbF265303A1080324204',\n  quoterAddress: '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8',\n  v3MigratorAddress: '0x3cFd4d48EDfDCC53D3f173F596f621064614C582',\n  nonfungiblePositionManagerAddress: '0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A',\n  tickLensAddress: '0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D'\n}\n\n// BNB v3 addresses\nconst BNB_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7',\n  multicallAddress: '0x963Df249eD09c358A4819E39d9Cd5736c3087184',\n  quoterAddress: '0x78D78E420Da98ad378D7799bE8f4AF69033EB077',\n  v3MigratorAddress: '0x32681814957e0C13117ddc0c2aba232b5c9e760f',\n  nonfungiblePositionManagerAddress: '0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613',\n  tickLensAddress: '0xD9270014D396281579760619CCf4c3af0501A47C',\n  swapRouter02Address: '0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2'\n}\n\n// optimism goerli addresses\nconst OPTIMISM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10',\n  multicallAddress: '0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd',\n  quoterAddress: '0x9569CbA925c8ca2248772A9A4976A516743A246F',\n  v3MigratorAddress: '0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8',\n  nonfungiblePositionManagerAddress: '0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6',\n  tickLensAddress: '0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e'\n}\n\n// optimism sepolia addresses\nconst OPTIMISM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF',\n  multicallAddress: '0x80e4e06841bb76AA9735E0448cB8d003C0EF009a',\n  quoterAddress: '0x0FBEa6cf957d95ee9313490050F6A0DA68039404',\n  v3MigratorAddress: '0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07',\n  nonfungiblePositionManagerAddress: '0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d',\n  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5'\n}\n\n// arbitrum goerli v3 addresses\nconst ARBITRUM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6',\n  multicallAddress: '0x8260CB40247290317a4c062F3542622367F206Ee',\n  quoterAddress: '0x1dd92b83591781D0C6d98d07391eea4b9a6008FA',\n  v3MigratorAddress: '0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3',\n  nonfungiblePositionManagerAddress: '0x622e4726a167799826d1E1D150b076A7725f5D81',\n  tickLensAddress: '0xb52429333da969a0C79a60930a4Bf0020E5D1DE8'\n}\n\n// arbitrum sepolia v3 addresses\nconst ARBITRUM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e',\n  multicallAddress: '0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A',\n  quoterAddress: '0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B',\n  v3MigratorAddress: '0x398f43ef2c67B941147157DA1c5a868E906E043D',\n  nonfungiblePositionManagerAddress: '0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65',\n  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9'\n}\n\n// sepolia v3 addresses\nconst SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x0227628f3F023bb0B980b67D528571c95c6DaC1c',\n  multicallAddress: '0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07',\n  quoterAddress: '0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3',\n  v3MigratorAddress: '0x729004182cF005CEC8Bd85df140094b6aCbe8b15',\n  nonfungiblePositionManagerAddress: '0x1238536071E1c677A632429e3655c799b22cDA52',\n  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07'\n}\n\n// Avalanche v3 addresses\nconst AVALANCHE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD',\n  multicallAddress: '0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2',\n  quoterAddress: '0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F',\n  v3MigratorAddress: '0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97',\n  nonfungiblePositionManagerAddress: '0x655C406EBFa14EE2006250925e54ec43AD184f8B',\n  tickLensAddress: '0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950',\n  swapRouter02Address: '0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE'\n}\n\nconst BASE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x33128a8fC17869897dcE68Ed026d694621f6FDfD',\n  multicallAddress: '0x091e99cb1C49331a94dD62755D168E941AbD0693',\n  quoterAddress: '0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a',\n  v3MigratorAddress: '0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7',\n  nonfungiblePositionManagerAddress: '0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1',\n  tickLensAddress: '0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d',\n  swapRouter02Address: '0x2626664c2603336E57B271c5C0b26F421741e481'\n}\n\n// Base Goerli v3 addresses\nconst BASE_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2',\n  multicallAddress: '0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439',\n  quoterAddress: '0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9',\n  v3MigratorAddress: '0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE',\n  nonfungiblePositionManagerAddress: '0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30',\n  tickLensAddress: '0x1acB873Ee909D0c98adB18e4474943249F931b92',\n  swapRouter02Address: '0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d'\n}\n\nexport const CHAIN_TO_ADDRESSES_MAP: Record<SupportedChainsType, ChainAddresses> = {\n  [ChainId.MAINNET]: MAINNET_ADDRESSES,\n  [ChainId.OPTIMISM]: OPTIMISM_ADDRESSES,\n  [ChainId.ARBITRUM_ONE]: ARBITRUM_ONE_ADDRESSES,\n  [ChainId.POLYGON]: POLYGON_ADDRESSES,\n  [ChainId.POLYGON_MUMBAI]: POLYGON_ADDRESSES,\n  [ChainId.GOERLI]: GOERLI_ADDRESSES,\n  [ChainId.CELO]: CELO_ADDRESSES,\n  [ChainId.CELO_ALFAJORES]: CELO_ADDRESSES,\n  [ChainId.BNB]: BNB_ADDRESSES,\n  [ChainId.OPTIMISM_GOERLI]: OPTIMISM_GOERLI_ADDRESSES,\n  [ChainId.OPTIMISM_SEPOLIA]: OPTIMISM_SEPOLIA_ADDRESSES,\n  [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_ADDRESSES,\n  [ChainId.ARBITRUM_SEPOLIA]: ARBITRUM_SEPOLIA_ADDRESSES,\n  [ChainId.SEPOLIA]: SEPOLIA_ADDRESSES,\n  [ChainId.AVALANCHE]: AVALANCHE_ADDRESSES,\n  [ChainId.BASE]: BASE_ADDRESSES,\n  [ChainId.BASE_GOERLI]: BASE_GOERLI_ADDRESSES\n}\n\n/* V3 Contract Addresses */\nexport const V3_CORE_FACTORY_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].v3CoreFactoryAddress\n    return memo\n  }, {})\n}\n\nexport const V3_MIGRATOR_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const v3MigratorAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v3MigratorAddress\n    if (v3MigratorAddress) {\n      memo[chainId] = v3MigratorAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MULTICALL_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].multicallAddress\n    return memo\n  }, {})\n}\n\n/**\n * The oldest V0 governance address\n */\nexport const GOVERNANCE_ALPHA_V0_ADDRESSES: AddressMap = constructSameAddressMap(\n  '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\n)\n/**\n * The older V1 governance address\n */\nexport const GOVERNANCE_ALPHA_V1_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0xC4e172459f1E7939D522503B81AFAaC1014CE6F6'\n}\n/**\n * The latest governor bravo that is currently admin of timelock\n */\nexport const GOVERNANCE_BRAVO_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x408ED6354d4973f66138C91495F2f2FCbd8724C3'\n}\n\nexport const TIMELOCK_ADDRESSES: AddressMap = constructSameAddressMap('0x1a9C8182C09F50C8318d769245beA52c32BE35BC')\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e'\n}\n\nexport const ARGENT_WALLET_DETECTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8'\n}\n\nexport const QUOTER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].quoterAddress\n    return memo\n  }, {})\n}\n\nexport const NONFUNGIBLE_POSITION_MANAGER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const nonfungiblePositionManagerAddress = CHAIN_TO_ADDRESSES_MAP[chainId].nonfungiblePositionManagerAddress\n    if (nonfungiblePositionManagerAddress) {\n      memo[chainId] = nonfungiblePositionManagerAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const ENS_REGISTRAR_ADDRESSES: AddressMap = {\n  ...constructSameAddressMap('0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e')\n}\n\nexport const SOCKS_CONTROLLER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x65770b5283117639760beA3F867b69b3697a91dd'\n}\n\nexport const TICK_LENS_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const tickLensAddress = CHAIN_TO_ADDRESSES_MAP[chainId].tickLensAddress\n    if (tickLensAddress) {\n      memo[chainId] = tickLensAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MIXED_ROUTE_QUOTER_V1_ADDRESSES: AddressMap = SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n  const v1MixedRouteQuoterAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v1MixedRouteQuoterAddress\n  if (v1MixedRouteQuoterAddress) {\n    memo[chainId] = v1MixedRouteQuoterAddress\n  }\n  return memo\n}, {})\n\nexport const SWAP_ROUTER_02_ADDRESSES = (chainId: number) => {\n  if (chainId in SUPPORTED_CHAINS) {\n    const id = chainId as SupportedChainsType\n    return CHAIN_TO_ADDRESSES_MAP[id].swapRouter02Address ?? '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45'\n  }\n  return ''\n}\n","import JSBI from 'jsbi'\n\n// exports for external consumption\nexport type BigintIsh = JSBI | string | number\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\n    this.numerator = JSBI.BigInt(numerator)\n    this.denominator = JSBI.BigInt(denominator)\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\n      return new Fraction(fractionish)\n\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\n    throw new Error('Could not parse fraction')\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { Currency } from '../currency'\nimport { Token } from '../token'\nimport { Fraction } from './fraction'\nimport _Big from 'big.js'\n\nimport toFormat from 'toformat'\nimport { BigintIsh, Rounding, MaxUint256 } from '../../constants'\n\nconst Big = toFormat(_Big)\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T\n  public readonly decimalScale: JSBI\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount)\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator)\n  }\n\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\n    super(numerator, denominator)\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\n    this.currency = currency\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const added = super.add(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const subtracted = super.subtract(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\n  }\n}\n","import JSBI from 'jsbi'\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator)\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other))\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other))\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other))\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other))\n  }\n\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Currency } from '../currency'\nimport { Fraction } from './fraction'\nimport { CurrencyAmount } from './currencyAmount'\n\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\n  public readonly baseCurrency: TBase // input i.e. denominator\n  public readonly quoteCurrency: TQuote // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [{ baseAmount: CurrencyAmount<TBase>; quoteAmount: CurrencyAmount<TQuote> }]\n  ) {\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\n\n    if (args.length === 4) {\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ]\n    }\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\n    const result = super.multiply(currencyAmount)\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { Token } from './token'\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class BaseCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\n\n    this.chainId = chainId\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token\n}\n","import { BaseCurrency } from './baseCurrency'\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends BaseCurrency {\n  public readonly isNative: true = true\n  public readonly isToken: false = false\n}\n","import { getAddress } from '@ethersproject/address'\n\n/**\n * Validates an address and returns the parsed (checksummed) version of that address\n * @param address the unchecksummed hex address\n */\nexport function validateAndParseAddress(address: string): string {\n  try {\n    return getAddress(address)\n  } catch (error) {\n    throw new Error(`${address} is not a valid address.`)\n  }\n}\n\n// Checks a string starts with 0x, is 42 characters long and contains only hex characters after 0x\nconst startsWith0xLen42HexRegex = /^0x[0-9a-fA-F]{40}$/\n\n/**\n * Checks if an address is valid by checking 0x prefix, length === 42 and hex encoding.\n * @param address the unchecksummed hex address\n */\nexport function checkValidAddress(address: string): string {\n  if (startsWith0xLen42HexRegex.test(address)) {\n    return address\n  }\n\n  throw new Error(`${address} is not a valid address.`)\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport invariant from 'tiny-invariant'\nimport { checkValidAddress, validateAndParseAddress } from '../utils/validateAndParseAddress'\nimport { BaseCurrency } from './baseCurrency'\nimport { Currency } from './currency'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends BaseCurrency {\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n\n  /**\n   * The contract address on the chain on which this token lives\n   */\n  public readonly address: string\n\n  /**\n   * Relevant for fee-on-transfer (FOT) token taxes,\n   * Not every ERC20 token is FOT token, so this field is optional\n   */\n  public readonly buyFeeBps?: BigNumber\n  public readonly sellFeeBps?: BigNumber\n\n  /**\n   *\n   * @param chainId {@link BaseCurrency#chainId}\n   * @param address The contract address on the chain on which this token lives\n   * @param decimals {@link BaseCurrency#decimals}\n   * @param symbol {@link BaseCurrency#symbol}\n   * @param name {@link BaseCurrency#name}\n   * @param bypassChecksum If true it only checks for length === 42, startsWith 0x and contains only hex characters\n   * @param buyFeeBps Buy fee tax for FOT tokens, in basis points\n   * @param sellFeeBps Sell fee tax for FOT tokens, in basis points\n   */\n  public constructor(\n    chainId: number,\n    address: string,\n    decimals: number,\n    symbol?: string,\n    name?: string,\n    bypassChecksum?: boolean,\n    buyFeeBps?: BigNumber,\n    sellFeeBps?: BigNumber\n  ) {\n    super(chainId, decimals, symbol, name)\n    if (bypassChecksum) {\n      this.address = checkValidAddress(address)\n    } else {\n      this.address = validateAndParseAddress(address)\n    }\n    if (buyFeeBps) {\n      invariant(buyFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    if (sellFeeBps) {\n      invariant(sellFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    this.buyFeeBps = buyFeeBps\n    this.sellFeeBps = sellFeeBps\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return other.isToken && this.chainId === other.chainId && this.address.toLowerCase() === other.address.toLowerCase()\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address.toLowerCase() !== other.address.toLowerCase(), 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this\n  }\n}\n","import { Token } from './token'\n\n/**\n * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped\n */\nexport const WETH9: { [chainId: number]: Token } = {\n  [1]: new Token(1, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'),\n  [3]: new Token(3, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [4]: new Token(4, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [5]: new Token(5, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'),\n  [42]: new Token(42, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'),\n\n  [10]: new Token(10, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [69]: new Token(69, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [11155420]: new Token(11155420, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [42161]: new Token(42161, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),\n  [421611]: new Token(421611, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),\n  [421614]: new Token(421614, '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73', 18, 'WETH', 'Wrapped Ether'),\n\n  [8453]: new Token(8453, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [56]: new Token(56, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n  [137]: new Token(137, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),\n  [43114]: new Token(43114, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX')\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { NativeCurrency } from './nativeCurrency'\nimport { Token } from './token'\nimport { WETH9 } from './weth9'\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ETH', 'Ether')\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId]\n    invariant(!!weth9, 'WRAPPED')\n    return weth9\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {}\n\n  public static onChain(chainId: number): Ether {\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\n\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst TWO = JSBI.BigInt(2)\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\n  }\n\n  let z: JSBI\n  let x: JSBI\n  z = value\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\n  while (JSBI.lessThan(x, z)) {\n    z = x\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\n  }\n  return z\n}\n","import { Currency, CurrencyAmount, Percent, Price } from '../entities'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount)\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\n}\n","import invariant from 'tiny-invariant'\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n"],"names":["ChainId","NativeCurrencyName","SUPPORTED_CHAINS","MAINNET","OPTIMISM","OPTIMISM_GOERLI","OPTIMISM_SEPOLIA","ARBITRUM_ONE","ARBITRUM_GOERLI","ARBITRUM_SEPOLIA","POLYGON","POLYGON_MUMBAI","GOERLI","SEPOLIA","CELO_ALFAJORES","CELO","BNB","AVALANCHE","BASE","BASE_GOERLI","DEFAULT_NETWORKS","constructSameAddressMap","address","additionalNetworks","concat","reduce","memo","chainId","TradeType","Rounding","UNI_ADDRESSES","V2_FACTORY_ADDRESSES","V2_ROUTER_ADDRESSES","DEFAULT_ADDRESSES","v3CoreFactoryAddress","multicallAddress","quoterAddress","v3MigratorAddress","nonfungiblePositionManagerAddress","MAINNET_ADDRESSES","v1MixedRouteQuoterAddress","GOERLI_ADDRESSES","OPTIMISM_ADDRESSES","ARBITRUM_ONE_ADDRESSES","tickLensAddress","POLYGON_ADDRESSES","CELO_ADDRESSES","CHAIN_TO_ADDRESSES_MAP","swapRouter02Address","V3_CORE_FACTORY_ADDRESSES","V3_MIGRATOR_ADDRESSES","MULTICALL_ADDRESSES","GOVERNANCE_ALPHA_V0_ADDRESSES","GOVERNANCE_ALPHA_V1_ADDRESSES","GOVERNANCE_BRAVO_ADDRESSES","TIMELOCK_ADDRESSES","MERKLE_DISTRIBUTOR_ADDRESS","ARGENT_WALLET_DETECTOR_ADDRESS","QUOTER_ADDRESSES","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","ENS_REGISTRAR_ADDRESSES","SOCKS_CONTROLLER_ADDRESSES","TICK_LENS_ADDRESSES","MIXED_ROUTE_QUOTER_V1_ADDRESSES","MaxUint256","JSBI","BigInt","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","Error","invert","this","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","Number","isInteger","invariant","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","_this","decimalScale","exponentiate","decimals","fromRawAmount","rawAmount","fromFractionalAmount","equals","added","subtracted","multiplied","divided","_Fraction","toExact","isToken","wrapped","ONE_HUNDRED","toPercent","fraction","Percent","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","quote","currencyAmount","adjustedForDecimals","BaseCurrency","symbol","name","isSafeInteger","NativeCurrency","validateAndParseAddress","getAddress","error","startsWith0xLen42HexRegex","Token","bypassChecksum","buyFeeBps","sellFeeBps","test","checkValidAddress","gte","BigNumber","from","toLowerCase","sortsBefore","WETH9","Ether","_NativeCurrency","onChain","_etherCache","isNative","weth9","MAX_SAFE_INTEGER","ZERO","ONE","TWO","midPrice","inputAmount","outputAmount","quotedOutputAmount","priceImpact","items","maxSize","comparator","push","isFull","lo","hi","mid","splice","pop","value","greaterThanOrEqual","Math","floor","sqrt","toNumber","z","x"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"sdk-core.cjs.production.min.js","sources":["../src/chains.ts","../src/addresses.ts","../src/constants.ts","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/percent.ts","../src/entities/fractions/price.ts","../src/entities/baseCurrency.ts","../src/entities/nativeCurrency.ts","../src/utils/validateAndParseAddress.ts","../src/entities/token.ts","../src/entities/weth9.ts","../src/entities/ether.ts","../src/utils/sqrt.ts","../src/utils/computePriceImpact.ts","../src/utils/sortedInsert.ts"],"sourcesContent":["export enum ChainId {\n  MAINNET = 1,\n  GOERLI = 5,\n  SEPOLIA = 11155111,\n  OPTIMISM = 10,\n  OPTIMISM_GOERLI = 420,\n  OPTIMISM_SEPOLIA = 11155420,\n  ARBITRUM_ONE = 42161,\n  ARBITRUM_GOERLI = 421613,\n  ARBITRUM_SEPOLIA = 421614,\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001,\n  CELO = 42220,\n  CELO_ALFAJORES = 44787,\n  GNOSIS = 100,\n  MOONBEAM = 1284,\n  BNB = 56,\n  AVALANCHE = 43114,\n  BASE_GOERLI = 84531,\n  BASE = 8453,\n  ZORA = 7777777,\n  ZORA_SEPOLIA = 999999999\n}\n\nexport const SUPPORTED_CHAINS = [\n  ChainId.MAINNET,\n  ChainId.OPTIMISM,\n  ChainId.OPTIMISM_GOERLI,\n  ChainId.OPTIMISM_SEPOLIA,\n  ChainId.ARBITRUM_ONE,\n  ChainId.ARBITRUM_GOERLI,\n  ChainId.ARBITRUM_SEPOLIA,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.GOERLI,\n  ChainId.SEPOLIA,\n  ChainId.CELO_ALFAJORES,\n  ChainId.CELO,\n  ChainId.BNB,\n  ChainId.AVALANCHE,\n  ChainId.BASE,\n  ChainId.BASE_GOERLI,\n  ChainId.ZORA,\n  ChainId.ZORA_SEPOLIA\n] as const\nexport type SupportedChainsType = typeof SUPPORTED_CHAINS[number]\n\nexport enum NativeCurrencyName {\n  // Strings match input for CLI\n  ETHER = 'ETH',\n  MATIC = 'MATIC',\n  CELO = 'CELO',\n  GNOSIS = 'XDAI',\n  MOONBEAM = 'GLMR',\n  BNB = 'BNB',\n  AVAX = 'AVAX'\n}\n","import { ChainId, SUPPORTED_CHAINS, SupportedChainsType } from './chains'\n\ntype AddressMap = { [chainId: number]: string }\n\ntype ChainAddresses = {\n  v3CoreFactoryAddress: string\n  multicallAddress: string\n  quoterAddress: string\n  v3MigratorAddress?: string\n  nonfungiblePositionManagerAddress?: string\n  tickLensAddress?: string\n  swapRouter02Address?: string\n  v1MixedRouteQuoterAddress?: string\n}\n\nconst DEFAULT_NETWORKS = [ChainId.MAINNET, ChainId.GOERLI, ChainId.SEPOLIA]\n\nfunction constructSameAddressMap(address: string, additionalNetworks: ChainId[] = []): AddressMap {\n  return DEFAULT_NETWORKS.concat(additionalNetworks).reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = address\n    return memo\n  }, {})\n}\n\nexport const UNI_ADDRESSES: AddressMap = constructSameAddressMap('0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', [\n  ChainId.OPTIMISM,\n  ChainId.ARBITRUM_ONE,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.SEPOLIA\n])\n\nexport const UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = '0x8B799381ac40b838BBA4131ffB26197C432AFe78'\n\n/**\n * @deprecated use V2_FACTORY_ADDRESSES instead\n */\nexport const V2_FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'\nexport const V2_FACTORY_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.GOERLI]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.SEPOLIA]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.OPTIMISM]: '0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf',\n  [ChainId.ARBITRUM_ONE]: '0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9',\n  [ChainId.AVALANCHE]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.BASE]: '0x8909dc15e40173ff4699343b6eb8132c65e18ec6',\n  [ChainId.BNB]: '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6',\n  [ChainId.POLYGON]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.CELO]: '0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f'\n}\n/**\n * @deprecated use V2_ROUTER_ADDRESSES instead\n */\nexport const V2_ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\nexport const V2_ROUTER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.GOERLI]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.SEPOLIA]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.ARBITRUM_ONE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.OPTIMISM]: '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2',\n  [ChainId.BASE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.AVALANCHE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.BNB]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.POLYGON]: '0xedf6066a2b290c185783862c7f4776a2c8077ad1'\n}\n\n// Networks that share most of the same addresses i.e. Mainnet, Goerli, Optimism, Arbitrum, Polygon\nconst DEFAULT_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\n  multicallAddress: '0x1F98415757620B543A52E61c46B32eB19261F984',\n  quoterAddress: '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6',\n  v3MigratorAddress: '0xA5644E29708357803b5A882D272c41cC0dF92B34',\n  nonfungiblePositionManagerAddress: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88'\n}\nconst MAINNET_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E'\n}\nconst GOERLI_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0xBa60b6e6fF25488308789E6e0A65D838be34194e'\n}\n\nconst OPTIMISM_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\nconst ARBITRUM_ONE_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  multicallAddress: '0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB',\n  tickLensAddress: '0xbfd8137f7d1516D3ea5cA83523914859ec47F573'\n}\nconst POLYGON_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\n\n// celo v3 addresses\nconst CELO_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc',\n  multicallAddress: '0x633987602DE5C4F337e3DbF265303A1080324204',\n  quoterAddress: '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8',\n  v3MigratorAddress: '0x3cFd4d48EDfDCC53D3f173F596f621064614C582',\n  nonfungiblePositionManagerAddress: '0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A',\n  tickLensAddress: '0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D'\n}\n\n// BNB v3 addresses\nconst BNB_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7',\n  multicallAddress: '0x963Df249eD09c358A4819E39d9Cd5736c3087184',\n  quoterAddress: '0x78D78E420Da98ad378D7799bE8f4AF69033EB077',\n  v3MigratorAddress: '0x32681814957e0C13117ddc0c2aba232b5c9e760f',\n  nonfungiblePositionManagerAddress: '0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613',\n  tickLensAddress: '0xD9270014D396281579760619CCf4c3af0501A47C',\n  swapRouter02Address: '0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2'\n}\n\n// optimism goerli addresses\nconst OPTIMISM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10',\n  multicallAddress: '0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd',\n  quoterAddress: '0x9569CbA925c8ca2248772A9A4976A516743A246F',\n  v3MigratorAddress: '0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8',\n  nonfungiblePositionManagerAddress: '0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6',\n  tickLensAddress: '0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e'\n}\n\n// optimism sepolia addresses\nconst OPTIMISM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF',\n  multicallAddress: '0x80e4e06841bb76AA9735E0448cB8d003C0EF009a',\n  quoterAddress: '0x0FBEa6cf957d95ee9313490050F6A0DA68039404',\n  v3MigratorAddress: '0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07',\n  nonfungiblePositionManagerAddress: '0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d',\n  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5',\n  swapRouter02Address: '0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4'\n}\n\n// arbitrum goerli v3 addresses\nconst ARBITRUM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6',\n  multicallAddress: '0x8260CB40247290317a4c062F3542622367F206Ee',\n  quoterAddress: '0x1dd92b83591781D0C6d98d07391eea4b9a6008FA',\n  v3MigratorAddress: '0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3',\n  nonfungiblePositionManagerAddress: '0x622e4726a167799826d1E1D150b076A7725f5D81',\n  tickLensAddress: '0xb52429333da969a0C79a60930a4Bf0020E5D1DE8'\n}\n\n// arbitrum sepolia v3 addresses\nconst ARBITRUM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e',\n  multicallAddress: '0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A',\n  quoterAddress: '0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B',\n  v3MigratorAddress: '0x398f43ef2c67B941147157DA1c5a868E906E043D',\n  nonfungiblePositionManagerAddress: '0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65',\n  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9',\n  swapRouter02Address: '0x101F443B4d1b059569D643917553c771E1b9663E'\n}\n\n// sepolia v3 addresses\nconst SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x0227628f3F023bb0B980b67D528571c95c6DaC1c',\n  multicallAddress: '0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07',\n  quoterAddress: '0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3',\n  v3MigratorAddress: '0x729004182cF005CEC8Bd85df140094b6aCbe8b15',\n  nonfungiblePositionManagerAddress: '0x1238536071E1c677A632429e3655c799b22cDA52',\n  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07',\n  swapRouter02Address: '0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E'\n}\n\n// Avalanche v3 addresses\nconst AVALANCHE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD',\n  multicallAddress: '0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2',\n  quoterAddress: '0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F',\n  v3MigratorAddress: '0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97',\n  nonfungiblePositionManagerAddress: '0x655C406EBFa14EE2006250925e54ec43AD184f8B',\n  tickLensAddress: '0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950',\n  swapRouter02Address: '0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE'\n}\n\nconst BASE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x33128a8fC17869897dcE68Ed026d694621f6FDfD',\n  multicallAddress: '0x091e99cb1C49331a94dD62755D168E941AbD0693',\n  quoterAddress: '0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a',\n  v3MigratorAddress: '0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7',\n  nonfungiblePositionManagerAddress: '0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1',\n  tickLensAddress: '0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d',\n  swapRouter02Address: '0x2626664c2603336E57B271c5C0b26F421741e481'\n}\n\n// Base Goerli v3 addresses\nconst BASE_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2',\n  multicallAddress: '0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439',\n  quoterAddress: '0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9',\n  v3MigratorAddress: '0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE',\n  nonfungiblePositionManagerAddress: '0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30',\n  tickLensAddress: '0x1acB873Ee909D0c98adB18e4474943249F931b92',\n  swapRouter02Address: '0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d'\n}\n\nconst ZORA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb',\n  multicallAddress: '0xA51c76bEE6746cB487a7e9312E43e2b8f4A37C15',\n  quoterAddress: '0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df',\n  v3MigratorAddress: '0x048352d8dCF13686982C799da63fA6426a9D0b60',\n  nonfungiblePositionManagerAddress: '0xbC91e8DfA3fF18De43853372A3d7dfe585137D78',\n  tickLensAddress: '0x209AAda09D74Ad3B8D0E92910Eaf85D2357e3044',\n  swapRouter02Address: '0x7De04c96BE5159c3b5CeffC82aa176dc81281557'\n}\n\nconst ZORA_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x4324A677D74764f46f33ED447964252441aA8Db6',\n  multicallAddress: '0xA1E7e3A69671C4494EC59Dbd442de930a93F911A',\n  quoterAddress: '0xC195976fEF0985886E37036E2DF62bF371E12Df0',\n  v3MigratorAddress: '0x65ef259b31bf1d977c37e9434658694267674897',\n  nonfungiblePositionManagerAddress: '0xB8458EaAe43292e3c1F7994EFd016bd653d23c20',\n  tickLensAddress: '0x23C0F71877a1Fc4e20A78018f9831365c85f3064'\n}\n\nexport const CHAIN_TO_ADDRESSES_MAP: Record<SupportedChainsType, ChainAddresses> = {\n  [ChainId.MAINNET]: MAINNET_ADDRESSES,\n  [ChainId.OPTIMISM]: OPTIMISM_ADDRESSES,\n  [ChainId.ARBITRUM_ONE]: ARBITRUM_ONE_ADDRESSES,\n  [ChainId.POLYGON]: POLYGON_ADDRESSES,\n  [ChainId.POLYGON_MUMBAI]: POLYGON_ADDRESSES,\n  [ChainId.GOERLI]: GOERLI_ADDRESSES,\n  [ChainId.CELO]: CELO_ADDRESSES,\n  [ChainId.CELO_ALFAJORES]: CELO_ADDRESSES,\n  [ChainId.BNB]: BNB_ADDRESSES,\n  [ChainId.OPTIMISM_GOERLI]: OPTIMISM_GOERLI_ADDRESSES,\n  [ChainId.OPTIMISM_SEPOLIA]: OPTIMISM_SEPOLIA_ADDRESSES,\n  [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_ADDRESSES,\n  [ChainId.ARBITRUM_SEPOLIA]: ARBITRUM_SEPOLIA_ADDRESSES,\n  [ChainId.SEPOLIA]: SEPOLIA_ADDRESSES,\n  [ChainId.AVALANCHE]: AVALANCHE_ADDRESSES,\n  [ChainId.BASE]: BASE_ADDRESSES,\n  [ChainId.BASE_GOERLI]: BASE_GOERLI_ADDRESSES,\n  [ChainId.ZORA]: ZORA_ADDRESSES,\n  [ChainId.ZORA_SEPOLIA]: ZORA_SEPOLIA_ADDRESSES\n}\n\n/* V3 Contract Addresses */\nexport const V3_CORE_FACTORY_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].v3CoreFactoryAddress\n    return memo\n  }, {})\n}\n\nexport const V3_MIGRATOR_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const v3MigratorAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v3MigratorAddress\n    if (v3MigratorAddress) {\n      memo[chainId] = v3MigratorAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MULTICALL_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].multicallAddress\n    return memo\n  }, {})\n}\n\n/**\n * The oldest V0 governance address\n */\nexport const GOVERNANCE_ALPHA_V0_ADDRESSES: AddressMap = constructSameAddressMap(\n  '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\n)\n/**\n * The older V1 governance address\n */\nexport const GOVERNANCE_ALPHA_V1_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0xC4e172459f1E7939D522503B81AFAaC1014CE6F6'\n}\n/**\n * The latest governor bravo that is currently admin of timelock\n */\nexport const GOVERNANCE_BRAVO_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x408ED6354d4973f66138C91495F2f2FCbd8724C3'\n}\n\nexport const TIMELOCK_ADDRESSES: AddressMap = constructSameAddressMap('0x1a9C8182C09F50C8318d769245beA52c32BE35BC')\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e'\n}\n\nexport const ARGENT_WALLET_DETECTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8'\n}\n\nexport const QUOTER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].quoterAddress\n    return memo\n  }, {})\n}\n\nexport const NONFUNGIBLE_POSITION_MANAGER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const nonfungiblePositionManagerAddress = CHAIN_TO_ADDRESSES_MAP[chainId].nonfungiblePositionManagerAddress\n    if (nonfungiblePositionManagerAddress) {\n      memo[chainId] = nonfungiblePositionManagerAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const ENS_REGISTRAR_ADDRESSES: AddressMap = {\n  ...constructSameAddressMap('0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e')\n}\n\nexport const SOCKS_CONTROLLER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x65770b5283117639760beA3F867b69b3697a91dd'\n}\n\nexport const TICK_LENS_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const tickLensAddress = CHAIN_TO_ADDRESSES_MAP[chainId].tickLensAddress\n    if (tickLensAddress) {\n      memo[chainId] = tickLensAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MIXED_ROUTE_QUOTER_V1_ADDRESSES: AddressMap = SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n  const v1MixedRouteQuoterAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v1MixedRouteQuoterAddress\n  if (v1MixedRouteQuoterAddress) {\n    memo[chainId] = v1MixedRouteQuoterAddress\n  }\n  return memo\n}, {})\n\nexport const SWAP_ROUTER_02_ADDRESSES = (chainId: number) => {\n  if (SUPPORTED_CHAINS.includes(chainId)) {\n    const id = chainId as SupportedChainsType\n    return CHAIN_TO_ADDRESSES_MAP[id].swapRouter02Address ?? '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45'\n  }\n  return ''\n}\n","import JSBI from 'jsbi'\n\n// exports for external consumption\nexport type BigintIsh = JSBI | string | number\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\n    this.numerator = JSBI.BigInt(numerator)\n    this.denominator = JSBI.BigInt(denominator)\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\n      return new Fraction(fractionish)\n\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\n    throw new Error('Could not parse fraction')\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { Currency } from '../currency'\nimport { Token } from '../token'\nimport { Fraction } from './fraction'\nimport _Big from 'big.js'\n\nimport toFormat from 'toformat'\nimport { BigintIsh, Rounding, MaxUint256 } from '../../constants'\n\nconst Big = toFormat(_Big)\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T\n  public readonly decimalScale: JSBI\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount)\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator)\n  }\n\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\n    super(numerator, denominator)\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\n    this.currency = currency\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const added = super.add(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const subtracted = super.subtract(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\n  }\n}\n","import JSBI from 'jsbi'\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator)\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other))\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other))\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other))\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other))\n  }\n\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Currency } from '../currency'\nimport { Fraction } from './fraction'\nimport { CurrencyAmount } from './currencyAmount'\n\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\n  public readonly baseCurrency: TBase // input i.e. denominator\n  public readonly quoteCurrency: TQuote // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [{ baseAmount: CurrencyAmount<TBase>; quoteAmount: CurrencyAmount<TQuote> }]\n  ) {\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\n\n    if (args.length === 4) {\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ]\n    }\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\n    const result = super.multiply(currencyAmount)\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { Token } from './token'\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class BaseCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\n\n    this.chainId = chainId\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token\n}\n","import { BaseCurrency } from './baseCurrency'\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends BaseCurrency {\n  public readonly isNative: true = true\n  public readonly isToken: false = false\n}\n","import { getAddress } from '@ethersproject/address'\n\n/**\n * Validates an address and returns the parsed (checksummed) version of that address\n * @param address the unchecksummed hex address\n */\nexport function validateAndParseAddress(address: string): string {\n  try {\n    return getAddress(address)\n  } catch (error) {\n    throw new Error(`${address} is not a valid address.`)\n  }\n}\n\n// Checks a string starts with 0x, is 42 characters long and contains only hex characters after 0x\nconst startsWith0xLen42HexRegex = /^0x[0-9a-fA-F]{40}$/\n\n/**\n * Checks if an address is valid by checking 0x prefix, length === 42 and hex encoding.\n * @param address the unchecksummed hex address\n */\nexport function checkValidAddress(address: string): string {\n  if (startsWith0xLen42HexRegex.test(address)) {\n    return address\n  }\n\n  throw new Error(`${address} is not a valid address.`)\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport invariant from 'tiny-invariant'\nimport { checkValidAddress, validateAndParseAddress } from '../utils/validateAndParseAddress'\nimport { BaseCurrency } from './baseCurrency'\nimport { Currency } from './currency'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends BaseCurrency {\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n\n  /**\n   * The contract address on the chain on which this token lives\n   */\n  public readonly address: string\n\n  /**\n   * Relevant for fee-on-transfer (FOT) token taxes,\n   * Not every ERC20 token is FOT token, so this field is optional\n   */\n  public readonly buyFeeBps?: BigNumber\n  public readonly sellFeeBps?: BigNumber\n\n  /**\n   *\n   * @param chainId {@link BaseCurrency#chainId}\n   * @param address The contract address on the chain on which this token lives\n   * @param decimals {@link BaseCurrency#decimals}\n   * @param symbol {@link BaseCurrency#symbol}\n   * @param name {@link BaseCurrency#name}\n   * @param bypassChecksum If true it only checks for length === 42, startsWith 0x and contains only hex characters\n   * @param buyFeeBps Buy fee tax for FOT tokens, in basis points\n   * @param sellFeeBps Sell fee tax for FOT tokens, in basis points\n   */\n  public constructor(\n    chainId: number,\n    address: string,\n    decimals: number,\n    symbol?: string,\n    name?: string,\n    bypassChecksum?: boolean,\n    buyFeeBps?: BigNumber,\n    sellFeeBps?: BigNumber\n  ) {\n    super(chainId, decimals, symbol, name)\n    if (bypassChecksum) {\n      this.address = checkValidAddress(address)\n    } else {\n      this.address = validateAndParseAddress(address)\n    }\n    if (buyFeeBps) {\n      invariant(buyFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    if (sellFeeBps) {\n      invariant(sellFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    this.buyFeeBps = buyFeeBps\n    this.sellFeeBps = sellFeeBps\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return other.isToken && this.chainId === other.chainId && this.address.toLowerCase() === other.address.toLowerCase()\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address.toLowerCase() !== other.address.toLowerCase(), 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this\n  }\n}\n","import { Token } from './token'\n\n/**\n * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped\n */\nexport const WETH9: { [chainId: number]: Token } = {\n  [1]: new Token(1, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'),\n  [3]: new Token(3, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [4]: new Token(4, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [5]: new Token(5, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'),\n  [42]: new Token(42, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'),\n\n  [10]: new Token(10, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [69]: new Token(69, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [11155420]: new Token(11155420, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [42161]: new Token(42161, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),\n  [421611]: new Token(421611, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),\n  [421614]: new Token(421614, '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73', 18, 'WETH', 'Wrapped Ether'),\n\n  [8453]: new Token(8453, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [56]: new Token(56, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n  [137]: new Token(137, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),\n  [43114]: new Token(43114, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX')\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { NativeCurrency } from './nativeCurrency'\nimport { Token } from './token'\nimport { WETH9 } from './weth9'\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ETH', 'Ether')\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId]\n    invariant(!!weth9, 'WRAPPED')\n    return weth9\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {}\n\n  public static onChain(chainId: number): Ether {\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\n\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst TWO = JSBI.BigInt(2)\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\n  }\n\n  let z: JSBI\n  let x: JSBI\n  z = value\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\n  while (JSBI.lessThan(x, z)) {\n    z = x\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\n  }\n  return z\n}\n","import { Currency, CurrencyAmount, Percent, Price } from '../entities'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount)\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\n}\n","import invariant from 'tiny-invariant'\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n"],"names":["ChainId","NativeCurrencyName","SUPPORTED_CHAINS","MAINNET","OPTIMISM","OPTIMISM_GOERLI","OPTIMISM_SEPOLIA","ARBITRUM_ONE","ARBITRUM_GOERLI","ARBITRUM_SEPOLIA","POLYGON","POLYGON_MUMBAI","GOERLI","SEPOLIA","CELO_ALFAJORES","CELO","BNB","AVALANCHE","BASE","BASE_GOERLI","ZORA","ZORA_SEPOLIA","DEFAULT_NETWORKS","constructSameAddressMap","address","additionalNetworks","concat","reduce","memo","chainId","TradeType","Rounding","UNI_ADDRESSES","V2_FACTORY_ADDRESSES","V2_ROUTER_ADDRESSES","DEFAULT_ADDRESSES","v3CoreFactoryAddress","multicallAddress","quoterAddress","v3MigratorAddress","nonfungiblePositionManagerAddress","MAINNET_ADDRESSES","v1MixedRouteQuoterAddress","GOERLI_ADDRESSES","OPTIMISM_ADDRESSES","ARBITRUM_ONE_ADDRESSES","tickLensAddress","POLYGON_ADDRESSES","CELO_ADDRESSES","CHAIN_TO_ADDRESSES_MAP","swapRouter02Address","V3_CORE_FACTORY_ADDRESSES","V3_MIGRATOR_ADDRESSES","MULTICALL_ADDRESSES","GOVERNANCE_ALPHA_V0_ADDRESSES","GOVERNANCE_ALPHA_V1_ADDRESSES","GOVERNANCE_BRAVO_ADDRESSES","TIMELOCK_ADDRESSES","MERKLE_DISTRIBUTOR_ADDRESS","ARGENT_WALLET_DETECTOR_ADDRESS","QUOTER_ADDRESSES","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","ENS_REGISTRAR_ADDRESSES","SOCKS_CONTROLLER_ADDRESSES","TICK_LENS_ADDRESSES","MIXED_ROUTE_QUOTER_V1_ADDRESSES","MaxUint256","JSBI","BigInt","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","Error","invert","this","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","Number","isInteger","invariant","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","_this","decimalScale","exponentiate","decimals","fromRawAmount","rawAmount","fromFractionalAmount","equals","added","subtracted","multiplied","divided","_Fraction","toExact","isToken","wrapped","ONE_HUNDRED","toPercent","fraction","Percent","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","quote","currencyAmount","adjustedForDecimals","BaseCurrency","symbol","name","isSafeInteger","NativeCurrency","validateAndParseAddress","getAddress","error","startsWith0xLen42HexRegex","Token","bypassChecksum","buyFeeBps","sellFeeBps","test","checkValidAddress","gte","BigNumber","from","toLowerCase","sortsBefore","WETH9","Ether","_NativeCurrency","onChain","_etherCache","isNative","weth9","MAX_SAFE_INTEGER","ZERO","ONE","TWO","includes","midPrice","inputAmount","outputAmount","quotedOutputAmount","priceImpact","items","maxSize","comparator","push","isFull","lo","hi","mid","splice","pop","value","greaterThanOrEqual","Math","floor","sqrt","toNumber","z","x"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js b/node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js
index 76d480a..7d65184 100644
--- a/node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js
+++ b/node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js
@@ -68,9 +68,11 @@ var ChainId;
   ChainId[ChainId["AVALANCHE"] = 43114] = "AVALANCHE";
   ChainId[ChainId["BASE_GOERLI"] = 84531] = "BASE_GOERLI";
   ChainId[ChainId["BASE"] = 8453] = "BASE";
+  ChainId[ChainId["ZORA"] = 7777777] = "ZORA";
+  ChainId[ChainId["ZORA_SEPOLIA"] = 999999999] = "ZORA_SEPOLIA";
 })(ChainId || (ChainId = {}));
 
-var SUPPORTED_CHAINS = [ChainId.MAINNET, ChainId.OPTIMISM, ChainId.OPTIMISM_GOERLI, ChainId.OPTIMISM_SEPOLIA, ChainId.ARBITRUM_ONE, ChainId.ARBITRUM_GOERLI, ChainId.ARBITRUM_SEPOLIA, ChainId.POLYGON, ChainId.POLYGON_MUMBAI, ChainId.GOERLI, ChainId.SEPOLIA, ChainId.CELO_ALFAJORES, ChainId.CELO, ChainId.BNB, ChainId.AVALANCHE, ChainId.BASE, ChainId.BASE_GOERLI];
+var SUPPORTED_CHAINS = [ChainId.MAINNET, ChainId.OPTIMISM, ChainId.OPTIMISM_GOERLI, ChainId.OPTIMISM_SEPOLIA, ChainId.ARBITRUM_ONE, ChainId.ARBITRUM_GOERLI, ChainId.ARBITRUM_SEPOLIA, ChainId.POLYGON, ChainId.POLYGON_MUMBAI, ChainId.GOERLI, ChainId.SEPOLIA, ChainId.CELO_ALFAJORES, ChainId.CELO, ChainId.BNB, ChainId.AVALANCHE, ChainId.BASE, ChainId.BASE_GOERLI, ChainId.ZORA, ChainId.ZORA_SEPOLIA];
 var NativeCurrencyName;
 
 (function (NativeCurrencyName) {
@@ -172,7 +174,8 @@ var OPTIMISM_SEPOLIA_ADDRESSES = {
   quoterAddress: '0x0FBEa6cf957d95ee9313490050F6A0DA68039404',
   v3MigratorAddress: '0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07',
   nonfungiblePositionManagerAddress: '0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d',
-  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5'
+  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5',
+  swapRouter02Address: '0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4'
 }; // arbitrum goerli v3 addresses
 
 var ARBITRUM_GOERLI_ADDRESSES = {
@@ -190,7 +193,8 @@ var ARBITRUM_SEPOLIA_ADDRESSES = {
   quoterAddress: '0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B',
   v3MigratorAddress: '0x398f43ef2c67B941147157DA1c5a868E906E043D',
   nonfungiblePositionManagerAddress: '0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65',
-  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9'
+  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9',
+  swapRouter02Address: '0x101F443B4d1b059569D643917553c771E1b9663E'
 }; // sepolia v3 addresses
 
 var SEPOLIA_ADDRESSES = {
@@ -199,7 +203,8 @@ var SEPOLIA_ADDRESSES = {
   quoterAddress: '0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3',
   v3MigratorAddress: '0x729004182cF005CEC8Bd85df140094b6aCbe8b15',
   nonfungiblePositionManagerAddress: '0x1238536071E1c677A632429e3655c799b22cDA52',
-  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07'
+  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07',
+  swapRouter02Address: '0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E'
 }; // Avalanche v3 addresses
 
 var AVALANCHE_ADDRESSES = {
@@ -230,7 +235,24 @@ var BASE_GOERLI_ADDRESSES = {
   tickLensAddress: '0x1acB873Ee909D0c98adB18e4474943249F931b92',
   swapRouter02Address: '0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d'
 };
-var CHAIN_TO_ADDRESSES_MAP = (_CHAIN_TO_ADDRESSES_M = {}, _CHAIN_TO_ADDRESSES_M[ChainId.MAINNET] = MAINNET_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.OPTIMISM] = OPTIMISM_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ARBITRUM_ONE] = ARBITRUM_ONE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.POLYGON] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.POLYGON_MUMBAI] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.GOERLI] = GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.CELO] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.CELO_ALFAJORES] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BNB] = BNB_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.OPTIMISM_GOERLI] = OPTIMISM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.OPTIMISM_SEPOLIA] = OPTIMISM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ARBITRUM_GOERLI] = ARBITRUM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ARBITRUM_SEPOLIA] = ARBITRUM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.SEPOLIA] = SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.AVALANCHE] = AVALANCHE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BASE] = BASE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BASE_GOERLI] = BASE_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M);
+var ZORA_ADDRESSES = {
+  v3CoreFactoryAddress: '0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb',
+  multicallAddress: '0xA51c76bEE6746cB487a7e9312E43e2b8f4A37C15',
+  quoterAddress: '0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df',
+  v3MigratorAddress: '0x048352d8dCF13686982C799da63fA6426a9D0b60',
+  nonfungiblePositionManagerAddress: '0xbC91e8DfA3fF18De43853372A3d7dfe585137D78',
+  tickLensAddress: '0x209AAda09D74Ad3B8D0E92910Eaf85D2357e3044',
+  swapRouter02Address: '0x7De04c96BE5159c3b5CeffC82aa176dc81281557'
+};
+var ZORA_SEPOLIA_ADDRESSES = {
+  v3CoreFactoryAddress: '0x4324A677D74764f46f33ED447964252441aA8Db6',
+  multicallAddress: '0xA1E7e3A69671C4494EC59Dbd442de930a93F911A',
+  quoterAddress: '0xC195976fEF0985886E37036E2DF62bF371E12Df0',
+  v3MigratorAddress: '0x65ef259b31bf1d977c37e9434658694267674897',
+  nonfungiblePositionManagerAddress: '0xB8458EaAe43292e3c1F7994EFd016bd653d23c20',
+  tickLensAddress: '0x23C0F71877a1Fc4e20A78018f9831365c85f3064'
+};
+var CHAIN_TO_ADDRESSES_MAP = (_CHAIN_TO_ADDRESSES_M = {}, _CHAIN_TO_ADDRESSES_M[ChainId.MAINNET] = MAINNET_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.OPTIMISM] = OPTIMISM_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ARBITRUM_ONE] = ARBITRUM_ONE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.POLYGON] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.POLYGON_MUMBAI] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.GOERLI] = GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.CELO] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.CELO_ALFAJORES] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BNB] = BNB_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.OPTIMISM_GOERLI] = OPTIMISM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.OPTIMISM_SEPOLIA] = OPTIMISM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ARBITRUM_GOERLI] = ARBITRUM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ARBITRUM_SEPOLIA] = ARBITRUM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.SEPOLIA] = SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.AVALANCHE] = AVALANCHE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BASE] = BASE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BASE_GOERLI] = BASE_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ZORA] = ZORA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ZORA_SEPOLIA] = ZORA_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M);
 /* V3 Contract Addresses */
 
 var V3_CORE_FACTORY_ADDRESSES = /*#__PURE__*/_extends({}, /*#__PURE__*/SUPPORTED_CHAINS.reduce(function (memo, chainId) {
@@ -302,7 +324,7 @@ var MIXED_ROUTE_QUOTER_V1_ADDRESSES = /*#__PURE__*/SUPPORTED_CHAINS.reduce(funct
   return memo;
 }, {});
 var SWAP_ROUTER_02_ADDRESSES = function SWAP_ROUTER_02_ADDRESSES(chainId) {
-  if (chainId in SUPPORTED_CHAINS) {
+  if (SUPPORTED_CHAINS.includes(chainId)) {
     var _CHAIN_TO_ADDRESSES_M2;
 
     var id = chainId;
diff --git a/node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js.map b/node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js.map
index fe3f77a..6d16ffc 100644
--- a/node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js.map
+++ b/node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"sdk-core.esm.js","sources":["../src/chains.ts","../src/addresses.ts","../src/constants.ts","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/percent.ts","../src/entities/fractions/price.ts","../src/entities/baseCurrency.ts","../src/entities/nativeCurrency.ts","../src/utils/validateAndParseAddress.ts","../src/entities/token.ts","../src/entities/weth9.ts","../src/entities/ether.ts","../src/utils/computePriceImpact.ts","../src/utils/sortedInsert.ts","../src/utils/sqrt.ts"],"sourcesContent":["export enum ChainId {\n  MAINNET = 1,\n  GOERLI = 5,\n  SEPOLIA = 11155111,\n  OPTIMISM = 10,\n  OPTIMISM_GOERLI = 420,\n  OPTIMISM_SEPOLIA = 11155420,\n  ARBITRUM_ONE = 42161,\n  ARBITRUM_GOERLI = 421613,\n  ARBITRUM_SEPOLIA = 421614,\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001,\n  CELO = 42220,\n  CELO_ALFAJORES = 44787,\n  GNOSIS = 100,\n  MOONBEAM = 1284,\n  BNB = 56,\n  AVALANCHE = 43114,\n  BASE_GOERLI = 84531,\n  BASE = 8453\n}\n\nexport const SUPPORTED_CHAINS = [\n  ChainId.MAINNET,\n  ChainId.OPTIMISM,\n  ChainId.OPTIMISM_GOERLI,\n  ChainId.OPTIMISM_SEPOLIA,\n  ChainId.ARBITRUM_ONE,\n  ChainId.ARBITRUM_GOERLI,\n  ChainId.ARBITRUM_SEPOLIA,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.GOERLI,\n  ChainId.SEPOLIA,\n  ChainId.CELO_ALFAJORES,\n  ChainId.CELO,\n  ChainId.BNB,\n  ChainId.AVALANCHE,\n  ChainId.BASE,\n  ChainId.BASE_GOERLI\n] as const\nexport type SupportedChainsType = typeof SUPPORTED_CHAINS[number]\n\nexport enum NativeCurrencyName {\n  // Strings match input for CLI\n  ETHER = 'ETH',\n  MATIC = 'MATIC',\n  CELO = 'CELO',\n  GNOSIS = 'XDAI',\n  MOONBEAM = 'GLMR',\n  BNB = 'BNB',\n  AVAX = 'AVAX'\n}\n","import { ChainId, SUPPORTED_CHAINS, SupportedChainsType } from './chains'\n\ntype AddressMap = { [chainId: number]: string }\n\ntype ChainAddresses = {\n  v3CoreFactoryAddress: string\n  multicallAddress: string\n  quoterAddress: string\n  v3MigratorAddress?: string\n  nonfungiblePositionManagerAddress?: string\n  tickLensAddress?: string\n  swapRouter02Address?: string\n  v1MixedRouteQuoterAddress?: string\n}\n\nconst DEFAULT_NETWORKS = [ChainId.MAINNET, ChainId.GOERLI, ChainId.SEPOLIA]\n\nfunction constructSameAddressMap(address: string, additionalNetworks: ChainId[] = []): AddressMap {\n  return DEFAULT_NETWORKS.concat(additionalNetworks).reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = address\n    return memo\n  }, {})\n}\n\nexport const UNI_ADDRESSES: AddressMap = constructSameAddressMap('0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', [\n  ChainId.OPTIMISM,\n  ChainId.ARBITRUM_ONE,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.SEPOLIA\n])\n\nexport const UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = '0x8B799381ac40b838BBA4131ffB26197C432AFe78'\n\n/**\n * @deprecated use V2_FACTORY_ADDRESSES instead\n */\nexport const V2_FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'\nexport const V2_FACTORY_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.GOERLI]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.SEPOLIA]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.OPTIMISM]: '0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf',\n  [ChainId.ARBITRUM_ONE]: '0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9',\n  [ChainId.AVALANCHE]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.BASE]: '0x8909dc15e40173ff4699343b6eb8132c65e18ec6',\n  [ChainId.BNB]: '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6',\n  [ChainId.POLYGON]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.CELO]: '0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f'\n}\n/**\n * @deprecated use V2_ROUTER_ADDRESSES instead\n */\nexport const V2_ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\nexport const V2_ROUTER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.GOERLI]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.SEPOLIA]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.ARBITRUM_ONE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.OPTIMISM]: '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2',\n  [ChainId.BASE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.AVALANCHE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.BNB]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.POLYGON]: '0xedf6066a2b290c185783862c7f4776a2c8077ad1'\n}\n\n// Networks that share most of the same addresses i.e. Mainnet, Goerli, Optimism, Arbitrum, Polygon\nconst DEFAULT_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\n  multicallAddress: '0x1F98415757620B543A52E61c46B32eB19261F984',\n  quoterAddress: '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6',\n  v3MigratorAddress: '0xA5644E29708357803b5A882D272c41cC0dF92B34',\n  nonfungiblePositionManagerAddress: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88'\n}\nconst MAINNET_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E'\n}\nconst GOERLI_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0xBa60b6e6fF25488308789E6e0A65D838be34194e'\n}\n\nconst OPTIMISM_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\nconst ARBITRUM_ONE_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  multicallAddress: '0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB',\n  tickLensAddress: '0xbfd8137f7d1516D3ea5cA83523914859ec47F573'\n}\nconst POLYGON_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\n\n// celo v3 addresses\nconst CELO_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc',\n  multicallAddress: '0x633987602DE5C4F337e3DbF265303A1080324204',\n  quoterAddress: '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8',\n  v3MigratorAddress: '0x3cFd4d48EDfDCC53D3f173F596f621064614C582',\n  nonfungiblePositionManagerAddress: '0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A',\n  tickLensAddress: '0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D'\n}\n\n// BNB v3 addresses\nconst BNB_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7',\n  multicallAddress: '0x963Df249eD09c358A4819E39d9Cd5736c3087184',\n  quoterAddress: '0x78D78E420Da98ad378D7799bE8f4AF69033EB077',\n  v3MigratorAddress: '0x32681814957e0C13117ddc0c2aba232b5c9e760f',\n  nonfungiblePositionManagerAddress: '0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613',\n  tickLensAddress: '0xD9270014D396281579760619CCf4c3af0501A47C',\n  swapRouter02Address: '0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2'\n}\n\n// optimism goerli addresses\nconst OPTIMISM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10',\n  multicallAddress: '0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd',\n  quoterAddress: '0x9569CbA925c8ca2248772A9A4976A516743A246F',\n  v3MigratorAddress: '0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8',\n  nonfungiblePositionManagerAddress: '0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6',\n  tickLensAddress: '0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e'\n}\n\n// optimism sepolia addresses\nconst OPTIMISM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF',\n  multicallAddress: '0x80e4e06841bb76AA9735E0448cB8d003C0EF009a',\n  quoterAddress: '0x0FBEa6cf957d95ee9313490050F6A0DA68039404',\n  v3MigratorAddress: '0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07',\n  nonfungiblePositionManagerAddress: '0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d',\n  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5'\n}\n\n// arbitrum goerli v3 addresses\nconst ARBITRUM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6',\n  multicallAddress: '0x8260CB40247290317a4c062F3542622367F206Ee',\n  quoterAddress: '0x1dd92b83591781D0C6d98d07391eea4b9a6008FA',\n  v3MigratorAddress: '0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3',\n  nonfungiblePositionManagerAddress: '0x622e4726a167799826d1E1D150b076A7725f5D81',\n  tickLensAddress: '0xb52429333da969a0C79a60930a4Bf0020E5D1DE8'\n}\n\n// arbitrum sepolia v3 addresses\nconst ARBITRUM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e',\n  multicallAddress: '0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A',\n  quoterAddress: '0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B',\n  v3MigratorAddress: '0x398f43ef2c67B941147157DA1c5a868E906E043D',\n  nonfungiblePositionManagerAddress: '0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65',\n  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9'\n}\n\n// sepolia v3 addresses\nconst SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x0227628f3F023bb0B980b67D528571c95c6DaC1c',\n  multicallAddress: '0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07',\n  quoterAddress: '0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3',\n  v3MigratorAddress: '0x729004182cF005CEC8Bd85df140094b6aCbe8b15',\n  nonfungiblePositionManagerAddress: '0x1238536071E1c677A632429e3655c799b22cDA52',\n  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07'\n}\n\n// Avalanche v3 addresses\nconst AVALANCHE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD',\n  multicallAddress: '0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2',\n  quoterAddress: '0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F',\n  v3MigratorAddress: '0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97',\n  nonfungiblePositionManagerAddress: '0x655C406EBFa14EE2006250925e54ec43AD184f8B',\n  tickLensAddress: '0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950',\n  swapRouter02Address: '0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE'\n}\n\nconst BASE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x33128a8fC17869897dcE68Ed026d694621f6FDfD',\n  multicallAddress: '0x091e99cb1C49331a94dD62755D168E941AbD0693',\n  quoterAddress: '0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a',\n  v3MigratorAddress: '0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7',\n  nonfungiblePositionManagerAddress: '0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1',\n  tickLensAddress: '0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d',\n  swapRouter02Address: '0x2626664c2603336E57B271c5C0b26F421741e481'\n}\n\n// Base Goerli v3 addresses\nconst BASE_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2',\n  multicallAddress: '0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439',\n  quoterAddress: '0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9',\n  v3MigratorAddress: '0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE',\n  nonfungiblePositionManagerAddress: '0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30',\n  tickLensAddress: '0x1acB873Ee909D0c98adB18e4474943249F931b92',\n  swapRouter02Address: '0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d'\n}\n\nexport const CHAIN_TO_ADDRESSES_MAP: Record<SupportedChainsType, ChainAddresses> = {\n  [ChainId.MAINNET]: MAINNET_ADDRESSES,\n  [ChainId.OPTIMISM]: OPTIMISM_ADDRESSES,\n  [ChainId.ARBITRUM_ONE]: ARBITRUM_ONE_ADDRESSES,\n  [ChainId.POLYGON]: POLYGON_ADDRESSES,\n  [ChainId.POLYGON_MUMBAI]: POLYGON_ADDRESSES,\n  [ChainId.GOERLI]: GOERLI_ADDRESSES,\n  [ChainId.CELO]: CELO_ADDRESSES,\n  [ChainId.CELO_ALFAJORES]: CELO_ADDRESSES,\n  [ChainId.BNB]: BNB_ADDRESSES,\n  [ChainId.OPTIMISM_GOERLI]: OPTIMISM_GOERLI_ADDRESSES,\n  [ChainId.OPTIMISM_SEPOLIA]: OPTIMISM_SEPOLIA_ADDRESSES,\n  [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_ADDRESSES,\n  [ChainId.ARBITRUM_SEPOLIA]: ARBITRUM_SEPOLIA_ADDRESSES,\n  [ChainId.SEPOLIA]: SEPOLIA_ADDRESSES,\n  [ChainId.AVALANCHE]: AVALANCHE_ADDRESSES,\n  [ChainId.BASE]: BASE_ADDRESSES,\n  [ChainId.BASE_GOERLI]: BASE_GOERLI_ADDRESSES\n}\n\n/* V3 Contract Addresses */\nexport const V3_CORE_FACTORY_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].v3CoreFactoryAddress\n    return memo\n  }, {})\n}\n\nexport const V3_MIGRATOR_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const v3MigratorAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v3MigratorAddress\n    if (v3MigratorAddress) {\n      memo[chainId] = v3MigratorAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MULTICALL_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].multicallAddress\n    return memo\n  }, {})\n}\n\n/**\n * The oldest V0 governance address\n */\nexport const GOVERNANCE_ALPHA_V0_ADDRESSES: AddressMap = constructSameAddressMap(\n  '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\n)\n/**\n * The older V1 governance address\n */\nexport const GOVERNANCE_ALPHA_V1_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0xC4e172459f1E7939D522503B81AFAaC1014CE6F6'\n}\n/**\n * The latest governor bravo that is currently admin of timelock\n */\nexport const GOVERNANCE_BRAVO_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x408ED6354d4973f66138C91495F2f2FCbd8724C3'\n}\n\nexport const TIMELOCK_ADDRESSES: AddressMap = constructSameAddressMap('0x1a9C8182C09F50C8318d769245beA52c32BE35BC')\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e'\n}\n\nexport const ARGENT_WALLET_DETECTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8'\n}\n\nexport const QUOTER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].quoterAddress\n    return memo\n  }, {})\n}\n\nexport const NONFUNGIBLE_POSITION_MANAGER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const nonfungiblePositionManagerAddress = CHAIN_TO_ADDRESSES_MAP[chainId].nonfungiblePositionManagerAddress\n    if (nonfungiblePositionManagerAddress) {\n      memo[chainId] = nonfungiblePositionManagerAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const ENS_REGISTRAR_ADDRESSES: AddressMap = {\n  ...constructSameAddressMap('0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e')\n}\n\nexport const SOCKS_CONTROLLER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x65770b5283117639760beA3F867b69b3697a91dd'\n}\n\nexport const TICK_LENS_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const tickLensAddress = CHAIN_TO_ADDRESSES_MAP[chainId].tickLensAddress\n    if (tickLensAddress) {\n      memo[chainId] = tickLensAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MIXED_ROUTE_QUOTER_V1_ADDRESSES: AddressMap = SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n  const v1MixedRouteQuoterAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v1MixedRouteQuoterAddress\n  if (v1MixedRouteQuoterAddress) {\n    memo[chainId] = v1MixedRouteQuoterAddress\n  }\n  return memo\n}, {})\n\nexport const SWAP_ROUTER_02_ADDRESSES = (chainId: number) => {\n  if (chainId in SUPPORTED_CHAINS) {\n    const id = chainId as SupportedChainsType\n    return CHAIN_TO_ADDRESSES_MAP[id].swapRouter02Address ?? '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45'\n  }\n  return ''\n}\n","import JSBI from 'jsbi'\n\n// exports for external consumption\nexport type BigintIsh = JSBI | string | number\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\n    this.numerator = JSBI.BigInt(numerator)\n    this.denominator = JSBI.BigInt(denominator)\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\n      return new Fraction(fractionish)\n\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\n    throw new Error('Could not parse fraction')\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { Currency } from '../currency'\nimport { Token } from '../token'\nimport { Fraction } from './fraction'\nimport _Big from 'big.js'\n\nimport toFormat from 'toformat'\nimport { BigintIsh, Rounding, MaxUint256 } from '../../constants'\n\nconst Big = toFormat(_Big)\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T\n  public readonly decimalScale: JSBI\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount)\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator)\n  }\n\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\n    super(numerator, denominator)\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\n    this.currency = currency\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const added = super.add(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const subtracted = super.subtract(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\n  }\n}\n","import JSBI from 'jsbi'\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator)\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other))\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other))\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other))\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other))\n  }\n\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Currency } from '../currency'\nimport { Fraction } from './fraction'\nimport { CurrencyAmount } from './currencyAmount'\n\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\n  public readonly baseCurrency: TBase // input i.e. denominator\n  public readonly quoteCurrency: TQuote // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [{ baseAmount: CurrencyAmount<TBase>; quoteAmount: CurrencyAmount<TQuote> }]\n  ) {\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\n\n    if (args.length === 4) {\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ]\n    }\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\n    const result = super.multiply(currencyAmount)\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { Token } from './token'\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class BaseCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\n\n    this.chainId = chainId\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token\n}\n","import { BaseCurrency } from './baseCurrency'\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends BaseCurrency {\n  public readonly isNative: true = true\n  public readonly isToken: false = false\n}\n","import { getAddress } from '@ethersproject/address'\n\n/**\n * Validates an address and returns the parsed (checksummed) version of that address\n * @param address the unchecksummed hex address\n */\nexport function validateAndParseAddress(address: string): string {\n  try {\n    return getAddress(address)\n  } catch (error) {\n    throw new Error(`${address} is not a valid address.`)\n  }\n}\n\n// Checks a string starts with 0x, is 42 characters long and contains only hex characters after 0x\nconst startsWith0xLen42HexRegex = /^0x[0-9a-fA-F]{40}$/\n\n/**\n * Checks if an address is valid by checking 0x prefix, length === 42 and hex encoding.\n * @param address the unchecksummed hex address\n */\nexport function checkValidAddress(address: string): string {\n  if (startsWith0xLen42HexRegex.test(address)) {\n    return address\n  }\n\n  throw new Error(`${address} is not a valid address.`)\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport invariant from 'tiny-invariant'\nimport { checkValidAddress, validateAndParseAddress } from '../utils/validateAndParseAddress'\nimport { BaseCurrency } from './baseCurrency'\nimport { Currency } from './currency'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends BaseCurrency {\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n\n  /**\n   * The contract address on the chain on which this token lives\n   */\n  public readonly address: string\n\n  /**\n   * Relevant for fee-on-transfer (FOT) token taxes,\n   * Not every ERC20 token is FOT token, so this field is optional\n   */\n  public readonly buyFeeBps?: BigNumber\n  public readonly sellFeeBps?: BigNumber\n\n  /**\n   *\n   * @param chainId {@link BaseCurrency#chainId}\n   * @param address The contract address on the chain on which this token lives\n   * @param decimals {@link BaseCurrency#decimals}\n   * @param symbol {@link BaseCurrency#symbol}\n   * @param name {@link BaseCurrency#name}\n   * @param bypassChecksum If true it only checks for length === 42, startsWith 0x and contains only hex characters\n   * @param buyFeeBps Buy fee tax for FOT tokens, in basis points\n   * @param sellFeeBps Sell fee tax for FOT tokens, in basis points\n   */\n  public constructor(\n    chainId: number,\n    address: string,\n    decimals: number,\n    symbol?: string,\n    name?: string,\n    bypassChecksum?: boolean,\n    buyFeeBps?: BigNumber,\n    sellFeeBps?: BigNumber\n  ) {\n    super(chainId, decimals, symbol, name)\n    if (bypassChecksum) {\n      this.address = checkValidAddress(address)\n    } else {\n      this.address = validateAndParseAddress(address)\n    }\n    if (buyFeeBps) {\n      invariant(buyFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    if (sellFeeBps) {\n      invariant(sellFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    this.buyFeeBps = buyFeeBps\n    this.sellFeeBps = sellFeeBps\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return other.isToken && this.chainId === other.chainId && this.address.toLowerCase() === other.address.toLowerCase()\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address.toLowerCase() !== other.address.toLowerCase(), 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this\n  }\n}\n","import { Token } from './token'\n\n/**\n * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped\n */\nexport const WETH9: { [chainId: number]: Token } = {\n  [1]: new Token(1, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'),\n  [3]: new Token(3, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [4]: new Token(4, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [5]: new Token(5, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'),\n  [42]: new Token(42, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'),\n\n  [10]: new Token(10, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [69]: new Token(69, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [11155420]: new Token(11155420, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [42161]: new Token(42161, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),\n  [421611]: new Token(421611, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),\n  [421614]: new Token(421614, '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73', 18, 'WETH', 'Wrapped Ether'),\n\n  [8453]: new Token(8453, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [56]: new Token(56, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n  [137]: new Token(137, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),\n  [43114]: new Token(43114, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX')\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { NativeCurrency } from './nativeCurrency'\nimport { Token } from './token'\nimport { WETH9 } from './weth9'\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ETH', 'Ether')\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId]\n    invariant(!!weth9, 'WRAPPED')\n    return weth9\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {}\n\n  public static onChain(chainId: number): Ether {\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency, CurrencyAmount, Percent, Price } from '../entities'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount)\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\n}\n","import invariant from 'tiny-invariant'\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\n\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst TWO = JSBI.BigInt(2)\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\n  }\n\n  let z: JSBI\n  let x: JSBI\n  z = value\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\n  while (JSBI.lessThan(x, z)) {\n    z = x\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\n  }\n  return z\n}\n"],"names":["ChainId","SUPPORTED_CHAINS","MAINNET","OPTIMISM","OPTIMISM_GOERLI","OPTIMISM_SEPOLIA","ARBITRUM_ONE","ARBITRUM_GOERLI","ARBITRUM_SEPOLIA","POLYGON","POLYGON_MUMBAI","GOERLI","SEPOLIA","CELO_ALFAJORES","CELO","BNB","AVALANCHE","BASE","BASE_GOERLI","NativeCurrencyName","DEFAULT_NETWORKS","constructSameAddressMap","address","additionalNetworks","concat","reduce","memo","chainId","UNI_ADDRESSES","UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS","V2_FACTORY_ADDRESS","V2_FACTORY_ADDRESSES","V2_ROUTER_ADDRESS","V2_ROUTER_ADDRESSES","DEFAULT_ADDRESSES","v3CoreFactoryAddress","multicallAddress","quoterAddress","v3MigratorAddress","nonfungiblePositionManagerAddress","MAINNET_ADDRESSES","v1MixedRouteQuoterAddress","GOERLI_ADDRESSES","OPTIMISM_ADDRESSES","ARBITRUM_ONE_ADDRESSES","tickLensAddress","POLYGON_ADDRESSES","CELO_ADDRESSES","BNB_ADDRESSES","swapRouter02Address","OPTIMISM_GOERLI_ADDRESSES","OPTIMISM_SEPOLIA_ADDRESSES","ARBITRUM_GOERLI_ADDRESSES","ARBITRUM_SEPOLIA_ADDRESSES","SEPOLIA_ADDRESSES","AVALANCHE_ADDRESSES","BASE_ADDRESSES","BASE_GOERLI_ADDRESSES","CHAIN_TO_ADDRESSES_MAP","V3_CORE_FACTORY_ADDRESSES","V3_MIGRATOR_ADDRESSES","MULTICALL_ADDRESSES","GOVERNANCE_ALPHA_V0_ADDRESSES","GOVERNANCE_ALPHA_V1_ADDRESSES","GOVERNANCE_BRAVO_ADDRESSES","TIMELOCK_ADDRESSES","MERKLE_DISTRIBUTOR_ADDRESS","ARGENT_WALLET_DETECTOR_ADDRESS","QUOTER_ADDRESSES","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","ENS_REGISTRAR_ADDRESSES","SOCKS_CONTROLLER_ADDRESSES","TICK_LENS_ADDRESSES","MIXED_ROUTE_QUOTER_V1_ADDRESSES","SWAP_ROUTER_02_ADDRESSES","id","TradeType","Rounding","MaxUint256","JSBI","BigInt","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","Error","invert","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","Number","isInteger","invariant","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","decimals","fromRawAmount","rawAmount","fromFractionalAmount","equals","added","subtracted","multiplied","divided","toExact","isToken","wrapped","ONE_HUNDRED","toPercent","fraction","Percent","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","quote","currencyAmount","adjustedForDecimals","BaseCurrency","symbol","name","isSafeInteger","NativeCurrency","validateAndParseAddress","getAddress","error","startsWith0xLen42HexRegex","checkValidAddress","test","Token","bypassChecksum","buyFeeBps","sellFeeBps","gte","BigNumber","from","toLowerCase","sortsBefore","WETH9","Ether","onChain","_etherCache","isNative","weth9","computePriceImpact","midPrice","inputAmount","outputAmount","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","push","isFull","lo","hi","mid","splice","pop","MAX_SAFE_INTEGER","ZERO","ONE","TWO","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"sdk-core.esm.js","sources":["../src/chains.ts","../src/addresses.ts","../src/constants.ts","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/percent.ts","../src/entities/fractions/price.ts","../src/entities/baseCurrency.ts","../src/entities/nativeCurrency.ts","../src/utils/validateAndParseAddress.ts","../src/entities/token.ts","../src/entities/weth9.ts","../src/entities/ether.ts","../src/utils/computePriceImpact.ts","../src/utils/sortedInsert.ts","../src/utils/sqrt.ts"],"sourcesContent":["export enum ChainId {\n  MAINNET = 1,\n  GOERLI = 5,\n  SEPOLIA = 11155111,\n  OPTIMISM = 10,\n  OPTIMISM_GOERLI = 420,\n  OPTIMISM_SEPOLIA = 11155420,\n  ARBITRUM_ONE = 42161,\n  ARBITRUM_GOERLI = 421613,\n  ARBITRUM_SEPOLIA = 421614,\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001,\n  CELO = 42220,\n  CELO_ALFAJORES = 44787,\n  GNOSIS = 100,\n  MOONBEAM = 1284,\n  BNB = 56,\n  AVALANCHE = 43114,\n  BASE_GOERLI = 84531,\n  BASE = 8453,\n  ZORA = 7777777,\n  ZORA_SEPOLIA = 999999999\n}\n\nexport const SUPPORTED_CHAINS = [\n  ChainId.MAINNET,\n  ChainId.OPTIMISM,\n  ChainId.OPTIMISM_GOERLI,\n  ChainId.OPTIMISM_SEPOLIA,\n  ChainId.ARBITRUM_ONE,\n  ChainId.ARBITRUM_GOERLI,\n  ChainId.ARBITRUM_SEPOLIA,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.GOERLI,\n  ChainId.SEPOLIA,\n  ChainId.CELO_ALFAJORES,\n  ChainId.CELO,\n  ChainId.BNB,\n  ChainId.AVALANCHE,\n  ChainId.BASE,\n  ChainId.BASE_GOERLI,\n  ChainId.ZORA,\n  ChainId.ZORA_SEPOLIA\n] as const\nexport type SupportedChainsType = typeof SUPPORTED_CHAINS[number]\n\nexport enum NativeCurrencyName {\n  // Strings match input for CLI\n  ETHER = 'ETH',\n  MATIC = 'MATIC',\n  CELO = 'CELO',\n  GNOSIS = 'XDAI',\n  MOONBEAM = 'GLMR',\n  BNB = 'BNB',\n  AVAX = 'AVAX'\n}\n","import { ChainId, SUPPORTED_CHAINS, SupportedChainsType } from './chains'\n\ntype AddressMap = { [chainId: number]: string }\n\ntype ChainAddresses = {\n  v3CoreFactoryAddress: string\n  multicallAddress: string\n  quoterAddress: string\n  v3MigratorAddress?: string\n  nonfungiblePositionManagerAddress?: string\n  tickLensAddress?: string\n  swapRouter02Address?: string\n  v1MixedRouteQuoterAddress?: string\n}\n\nconst DEFAULT_NETWORKS = [ChainId.MAINNET, ChainId.GOERLI, ChainId.SEPOLIA]\n\nfunction constructSameAddressMap(address: string, additionalNetworks: ChainId[] = []): AddressMap {\n  return DEFAULT_NETWORKS.concat(additionalNetworks).reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = address\n    return memo\n  }, {})\n}\n\nexport const UNI_ADDRESSES: AddressMap = constructSameAddressMap('0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', [\n  ChainId.OPTIMISM,\n  ChainId.ARBITRUM_ONE,\n  ChainId.POLYGON,\n  ChainId.POLYGON_MUMBAI,\n  ChainId.SEPOLIA\n])\n\nexport const UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = '0x8B799381ac40b838BBA4131ffB26197C432AFe78'\n\n/**\n * @deprecated use V2_FACTORY_ADDRESSES instead\n */\nexport const V2_FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'\nexport const V2_FACTORY_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.GOERLI]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.SEPOLIA]: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n  [ChainId.OPTIMISM]: '0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf',\n  [ChainId.ARBITRUM_ONE]: '0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9',\n  [ChainId.AVALANCHE]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.BASE]: '0x8909dc15e40173ff4699343b6eb8132c65e18ec6',\n  [ChainId.BNB]: '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6',\n  [ChainId.POLYGON]: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\n  [ChainId.CELO]: '0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f'\n}\n/**\n * @deprecated use V2_ROUTER_ADDRESSES instead\n */\nexport const V2_ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\nexport const V2_ROUTER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.GOERLI]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.SEPOLIA]: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n  [ChainId.ARBITRUM_ONE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.OPTIMISM]: '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2',\n  [ChainId.BASE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.AVALANCHE]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.BNB]: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  [ChainId.POLYGON]: '0xedf6066a2b290c185783862c7f4776a2c8077ad1'\n}\n\n// Networks that share most of the same addresses i.e. Mainnet, Goerli, Optimism, Arbitrum, Polygon\nconst DEFAULT_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\n  multicallAddress: '0x1F98415757620B543A52E61c46B32eB19261F984',\n  quoterAddress: '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6',\n  v3MigratorAddress: '0xA5644E29708357803b5A882D272c41cC0dF92B34',\n  nonfungiblePositionManagerAddress: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88'\n}\nconst MAINNET_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E'\n}\nconst GOERLI_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  v1MixedRouteQuoterAddress: '0xBa60b6e6fF25488308789E6e0A65D838be34194e'\n}\n\nconst OPTIMISM_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\nconst ARBITRUM_ONE_ADDRESSES: ChainAddresses = {\n  ...DEFAULT_ADDRESSES,\n  multicallAddress: '0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB',\n  tickLensAddress: '0xbfd8137f7d1516D3ea5cA83523914859ec47F573'\n}\nconst POLYGON_ADDRESSES: ChainAddresses = DEFAULT_ADDRESSES\n\n// celo v3 addresses\nconst CELO_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc',\n  multicallAddress: '0x633987602DE5C4F337e3DbF265303A1080324204',\n  quoterAddress: '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8',\n  v3MigratorAddress: '0x3cFd4d48EDfDCC53D3f173F596f621064614C582',\n  nonfungiblePositionManagerAddress: '0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A',\n  tickLensAddress: '0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D'\n}\n\n// BNB v3 addresses\nconst BNB_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7',\n  multicallAddress: '0x963Df249eD09c358A4819E39d9Cd5736c3087184',\n  quoterAddress: '0x78D78E420Da98ad378D7799bE8f4AF69033EB077',\n  v3MigratorAddress: '0x32681814957e0C13117ddc0c2aba232b5c9e760f',\n  nonfungiblePositionManagerAddress: '0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613',\n  tickLensAddress: '0xD9270014D396281579760619CCf4c3af0501A47C',\n  swapRouter02Address: '0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2'\n}\n\n// optimism goerli addresses\nconst OPTIMISM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10',\n  multicallAddress: '0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd',\n  quoterAddress: '0x9569CbA925c8ca2248772A9A4976A516743A246F',\n  v3MigratorAddress: '0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8',\n  nonfungiblePositionManagerAddress: '0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6',\n  tickLensAddress: '0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e'\n}\n\n// optimism sepolia addresses\nconst OPTIMISM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF',\n  multicallAddress: '0x80e4e06841bb76AA9735E0448cB8d003C0EF009a',\n  quoterAddress: '0x0FBEa6cf957d95ee9313490050F6A0DA68039404',\n  v3MigratorAddress: '0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07',\n  nonfungiblePositionManagerAddress: '0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d',\n  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5',\n  swapRouter02Address: '0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4'\n}\n\n// arbitrum goerli v3 addresses\nconst ARBITRUM_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6',\n  multicallAddress: '0x8260CB40247290317a4c062F3542622367F206Ee',\n  quoterAddress: '0x1dd92b83591781D0C6d98d07391eea4b9a6008FA',\n  v3MigratorAddress: '0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3',\n  nonfungiblePositionManagerAddress: '0x622e4726a167799826d1E1D150b076A7725f5D81',\n  tickLensAddress: '0xb52429333da969a0C79a60930a4Bf0020E5D1DE8'\n}\n\n// arbitrum sepolia v3 addresses\nconst ARBITRUM_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e',\n  multicallAddress: '0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A',\n  quoterAddress: '0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B',\n  v3MigratorAddress: '0x398f43ef2c67B941147157DA1c5a868E906E043D',\n  nonfungiblePositionManagerAddress: '0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65',\n  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9',\n  swapRouter02Address: '0x101F443B4d1b059569D643917553c771E1b9663E'\n}\n\n// sepolia v3 addresses\nconst SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x0227628f3F023bb0B980b67D528571c95c6DaC1c',\n  multicallAddress: '0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07',\n  quoterAddress: '0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3',\n  v3MigratorAddress: '0x729004182cF005CEC8Bd85df140094b6aCbe8b15',\n  nonfungiblePositionManagerAddress: '0x1238536071E1c677A632429e3655c799b22cDA52',\n  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07',\n  swapRouter02Address: '0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E'\n}\n\n// Avalanche v3 addresses\nconst AVALANCHE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD',\n  multicallAddress: '0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2',\n  quoterAddress: '0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F',\n  v3MigratorAddress: '0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97',\n  nonfungiblePositionManagerAddress: '0x655C406EBFa14EE2006250925e54ec43AD184f8B',\n  tickLensAddress: '0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950',\n  swapRouter02Address: '0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE'\n}\n\nconst BASE_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x33128a8fC17869897dcE68Ed026d694621f6FDfD',\n  multicallAddress: '0x091e99cb1C49331a94dD62755D168E941AbD0693',\n  quoterAddress: '0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a',\n  v3MigratorAddress: '0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7',\n  nonfungiblePositionManagerAddress: '0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1',\n  tickLensAddress: '0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d',\n  swapRouter02Address: '0x2626664c2603336E57B271c5C0b26F421741e481'\n}\n\n// Base Goerli v3 addresses\nconst BASE_GOERLI_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2',\n  multicallAddress: '0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439',\n  quoterAddress: '0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9',\n  v3MigratorAddress: '0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE',\n  nonfungiblePositionManagerAddress: '0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30',\n  tickLensAddress: '0x1acB873Ee909D0c98adB18e4474943249F931b92',\n  swapRouter02Address: '0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d'\n}\n\nconst ZORA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb',\n  multicallAddress: '0xA51c76bEE6746cB487a7e9312E43e2b8f4A37C15',\n  quoterAddress: '0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df',\n  v3MigratorAddress: '0x048352d8dCF13686982C799da63fA6426a9D0b60',\n  nonfungiblePositionManagerAddress: '0xbC91e8DfA3fF18De43853372A3d7dfe585137D78',\n  tickLensAddress: '0x209AAda09D74Ad3B8D0E92910Eaf85D2357e3044',\n  swapRouter02Address: '0x7De04c96BE5159c3b5CeffC82aa176dc81281557'\n}\n\nconst ZORA_SEPOLIA_ADDRESSES: ChainAddresses = {\n  v3CoreFactoryAddress: '0x4324A677D74764f46f33ED447964252441aA8Db6',\n  multicallAddress: '0xA1E7e3A69671C4494EC59Dbd442de930a93F911A',\n  quoterAddress: '0xC195976fEF0985886E37036E2DF62bF371E12Df0',\n  v3MigratorAddress: '0x65ef259b31bf1d977c37e9434658694267674897',\n  nonfungiblePositionManagerAddress: '0xB8458EaAe43292e3c1F7994EFd016bd653d23c20',\n  tickLensAddress: '0x23C0F71877a1Fc4e20A78018f9831365c85f3064'\n}\n\nexport const CHAIN_TO_ADDRESSES_MAP: Record<SupportedChainsType, ChainAddresses> = {\n  [ChainId.MAINNET]: MAINNET_ADDRESSES,\n  [ChainId.OPTIMISM]: OPTIMISM_ADDRESSES,\n  [ChainId.ARBITRUM_ONE]: ARBITRUM_ONE_ADDRESSES,\n  [ChainId.POLYGON]: POLYGON_ADDRESSES,\n  [ChainId.POLYGON_MUMBAI]: POLYGON_ADDRESSES,\n  [ChainId.GOERLI]: GOERLI_ADDRESSES,\n  [ChainId.CELO]: CELO_ADDRESSES,\n  [ChainId.CELO_ALFAJORES]: CELO_ADDRESSES,\n  [ChainId.BNB]: BNB_ADDRESSES,\n  [ChainId.OPTIMISM_GOERLI]: OPTIMISM_GOERLI_ADDRESSES,\n  [ChainId.OPTIMISM_SEPOLIA]: OPTIMISM_SEPOLIA_ADDRESSES,\n  [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_ADDRESSES,\n  [ChainId.ARBITRUM_SEPOLIA]: ARBITRUM_SEPOLIA_ADDRESSES,\n  [ChainId.SEPOLIA]: SEPOLIA_ADDRESSES,\n  [ChainId.AVALANCHE]: AVALANCHE_ADDRESSES,\n  [ChainId.BASE]: BASE_ADDRESSES,\n  [ChainId.BASE_GOERLI]: BASE_GOERLI_ADDRESSES,\n  [ChainId.ZORA]: ZORA_ADDRESSES,\n  [ChainId.ZORA_SEPOLIA]: ZORA_SEPOLIA_ADDRESSES\n}\n\n/* V3 Contract Addresses */\nexport const V3_CORE_FACTORY_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].v3CoreFactoryAddress\n    return memo\n  }, {})\n}\n\nexport const V3_MIGRATOR_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const v3MigratorAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v3MigratorAddress\n    if (v3MigratorAddress) {\n      memo[chainId] = v3MigratorAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MULTICALL_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].multicallAddress\n    return memo\n  }, {})\n}\n\n/**\n * The oldest V0 governance address\n */\nexport const GOVERNANCE_ALPHA_V0_ADDRESSES: AddressMap = constructSameAddressMap(\n  '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\n)\n/**\n * The older V1 governance address\n */\nexport const GOVERNANCE_ALPHA_V1_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0xC4e172459f1E7939D522503B81AFAaC1014CE6F6'\n}\n/**\n * The latest governor bravo that is currently admin of timelock\n */\nexport const GOVERNANCE_BRAVO_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x408ED6354d4973f66138C91495F2f2FCbd8724C3'\n}\n\nexport const TIMELOCK_ADDRESSES: AddressMap = constructSameAddressMap('0x1a9C8182C09F50C8318d769245beA52c32BE35BC')\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e'\n}\n\nexport const ARGENT_WALLET_DETECTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8'\n}\n\nexport const QUOTER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].quoterAddress\n    return memo\n  }, {})\n}\n\nexport const NONFUNGIBLE_POSITION_MANAGER_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const nonfungiblePositionManagerAddress = CHAIN_TO_ADDRESSES_MAP[chainId].nonfungiblePositionManagerAddress\n    if (nonfungiblePositionManagerAddress) {\n      memo[chainId] = nonfungiblePositionManagerAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const ENS_REGISTRAR_ADDRESSES: AddressMap = {\n  ...constructSameAddressMap('0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e')\n}\n\nexport const SOCKS_CONTROLLER_ADDRESSES: AddressMap = {\n  [ChainId.MAINNET]: '0x65770b5283117639760beA3F867b69b3697a91dd'\n}\n\nexport const TICK_LENS_ADDRESSES: AddressMap = {\n  ...SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n    const tickLensAddress = CHAIN_TO_ADDRESSES_MAP[chainId].tickLensAddress\n    if (tickLensAddress) {\n      memo[chainId] = tickLensAddress\n    }\n    return memo\n  }, {})\n}\n\nexport const MIXED_ROUTE_QUOTER_V1_ADDRESSES: AddressMap = SUPPORTED_CHAINS.reduce<AddressMap>((memo, chainId) => {\n  const v1MixedRouteQuoterAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v1MixedRouteQuoterAddress\n  if (v1MixedRouteQuoterAddress) {\n    memo[chainId] = v1MixedRouteQuoterAddress\n  }\n  return memo\n}, {})\n\nexport const SWAP_ROUTER_02_ADDRESSES = (chainId: number) => {\n  if (SUPPORTED_CHAINS.includes(chainId)) {\n    const id = chainId as SupportedChainsType\n    return CHAIN_TO_ADDRESSES_MAP[id].swapRouter02Address ?? '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45'\n  }\n  return ''\n}\n","import JSBI from 'jsbi'\n\n// exports for external consumption\nexport type BigintIsh = JSBI | string | number\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\n    this.numerator = JSBI.BigInt(numerator)\n    this.denominator = JSBI.BigInt(denominator)\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\n      return new Fraction(fractionish)\n\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\n    throw new Error('Could not parse fraction')\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { Currency } from '../currency'\nimport { Token } from '../token'\nimport { Fraction } from './fraction'\nimport _Big from 'big.js'\n\nimport toFormat from 'toformat'\nimport { BigintIsh, Rounding, MaxUint256 } from '../../constants'\n\nconst Big = toFormat(_Big)\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T\n  public readonly decimalScale: JSBI\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount)\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator)\n  }\n\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\n    super(numerator, denominator)\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\n    this.currency = currency\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const added = super.add(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const subtracted = super.subtract(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\n  }\n}\n","import JSBI from 'jsbi'\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator)\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other))\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other))\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other))\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other))\n  }\n\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { Currency } from '../currency'\nimport { Fraction } from './fraction'\nimport { CurrencyAmount } from './currencyAmount'\n\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\n  public readonly baseCurrency: TBase // input i.e. denominator\n  public readonly quoteCurrency: TQuote // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [{ baseAmount: CurrencyAmount<TBase>; quoteAmount: CurrencyAmount<TQuote> }]\n  ) {\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\n\n    if (args.length === 4) {\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ]\n    }\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\n    const result = super.multiply(currencyAmount)\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { Token } from './token'\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class BaseCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\n\n    this.chainId = chainId\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token\n}\n","import { BaseCurrency } from './baseCurrency'\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends BaseCurrency {\n  public readonly isNative: true = true\n  public readonly isToken: false = false\n}\n","import { getAddress } from '@ethersproject/address'\n\n/**\n * Validates an address and returns the parsed (checksummed) version of that address\n * @param address the unchecksummed hex address\n */\nexport function validateAndParseAddress(address: string): string {\n  try {\n    return getAddress(address)\n  } catch (error) {\n    throw new Error(`${address} is not a valid address.`)\n  }\n}\n\n// Checks a string starts with 0x, is 42 characters long and contains only hex characters after 0x\nconst startsWith0xLen42HexRegex = /^0x[0-9a-fA-F]{40}$/\n\n/**\n * Checks if an address is valid by checking 0x prefix, length === 42 and hex encoding.\n * @param address the unchecksummed hex address\n */\nexport function checkValidAddress(address: string): string {\n  if (startsWith0xLen42HexRegex.test(address)) {\n    return address\n  }\n\n  throw new Error(`${address} is not a valid address.`)\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport invariant from 'tiny-invariant'\nimport { checkValidAddress, validateAndParseAddress } from '../utils/validateAndParseAddress'\nimport { BaseCurrency } from './baseCurrency'\nimport { Currency } from './currency'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends BaseCurrency {\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n\n  /**\n   * The contract address on the chain on which this token lives\n   */\n  public readonly address: string\n\n  /**\n   * Relevant for fee-on-transfer (FOT) token taxes,\n   * Not every ERC20 token is FOT token, so this field is optional\n   */\n  public readonly buyFeeBps?: BigNumber\n  public readonly sellFeeBps?: BigNumber\n\n  /**\n   *\n   * @param chainId {@link BaseCurrency#chainId}\n   * @param address The contract address on the chain on which this token lives\n   * @param decimals {@link BaseCurrency#decimals}\n   * @param symbol {@link BaseCurrency#symbol}\n   * @param name {@link BaseCurrency#name}\n   * @param bypassChecksum If true it only checks for length === 42, startsWith 0x and contains only hex characters\n   * @param buyFeeBps Buy fee tax for FOT tokens, in basis points\n   * @param sellFeeBps Sell fee tax for FOT tokens, in basis points\n   */\n  public constructor(\n    chainId: number,\n    address: string,\n    decimals: number,\n    symbol?: string,\n    name?: string,\n    bypassChecksum?: boolean,\n    buyFeeBps?: BigNumber,\n    sellFeeBps?: BigNumber\n  ) {\n    super(chainId, decimals, symbol, name)\n    if (bypassChecksum) {\n      this.address = checkValidAddress(address)\n    } else {\n      this.address = validateAndParseAddress(address)\n    }\n    if (buyFeeBps) {\n      invariant(buyFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    if (sellFeeBps) {\n      invariant(sellFeeBps.gte(BigNumber.from(0)), 'NON-NEGATIVE FOT FEES')\n    }\n    this.buyFeeBps = buyFeeBps\n    this.sellFeeBps = sellFeeBps\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return other.isToken && this.chainId === other.chainId && this.address.toLowerCase() === other.address.toLowerCase()\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address.toLowerCase() !== other.address.toLowerCase(), 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this\n  }\n}\n","import { Token } from './token'\n\n/**\n * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped\n */\nexport const WETH9: { [chainId: number]: Token } = {\n  [1]: new Token(1, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'),\n  [3]: new Token(3, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [4]: new Token(4, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [5]: new Token(5, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'),\n  [42]: new Token(42, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'),\n\n  [10]: new Token(10, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [69]: new Token(69, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [11155420]: new Token(11155420, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [42161]: new Token(42161, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),\n  [421611]: new Token(421611, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),\n  [421614]: new Token(421614, '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73', 18, 'WETH', 'Wrapped Ether'),\n\n  [8453]: new Token(8453, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n\n  [56]: new Token(56, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n  [137]: new Token(137, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),\n  [43114]: new Token(43114, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX')\n}\n","import invariant from 'tiny-invariant'\nimport { Currency } from './currency'\nimport { NativeCurrency } from './nativeCurrency'\nimport { Token } from './token'\nimport { WETH9 } from './weth9'\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ETH', 'Ether')\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId]\n    invariant(!!weth9, 'WRAPPED')\n    return weth9\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {}\n\n  public static onChain(chainId: number): Ether {\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency, CurrencyAmount, Percent, Price } from '../entities'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount)\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\n}\n","import invariant from 'tiny-invariant'\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\n\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst TWO = JSBI.BigInt(2)\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\n  }\n\n  let z: JSBI\n  let x: JSBI\n  z = value\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\n  while (JSBI.lessThan(x, z)) {\n    z = x\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\n  }\n  return z\n}\n"],"names":["ChainId","SUPPORTED_CHAINS","MAINNET","OPTIMISM","OPTIMISM_GOERLI","OPTIMISM_SEPOLIA","ARBITRUM_ONE","ARBITRUM_GOERLI","ARBITRUM_SEPOLIA","POLYGON","POLYGON_MUMBAI","GOERLI","SEPOLIA","CELO_ALFAJORES","CELO","BNB","AVALANCHE","BASE","BASE_GOERLI","ZORA","ZORA_SEPOLIA","NativeCurrencyName","DEFAULT_NETWORKS","constructSameAddressMap","address","additionalNetworks","concat","reduce","memo","chainId","UNI_ADDRESSES","UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS","V2_FACTORY_ADDRESS","V2_FACTORY_ADDRESSES","V2_ROUTER_ADDRESS","V2_ROUTER_ADDRESSES","DEFAULT_ADDRESSES","v3CoreFactoryAddress","multicallAddress","quoterAddress","v3MigratorAddress","nonfungiblePositionManagerAddress","MAINNET_ADDRESSES","v1MixedRouteQuoterAddress","GOERLI_ADDRESSES","OPTIMISM_ADDRESSES","ARBITRUM_ONE_ADDRESSES","tickLensAddress","POLYGON_ADDRESSES","CELO_ADDRESSES","BNB_ADDRESSES","swapRouter02Address","OPTIMISM_GOERLI_ADDRESSES","OPTIMISM_SEPOLIA_ADDRESSES","ARBITRUM_GOERLI_ADDRESSES","ARBITRUM_SEPOLIA_ADDRESSES","SEPOLIA_ADDRESSES","AVALANCHE_ADDRESSES","BASE_ADDRESSES","BASE_GOERLI_ADDRESSES","ZORA_ADDRESSES","ZORA_SEPOLIA_ADDRESSES","CHAIN_TO_ADDRESSES_MAP","V3_CORE_FACTORY_ADDRESSES","V3_MIGRATOR_ADDRESSES","MULTICALL_ADDRESSES","GOVERNANCE_ALPHA_V0_ADDRESSES","GOVERNANCE_ALPHA_V1_ADDRESSES","GOVERNANCE_BRAVO_ADDRESSES","TIMELOCK_ADDRESSES","MERKLE_DISTRIBUTOR_ADDRESS","ARGENT_WALLET_DETECTOR_ADDRESS","QUOTER_ADDRESSES","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","ENS_REGISTRAR_ADDRESSES","SOCKS_CONTROLLER_ADDRESSES","TICK_LENS_ADDRESSES","MIXED_ROUTE_QUOTER_V1_ADDRESSES","SWAP_ROUTER_02_ADDRESSES","includes","id","TradeType","Rounding","MaxUint256","JSBI","BigInt","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","Error","invert","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","Number","isInteger","invariant","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","decimals","fromRawAmount","rawAmount","fromFractionalAmount","equals","added","subtracted","multiplied","divided","toExact","isToken","wrapped","ONE_HUNDRED","toPercent","fraction","Percent","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","quote","currencyAmount","adjustedForDecimals","BaseCurrency","symbol","name","isSafeInteger","NativeCurrency","validateAndParseAddress","getAddress","error","startsWith0xLen42HexRegex","checkValidAddress","test","Token","bypassChecksum","buyFeeBps","sellFeeBps","gte","BigNumber","from","toLowerCase","sortsBefore","WETH9","Ether","onChain","_etherCache","isNative","weth9","computePriceImpact","midPrice","inputAmount","outputAmount","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","push","isFull","lo","hi","mid","splice","pop","MAX_SAFE_INTEGER","ZERO","ONE","TWO","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.js b/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.js
new file mode 100644
index 0000000..759f8d7
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.js
@@ -0,0 +1,14 @@
+import { Percent } from '../entities';
+/**
+ * Returns the percent difference between the mid price and the execution price, i.e. price impact.
+ * @param midPrice mid price before the trade
+ * @param inputAmount the input amount of the trade
+ * @param outputAmount the output amount of the trade
+ */
+export function computePriceImpact(midPrice, inputAmount, outputAmount) {
+    const quotedOutputAmount = midPrice.quote(inputAmount);
+    // calculate price impact := (exactQuote - outputAmount) / exactQuote
+    const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount);
+    return new Percent(priceImpact.numerator, priceImpact.denominator);
+}
+//# sourceMappingURL=computePriceImpact.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.js.map b/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.js.map
new file mode 100644
index 0000000..4678eba
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"computePriceImpact.js","sourceRoot":"","sources":["../../src/utils/computePriceImpact.ts"],"names":[],"mappings":"AAAA,OAAO,EAA4B,OAAO,EAAS,MAAM,aAAa,CAAA;AAEtE;;;;;GAKG;AACH,MAAM,UAAU,kBAAkB,CAChC,QAA8B,EAC9B,WAAkC,EAClC,YAAoC;IAEpC,MAAM,kBAAkB,GAAG,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;IACtD,qEAAqE;IACrE,MAAM,WAAW,GAAG,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAA;IACxF,OAAO,IAAI,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,WAAW,CAAC,WAAW,CAAC,CAAA;AACpE,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.test.d.ts b/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.test.js b/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.test.js
new file mode 100644
index 0000000..dacdea2
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.test.js
@@ -0,0 +1,18 @@
+import { CurrencyAmount, Ether, Percent, Price, Token } from '../entities';
+import { computePriceImpact } from './computePriceImpact';
+describe('#computePriceImpact', () => {
+    const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';
+    const ADDRESS_ONE = '0x0000000000000000000000000000000000000001';
+    const t0 = new Token(1, ADDRESS_ZERO, 18);
+    const t1 = new Token(1, ADDRESS_ONE, 18);
+    it('is correct for zero', () => {
+        expect(computePriceImpact(new Price(Ether.onChain(1), t0, 10, 100), CurrencyAmount.fromRawAmount(Ether.onChain(1), 10), CurrencyAmount.fromRawAmount(t0, 100))).toEqual(new Percent(0, 10000));
+    });
+    it('is correct for half output', () => {
+        expect(computePriceImpact(new Price(t0, t1, 10, 100), CurrencyAmount.fromRawAmount(t0, 10), CurrencyAmount.fromRawAmount(t1, 50))).toEqual(new Percent(5000, 10000));
+    });
+    it('is negative for more output', () => {
+        expect(computePriceImpact(new Price(t0, t1, 10, 100), CurrencyAmount.fromRawAmount(t0, 10), CurrencyAmount.fromRawAmount(t1, 200))).toEqual(new Percent(-10000, 10000));
+    });
+});
+//# sourceMappingURL=computePriceImpact.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.test.js.map b/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.test.js.map
new file mode 100644
index 0000000..7b7e399
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"computePriceImpact.test.js","sourceRoot":"","sources":["../../src/utils/computePriceImpact.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,aAAa,CAAA;AAC1E,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAA;AAEzD,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,MAAM,YAAY,GAAG,4CAA4C,CAAA;IACjE,MAAM,WAAW,GAAG,4CAA4C,CAAA;IAEhE,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,YAAY,EAAE,EAAE,CAAC,CAAA;IACzC,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC,CAAA;IAExC,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAC7B,MAAM,CACJ,kBAAkB,CAChB,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACxC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAClD,cAAc,CAAC,aAAa,CAAC,EAAE,EAAE,GAAG,CAAC,CACtC,CACF,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAA;IAClC,CAAC,CAAC,CAAA;IACF,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;QACpC,MAAM,CACJ,kBAAkB,CAChB,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAC1B,cAAc,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,EACpC,cAAc,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,CACrC,CACF,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAA;IACrC,CAAC,CAAC,CAAA;IACF,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;QACrC,MAAM,CACJ,kBAAkB,CAChB,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAC1B,cAAc,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,EACpC,cAAc,CAAC,aAAa,CAAC,EAAE,EAAE,GAAG,CAAC,CACtC,CACF,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAA;IACvC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/index.js b/node_modules/@uniswap/sdk-core/dist/utils/index.js
new file mode 100644
index 0000000..75c428f
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/index.js
@@ -0,0 +1,5 @@
+export { computePriceImpact } from './computePriceImpact';
+export { sortedInsert } from './sortedInsert';
+export { sqrt } from './sqrt';
+export { validateAndParseAddress } from './validateAndParseAddress';
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/index.js.map b/node_modules/@uniswap/sdk-core/dist/utils/index.js.map
new file mode 100644
index 0000000..97c1e2f
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/utils/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAA;AACzD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAA;AAC7C,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAA;AAC7B,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.js b/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.js
new file mode 100644
index 0000000..ada4def
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.js
@@ -0,0 +1,33 @@
+import invariant from 'tiny-invariant';
+// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to
+// `maxSize` by removing the last item
+export function sortedInsert(items, add, maxSize, comparator) {
+    invariant(maxSize > 0, 'MAX_SIZE_ZERO');
+    // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize
+    invariant(items.length <= maxSize, 'ITEMS_SIZE');
+    // short circuit first item add
+    if (items.length === 0) {
+        items.push(add);
+        return null;
+    }
+    else {
+        const isFull = items.length === maxSize;
+        // short circuit if full and the additional item does not come before the last item
+        if (isFull && comparator(items[items.length - 1], add) <= 0) {
+            return add;
+        }
+        let lo = 0, hi = items.length;
+        while (lo < hi) {
+            const mid = (lo + hi) >>> 1;
+            if (comparator(items[mid], add) <= 0) {
+                lo = mid + 1;
+            }
+            else {
+                hi = mid;
+            }
+        }
+        items.splice(lo, 0, add);
+        return isFull ? items.pop() : null;
+    }
+}
+//# sourceMappingURL=sortedInsert.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.js.map b/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.js.map
new file mode 100644
index 0000000..e5ceb1c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"sortedInsert.js","sourceRoot":"","sources":["../../src/utils/sortedInsert.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,gBAAgB,CAAA;AAEtC,+GAA+G;AAC/G,sCAAsC;AACtC,MAAM,UAAU,YAAY,CAAI,KAAU,EAAE,GAAM,EAAE,OAAe,EAAE,UAAkC;IACrG,SAAS,CAAC,OAAO,GAAG,CAAC,EAAE,eAAe,CAAC,CAAA;IACvC,kHAAkH;IAClH,SAAS,CAAC,KAAK,CAAC,MAAM,IAAI,OAAO,EAAE,YAAY,CAAC,CAAA;IAEhD,+BAA+B;IAC/B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QACf,OAAO,IAAI,CAAA;KACZ;SAAM;QACL,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,KAAK,OAAO,CAAA;QACvC,mFAAmF;QACnF,IAAI,MAAM,IAAI,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;YAC3D,OAAO,GAAG,CAAA;SACX;QAED,IAAI,EAAE,GAAG,CAAC,EACR,EAAE,GAAG,KAAK,CAAC,MAAM,CAAA;QAEnB,OAAO,EAAE,GAAG,EAAE,EAAE;YACd,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAA;YAC3B,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;gBACpC,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;aACb;iBAAM;gBACL,EAAE,GAAG,GAAG,CAAA;aACT;SACF;QACD,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;QACxB,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAG,CAAC,CAAC,CAAC,IAAI,CAAA;KACpC;AACH,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.test.d.ts b/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.test.js b/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.test.js
new file mode 100644
index 0000000..d8dae42
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.test.js
@@ -0,0 +1,58 @@
+import { sortedInsert } from './sortedInsert';
+describe('#sortedInsert', () => {
+    const comp = (a, b) => a - b;
+    it('throws if maxSize is 0', () => {
+        expect(() => sortedInsert([], 1, 0, comp)).toThrow('MAX_SIZE_ZERO');
+    });
+    it('throws if items.length > maxSize', () => {
+        expect(() => sortedInsert([1, 2], 1, 1, comp)).toThrow('ITEMS_SIZE');
+    });
+    it('adds if empty', () => {
+        const arr = [];
+        expect(sortedInsert(arr, 3, 2, comp)).toEqual(null);
+        expect(arr).toEqual([3]);
+    });
+    it('adds if not full', () => {
+        const arr = [1, 5];
+        expect(sortedInsert(arr, 3, 3, comp)).toEqual(null);
+        expect(arr).toEqual([1, 3, 5]);
+    });
+    it('adds if will not be full after', () => {
+        const arr = [1];
+        expect(sortedInsert(arr, 0, 3, comp)).toEqual(null);
+        expect(arr).toEqual([0, 1]);
+    });
+    it('returns add if sorts after last', () => {
+        const arr = [1, 2, 3];
+        expect(sortedInsert(arr, 4, 3, comp)).toEqual(4);
+        expect(arr).toEqual([1, 2, 3]);
+    });
+    it('removes from end if full', () => {
+        const arr = [1, 3, 4];
+        expect(sortedInsert(arr, 2, 3, comp)).toEqual(4);
+        expect(arr).toEqual([1, 2, 3]);
+    });
+    it('uses comparator', () => {
+        const arr = [4, 2, 1];
+        expect(sortedInsert(arr, 3, 3, (a, b) => comp(a, b) * -1)).toEqual(1);
+        expect(arr).toEqual([4, 3, 2]);
+    });
+    describe('maxSize of 1', () => {
+        it('empty add', () => {
+            const arr = [];
+            expect(sortedInsert(arr, 3, 1, comp)).toEqual(null);
+            expect(arr).toEqual([3]);
+        });
+        it('full add greater', () => {
+            const arr = [2];
+            expect(sortedInsert(arr, 3, 1, comp)).toEqual(3);
+            expect(arr).toEqual([2]);
+        });
+        it('full add lesser', () => {
+            const arr = [4];
+            expect(sortedInsert(arr, 3, 1, comp)).toEqual(4);
+            expect(arr).toEqual([3]);
+        });
+    });
+});
+//# sourceMappingURL=sortedInsert.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.test.js.map b/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.test.js.map
new file mode 100644
index 0000000..834af11
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"sortedInsert.test.js","sourceRoot":"","sources":["../../src/utils/sortedInsert.test.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/sqrt.js b/node_modules/@uniswap/sdk-core/dist/utils/sqrt.js
new file mode 100644
index 0000000..f8a9fa4
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/sqrt.js
@@ -0,0 +1,27 @@
+import JSBI from 'jsbi';
+import invariant from 'tiny-invariant';
+export const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER);
+const ZERO = JSBI.BigInt(0);
+const ONE = JSBI.BigInt(1);
+const TWO = JSBI.BigInt(2);
+/**
+ * Computes floor(sqrt(value))
+ * @param value the value for which to compute the square root, rounded down
+ */
+export function sqrt(value) {
+    invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE');
+    // rely on built in sqrt if possible
+    if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {
+        return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))));
+    }
+    let z;
+    let x;
+    z = value;
+    x = JSBI.add(JSBI.divide(value, TWO), ONE);
+    while (JSBI.lessThan(x, z)) {
+        z = x;
+        x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO);
+    }
+    return z;
+}
+//# sourceMappingURL=sqrt.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/sqrt.js.map b/node_modules/@uniswap/sdk-core/dist/utils/sqrt.js.map
new file mode 100644
index 0000000..daa820e
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/sqrt.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"sqrt.js","sourceRoot":"","sources":["../../src/utils/sqrt.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,SAAS,MAAM,gBAAgB,CAAA;AAEtC,MAAM,CAAC,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAA;AAEpE,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AAE1B;;;GAGG;AACH,MAAM,UAAU,IAAI,CAAC,KAAW;IAC9B,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,UAAU,CAAC,CAAA;IAE3D,oCAAoC;IACpC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,gBAAgB,CAAC,EAAE;QAC1C,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;KAChE;IAED,IAAI,CAAO,CAAA;IACX,IAAI,CAAO,CAAA;IACX,CAAC,GAAG,KAAK,CAAA;IACT,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAA;IAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QAC1B,CAAC,GAAG,CAAC,CAAA;QACL,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;KACzD;IACD,OAAO,CAAC,CAAA;AACV,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/sqrt.test.d.ts b/node_modules/@uniswap/sdk-core/dist/utils/sqrt.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/sqrt.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/sqrt.test.js b/node_modules/@uniswap/sdk-core/dist/utils/sqrt.test.js
new file mode 100644
index 0000000..1df8883
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/sqrt.test.js
@@ -0,0 +1,23 @@
+import JSBI from 'jsbi';
+import { MaxUint256 } from '../constants';
+import { sqrt } from './sqrt';
+describe('#sqrt', () => {
+    it('correct for 0-1000', () => {
+        for (let i = 0; i < 1000; i++) {
+            expect(sqrt(JSBI.BigInt(i))).toEqual(JSBI.BigInt(Math.floor(Math.sqrt(i))));
+        }
+    });
+    describe('correct for all even powers of 2', () => {
+        for (let i = 0; i < 256; i++) {
+            it(`2^${i * 2}`, () => {
+                const root = JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(i));
+                const rootSquared = JSBI.multiply(root, root);
+                expect(sqrt(rootSquared)).toEqual(root);
+            });
+        }
+    });
+    it('correct for MaxUint256', () => {
+        expect(sqrt(MaxUint256)).toEqual(JSBI.BigInt('340282366920938463463374607431768211455'));
+    });
+});
+//# sourceMappingURL=sqrt.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/sqrt.test.js.map b/node_modules/@uniswap/sdk-core/dist/utils/sqrt.test.js.map
new file mode 100644
index 0000000..f8e5ba5
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/sqrt.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"sqrt.test.js","sourceRoot":"","sources":["../../src/utils/sqrt.test.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AACzC,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAA;AAE7B,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;IACrB,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;SAC5E;IACH,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE;gBACpB,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;gBAC9D,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;gBAE7C,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YACzC,CAAC,CAAC,CAAA;SACH;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,yCAAyC,CAAC,CAAC,CAAA;IAC1F,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.js b/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.js
new file mode 100644
index 0000000..fcdc654
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.js
@@ -0,0 +1,26 @@
+import { getAddress } from '@ethersproject/address';
+/**
+ * Validates an address and returns the parsed (checksummed) version of that address
+ * @param address the unchecksummed hex address
+ */
+export function validateAndParseAddress(address) {
+    try {
+        return getAddress(address);
+    }
+    catch (error) {
+        throw new Error(`${address} is not a valid address.`);
+    }
+}
+// Checks a string starts with 0x, is 42 characters long and contains only hex characters after 0x
+const startsWith0xLen42HexRegex = /^0x[0-9a-fA-F]{40}$/;
+/**
+ * Checks if an address is valid by checking 0x prefix, length === 42 and hex encoding.
+ * @param address the unchecksummed hex address
+ */
+export function checkValidAddress(address) {
+    if (startsWith0xLen42HexRegex.test(address)) {
+        return address;
+    }
+    throw new Error(`${address} is not a valid address.`);
+}
+//# sourceMappingURL=validateAndParseAddress.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.js.map b/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.js.map
new file mode 100644
index 0000000..5034265
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"validateAndParseAddress.js","sourceRoot":"","sources":["../../src/utils/validateAndParseAddress.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAA;AAEnD;;;GAGG;AACH,MAAM,UAAU,uBAAuB,CAAC,OAAe;IACrD,IAAI;QACF,OAAO,UAAU,CAAC,OAAO,CAAC,CAAA;KAC3B;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,GAAG,OAAO,0BAA0B,CAAC,CAAA;KACtD;AACH,CAAC;AAED,kGAAkG;AAClG,MAAM,yBAAyB,GAAG,qBAAqB,CAAA;AAEvD;;;GAGG;AACH,MAAM,UAAU,iBAAiB,CAAC,OAAe;IAC/C,IAAI,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;QAC3C,OAAO,OAAO,CAAA;KACf;IAED,MAAM,IAAI,KAAK,CAAC,GAAG,OAAO,0BAA0B,CAAC,CAAA;AACvD,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.test.d.ts b/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.test.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.test.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.test.js b/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.test.js
new file mode 100644
index 0000000..2c6ee8d
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.test.js
@@ -0,0 +1,30 @@
+import { checkValidAddress, validateAndParseAddress } from './validateAndParseAddress';
+describe('#validateAndParseAddress', () => {
+    it('returns same address if already checksummed', () => {
+        expect(validateAndParseAddress('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f')).toEqual('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f');
+    });
+    it('returns checksummed address if not checksummed', () => {
+        expect(validateAndParseAddress('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'.toLowerCase())).toEqual('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f');
+    });
+    it('throws if not valid', () => {
+        expect(() => validateAndParseAddress('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6')).toThrow('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6 is not a valid address.');
+    });
+});
+describe('#checkValidAddress', () => {
+    it('returns same address if valid', () => {
+        expect(checkValidAddress('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f')).toEqual('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f');
+    });
+    it('throws if length < 42', () => {
+        expect(() => checkValidAddress('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6')).toThrow('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6 is not a valid address.');
+    });
+    it('throws if length > 42', () => {
+        expect(() => checkValidAddress('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6fA')).toThrow('0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6fA is not a valid address.');
+    });
+    it('throws if it does not start with 0x', () => {
+        expect(() => checkValidAddress('5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f')).toThrow('5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f is not a valid address.');
+    });
+    it('throws if it is not a HEX string', () => {
+        expect(() => checkValidAddress('0x5C69bEe701ef814a2X6a3EDD4B1652CB9cc5aA6f')).toThrow('0x5C69bEe701ef814a2X6a3EDD4B1652CB9cc5aA6f is not a valid address.');
+    });
+});
+//# sourceMappingURL=validateAndParseAddress.test.js.map
\ No newline at end of file
diff --git a/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.test.js.map b/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.test.js.map
new file mode 100644
index 0000000..b03a12d
--- /dev/null
+++ b/node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"validateAndParseAddress.test.js","sourceRoot":"","sources":["../../src/utils/validateAndParseAddress.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAA;AAEtF,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACxC,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,MAAM,CAAC,uBAAuB,CAAC,4CAA4C,CAAC,CAAC,CAAC,OAAO,CACnF,4CAA4C,CAC7C,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,MAAM,CAAC,uBAAuB,CAAC,4CAA4C,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CACjG,4CAA4C,CAC7C,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE;QAC7B,MAAM,CAAC,GAAG,EAAE,CAAC,uBAAuB,CAAC,2CAA2C,CAAC,CAAC,CAAC,OAAO,CACxF,mEAAmE,CACpE,CAAA;IACH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AAEF,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,MAAM,CAAC,iBAAiB,CAAC,4CAA4C,CAAC,CAAC,CAAC,OAAO,CAC7E,4CAA4C,CAC7C,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,2CAA2C,CAAC,CAAC,CAAC,OAAO,CAClF,mEAAmE,CACpE,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,6CAA6C,CAAC,CAAC,CAAC,OAAO,CACpF,qEAAqE,CACtE,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC7C,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,0CAA0C,CAAC,CAAC,CAAC,OAAO,CACjF,kEAAkE,CACnE,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC1C,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,4CAA4C,CAAC,CAAC,CAAC,OAAO,CACnF,oEAAoE,CACrE,CAAA;IACH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
